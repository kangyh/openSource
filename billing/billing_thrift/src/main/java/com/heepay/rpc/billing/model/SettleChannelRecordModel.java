/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.heepay.rpc.billing.model;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2016-09-07")
public class SettleChannelRecordModel implements org.apache.thrift.TBase<SettleChannelRecordModel, SettleChannelRecordModel._Fields>, java.io.Serializable, Cloneable, Comparable<SettleChannelRecordModel> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SettleChannelRecordModel");

  private static final org.apache.thrift.protocol.TField SETTLE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("settleId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField CHANNEL_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("channelCode", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CHANNEL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("channelName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CHANNEL_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("channelType", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CURRENCY_FIELD_DESC = new org.apache.thrift.protocol.TField("currency", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField PAY_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("payNum", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField TOTAL_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("totalAmount", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField CHECK_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("checkTime", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField SETTLE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("settleTime", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField SETTLE_CYC_FIELD_DESC = new org.apache.thrift.protocol.TField("settleCyc", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField SETTLE_BATH_FIELD_DESC = new org.apache.thrift.protocol.TField("settleBath", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField COST_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("costTime", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField COST_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("costAmount", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField COST_SETTLE_CYC_FIELD_DESC = new org.apache.thrift.protocol.TField("costSettleCyc", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField CHECK_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("checkStatus", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField SETTLE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("settleStatus", org.apache.thrift.protocol.TType.STRING, (short)16);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new SettleChannelRecordModelStandardSchemeFactory());
    schemes.put(TupleScheme.class, new SettleChannelRecordModelTupleSchemeFactory());
  }

  public long settleId; // required
  public String channelCode; // required
  public String channelName; // required
  public String channelType; // required
  public String currency; // required
  public int payNum; // required
  public String totalAmount; // required
  public String checkTime; // required
  public String settleTime; // required
  public String settleCyc; // required
  public String settleBath; // required
  public String costTime; // required
  public String costAmount; // required
  public String costSettleCyc; // required
  public String checkStatus; // required
  public String settleStatus; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SETTLE_ID((short)1, "settleId"),
    CHANNEL_CODE((short)2, "channelCode"),
    CHANNEL_NAME((short)3, "channelName"),
    CHANNEL_TYPE((short)4, "channelType"),
    CURRENCY((short)5, "currency"),
    PAY_NUM((short)6, "payNum"),
    TOTAL_AMOUNT((short)7, "totalAmount"),
    CHECK_TIME((short)8, "checkTime"),
    SETTLE_TIME((short)9, "settleTime"),
    SETTLE_CYC((short)10, "settleCyc"),
    SETTLE_BATH((short)11, "settleBath"),
    COST_TIME((short)12, "costTime"),
    COST_AMOUNT((short)13, "costAmount"),
    COST_SETTLE_CYC((short)14, "costSettleCyc"),
    CHECK_STATUS((short)15, "checkStatus"),
    SETTLE_STATUS((short)16, "settleStatus");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SETTLE_ID
          return SETTLE_ID;
        case 2: // CHANNEL_CODE
          return CHANNEL_CODE;
        case 3: // CHANNEL_NAME
          return CHANNEL_NAME;
        case 4: // CHANNEL_TYPE
          return CHANNEL_TYPE;
        case 5: // CURRENCY
          return CURRENCY;
        case 6: // PAY_NUM
          return PAY_NUM;
        case 7: // TOTAL_AMOUNT
          return TOTAL_AMOUNT;
        case 8: // CHECK_TIME
          return CHECK_TIME;
        case 9: // SETTLE_TIME
          return SETTLE_TIME;
        case 10: // SETTLE_CYC
          return SETTLE_CYC;
        case 11: // SETTLE_BATH
          return SETTLE_BATH;
        case 12: // COST_TIME
          return COST_TIME;
        case 13: // COST_AMOUNT
          return COST_AMOUNT;
        case 14: // COST_SETTLE_CYC
          return COST_SETTLE_CYC;
        case 15: // CHECK_STATUS
          return CHECK_STATUS;
        case 16: // SETTLE_STATUS
          return SETTLE_STATUS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SETTLEID_ISSET_ID = 0;
  private static final int __PAYNUM_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SETTLE_ID, new org.apache.thrift.meta_data.FieldMetaData("settleId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CHANNEL_CODE, new org.apache.thrift.meta_data.FieldMetaData("channelCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHANNEL_NAME, new org.apache.thrift.meta_data.FieldMetaData("channelName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHANNEL_TYPE, new org.apache.thrift.meta_data.FieldMetaData("channelType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CURRENCY, new org.apache.thrift.meta_data.FieldMetaData("currency", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAY_NUM, new org.apache.thrift.meta_data.FieldMetaData("payNum", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TOTAL_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("totalAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHECK_TIME, new org.apache.thrift.meta_data.FieldMetaData("checkTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLE_TIME, new org.apache.thrift.meta_data.FieldMetaData("settleTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLE_CYC, new org.apache.thrift.meta_data.FieldMetaData("settleCyc", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLE_BATH, new org.apache.thrift.meta_data.FieldMetaData("settleBath", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COST_TIME, new org.apache.thrift.meta_data.FieldMetaData("costTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COST_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("costAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COST_SETTLE_CYC, new org.apache.thrift.meta_data.FieldMetaData("costSettleCyc", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHECK_STATUS, new org.apache.thrift.meta_data.FieldMetaData("checkStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLE_STATUS, new org.apache.thrift.meta_data.FieldMetaData("settleStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SettleChannelRecordModel.class, metaDataMap);
  }

  public SettleChannelRecordModel() {
  }

  public SettleChannelRecordModel(
    long settleId,
    String channelCode,
    String channelName,
    String channelType,
    String currency,
    int payNum,
    String totalAmount,
    String checkTime,
    String settleTime,
    String settleCyc,
    String settleBath,
    String costTime,
    String costAmount,
    String costSettleCyc,
    String checkStatus,
    String settleStatus)
  {
    this();
    this.settleId = settleId;
    setSettleIdIsSet(true);
    this.channelCode = channelCode;
    this.channelName = channelName;
    this.channelType = channelType;
    this.currency = currency;
    this.payNum = payNum;
    setPayNumIsSet(true);
    this.totalAmount = totalAmount;
    this.checkTime = checkTime;
    this.settleTime = settleTime;
    this.settleCyc = settleCyc;
    this.settleBath = settleBath;
    this.costTime = costTime;
    this.costAmount = costAmount;
    this.costSettleCyc = costSettleCyc;
    this.checkStatus = checkStatus;
    this.settleStatus = settleStatus;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SettleChannelRecordModel(SettleChannelRecordModel other) {
    __isset_bitfield = other.__isset_bitfield;
    this.settleId = other.settleId;
    if (other.isSetChannelCode()) {
      this.channelCode = other.channelCode;
    }
    if (other.isSetChannelName()) {
      this.channelName = other.channelName;
    }
    if (other.isSetChannelType()) {
      this.channelType = other.channelType;
    }
    if (other.isSetCurrency()) {
      this.currency = other.currency;
    }
    this.payNum = other.payNum;
    if (other.isSetTotalAmount()) {
      this.totalAmount = other.totalAmount;
    }
    if (other.isSetCheckTime()) {
      this.checkTime = other.checkTime;
    }
    if (other.isSetSettleTime()) {
      this.settleTime = other.settleTime;
    }
    if (other.isSetSettleCyc()) {
      this.settleCyc = other.settleCyc;
    }
    if (other.isSetSettleBath()) {
      this.settleBath = other.settleBath;
    }
    if (other.isSetCostTime()) {
      this.costTime = other.costTime;
    }
    if (other.isSetCostAmount()) {
      this.costAmount = other.costAmount;
    }
    if (other.isSetCostSettleCyc()) {
      this.costSettleCyc = other.costSettleCyc;
    }
    if (other.isSetCheckStatus()) {
      this.checkStatus = other.checkStatus;
    }
    if (other.isSetSettleStatus()) {
      this.settleStatus = other.settleStatus;
    }
  }

  public SettleChannelRecordModel deepCopy() {
    return new SettleChannelRecordModel(this);
  }

  @Override
  public void clear() {
    setSettleIdIsSet(false);
    this.settleId = 0;
    this.channelCode = null;
    this.channelName = null;
    this.channelType = null;
    this.currency = null;
    setPayNumIsSet(false);
    this.payNum = 0;
    this.totalAmount = null;
    this.checkTime = null;
    this.settleTime = null;
    this.settleCyc = null;
    this.settleBath = null;
    this.costTime = null;
    this.costAmount = null;
    this.costSettleCyc = null;
    this.checkStatus = null;
    this.settleStatus = null;
  }

  public long getSettleId() {
    return this.settleId;
  }

  public SettleChannelRecordModel setSettleId(long settleId) {
    this.settleId = settleId;
    setSettleIdIsSet(true);
    return this;
  }

  public void unsetSettleId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SETTLEID_ISSET_ID);
  }

  /** Returns true if field settleId is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleId() {
    return EncodingUtils.testBit(__isset_bitfield, __SETTLEID_ISSET_ID);
  }

  public void setSettleIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SETTLEID_ISSET_ID, value);
  }

  public String getChannelCode() {
    return this.channelCode;
  }

  public SettleChannelRecordModel setChannelCode(String channelCode) {
    this.channelCode = channelCode;
    return this;
  }

  public void unsetChannelCode() {
    this.channelCode = null;
  }

  /** Returns true if field channelCode is set (has been assigned a value) and false otherwise */
  public boolean isSetChannelCode() {
    return this.channelCode != null;
  }

  public void setChannelCodeIsSet(boolean value) {
    if (!value) {
      this.channelCode = null;
    }
  }

  public String getChannelName() {
    return this.channelName;
  }

  public SettleChannelRecordModel setChannelName(String channelName) {
    this.channelName = channelName;
    return this;
  }

  public void unsetChannelName() {
    this.channelName = null;
  }

  /** Returns true if field channelName is set (has been assigned a value) and false otherwise */
  public boolean isSetChannelName() {
    return this.channelName != null;
  }

  public void setChannelNameIsSet(boolean value) {
    if (!value) {
      this.channelName = null;
    }
  }

  public String getChannelType() {
    return this.channelType;
  }

  public SettleChannelRecordModel setChannelType(String channelType) {
    this.channelType = channelType;
    return this;
  }

  public void unsetChannelType() {
    this.channelType = null;
  }

  /** Returns true if field channelType is set (has been assigned a value) and false otherwise */
  public boolean isSetChannelType() {
    return this.channelType != null;
  }

  public void setChannelTypeIsSet(boolean value) {
    if (!value) {
      this.channelType = null;
    }
  }

  public String getCurrency() {
    return this.currency;
  }

  public SettleChannelRecordModel setCurrency(String currency) {
    this.currency = currency;
    return this;
  }

  public void unsetCurrency() {
    this.currency = null;
  }

  /** Returns true if field currency is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrency() {
    return this.currency != null;
  }

  public void setCurrencyIsSet(boolean value) {
    if (!value) {
      this.currency = null;
    }
  }

  public int getPayNum() {
    return this.payNum;
  }

  public SettleChannelRecordModel setPayNum(int payNum) {
    this.payNum = payNum;
    setPayNumIsSet(true);
    return this;
  }

  public void unsetPayNum() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAYNUM_ISSET_ID);
  }

  /** Returns true if field payNum is set (has been assigned a value) and false otherwise */
  public boolean isSetPayNum() {
    return EncodingUtils.testBit(__isset_bitfield, __PAYNUM_ISSET_ID);
  }

  public void setPayNumIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAYNUM_ISSET_ID, value);
  }

  public String getTotalAmount() {
    return this.totalAmount;
  }

  public SettleChannelRecordModel setTotalAmount(String totalAmount) {
    this.totalAmount = totalAmount;
    return this;
  }

  public void unsetTotalAmount() {
    this.totalAmount = null;
  }

  /** Returns true if field totalAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalAmount() {
    return this.totalAmount != null;
  }

  public void setTotalAmountIsSet(boolean value) {
    if (!value) {
      this.totalAmount = null;
    }
  }

  public String getCheckTime() {
    return this.checkTime;
  }

  public SettleChannelRecordModel setCheckTime(String checkTime) {
    this.checkTime = checkTime;
    return this;
  }

  public void unsetCheckTime() {
    this.checkTime = null;
  }

  /** Returns true if field checkTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCheckTime() {
    return this.checkTime != null;
  }

  public void setCheckTimeIsSet(boolean value) {
    if (!value) {
      this.checkTime = null;
    }
  }

  public String getSettleTime() {
    return this.settleTime;
  }

  public SettleChannelRecordModel setSettleTime(String settleTime) {
    this.settleTime = settleTime;
    return this;
  }

  public void unsetSettleTime() {
    this.settleTime = null;
  }

  /** Returns true if field settleTime is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleTime() {
    return this.settleTime != null;
  }

  public void setSettleTimeIsSet(boolean value) {
    if (!value) {
      this.settleTime = null;
    }
  }

  public String getSettleCyc() {
    return this.settleCyc;
  }

  public SettleChannelRecordModel setSettleCyc(String settleCyc) {
    this.settleCyc = settleCyc;
    return this;
  }

  public void unsetSettleCyc() {
    this.settleCyc = null;
  }

  /** Returns true if field settleCyc is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleCyc() {
    return this.settleCyc != null;
  }

  public void setSettleCycIsSet(boolean value) {
    if (!value) {
      this.settleCyc = null;
    }
  }

  public String getSettleBath() {
    return this.settleBath;
  }

  public SettleChannelRecordModel setSettleBath(String settleBath) {
    this.settleBath = settleBath;
    return this;
  }

  public void unsetSettleBath() {
    this.settleBath = null;
  }

  /** Returns true if field settleBath is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleBath() {
    return this.settleBath != null;
  }

  public void setSettleBathIsSet(boolean value) {
    if (!value) {
      this.settleBath = null;
    }
  }

  public String getCostTime() {
    return this.costTime;
  }

  public SettleChannelRecordModel setCostTime(String costTime) {
    this.costTime = costTime;
    return this;
  }

  public void unsetCostTime() {
    this.costTime = null;
  }

  /** Returns true if field costTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCostTime() {
    return this.costTime != null;
  }

  public void setCostTimeIsSet(boolean value) {
    if (!value) {
      this.costTime = null;
    }
  }

  public String getCostAmount() {
    return this.costAmount;
  }

  public SettleChannelRecordModel setCostAmount(String costAmount) {
    this.costAmount = costAmount;
    return this;
  }

  public void unsetCostAmount() {
    this.costAmount = null;
  }

  /** Returns true if field costAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetCostAmount() {
    return this.costAmount != null;
  }

  public void setCostAmountIsSet(boolean value) {
    if (!value) {
      this.costAmount = null;
    }
  }

  public String getCostSettleCyc() {
    return this.costSettleCyc;
  }

  public SettleChannelRecordModel setCostSettleCyc(String costSettleCyc) {
    this.costSettleCyc = costSettleCyc;
    return this;
  }

  public void unsetCostSettleCyc() {
    this.costSettleCyc = null;
  }

  /** Returns true if field costSettleCyc is set (has been assigned a value) and false otherwise */
  public boolean isSetCostSettleCyc() {
    return this.costSettleCyc != null;
  }

  public void setCostSettleCycIsSet(boolean value) {
    if (!value) {
      this.costSettleCyc = null;
    }
  }

  public String getCheckStatus() {
    return this.checkStatus;
  }

  public SettleChannelRecordModel setCheckStatus(String checkStatus) {
    this.checkStatus = checkStatus;
    return this;
  }

  public void unsetCheckStatus() {
    this.checkStatus = null;
  }

  /** Returns true if field checkStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetCheckStatus() {
    return this.checkStatus != null;
  }

  public void setCheckStatusIsSet(boolean value) {
    if (!value) {
      this.checkStatus = null;
    }
  }

  public String getSettleStatus() {
    return this.settleStatus;
  }

  public SettleChannelRecordModel setSettleStatus(String settleStatus) {
    this.settleStatus = settleStatus;
    return this;
  }

  public void unsetSettleStatus() {
    this.settleStatus = null;
  }

  /** Returns true if field settleStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleStatus() {
    return this.settleStatus != null;
  }

  public void setSettleStatusIsSet(boolean value) {
    if (!value) {
      this.settleStatus = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case SETTLE_ID:
      if (value == null) {
        unsetSettleId();
      } else {
        setSettleId((Long)value);
      }
      break;

    case CHANNEL_CODE:
      if (value == null) {
        unsetChannelCode();
      } else {
        setChannelCode((String)value);
      }
      break;

    case CHANNEL_NAME:
      if (value == null) {
        unsetChannelName();
      } else {
        setChannelName((String)value);
      }
      break;

    case CHANNEL_TYPE:
      if (value == null) {
        unsetChannelType();
      } else {
        setChannelType((String)value);
      }
      break;

    case CURRENCY:
      if (value == null) {
        unsetCurrency();
      } else {
        setCurrency((String)value);
      }
      break;

    case PAY_NUM:
      if (value == null) {
        unsetPayNum();
      } else {
        setPayNum((Integer)value);
      }
      break;

    case TOTAL_AMOUNT:
      if (value == null) {
        unsetTotalAmount();
      } else {
        setTotalAmount((String)value);
      }
      break;

    case CHECK_TIME:
      if (value == null) {
        unsetCheckTime();
      } else {
        setCheckTime((String)value);
      }
      break;

    case SETTLE_TIME:
      if (value == null) {
        unsetSettleTime();
      } else {
        setSettleTime((String)value);
      }
      break;

    case SETTLE_CYC:
      if (value == null) {
        unsetSettleCyc();
      } else {
        setSettleCyc((String)value);
      }
      break;

    case SETTLE_BATH:
      if (value == null) {
        unsetSettleBath();
      } else {
        setSettleBath((String)value);
      }
      break;

    case COST_TIME:
      if (value == null) {
        unsetCostTime();
      } else {
        setCostTime((String)value);
      }
      break;

    case COST_AMOUNT:
      if (value == null) {
        unsetCostAmount();
      } else {
        setCostAmount((String)value);
      }
      break;

    case COST_SETTLE_CYC:
      if (value == null) {
        unsetCostSettleCyc();
      } else {
        setCostSettleCyc((String)value);
      }
      break;

    case CHECK_STATUS:
      if (value == null) {
        unsetCheckStatus();
      } else {
        setCheckStatus((String)value);
      }
      break;

    case SETTLE_STATUS:
      if (value == null) {
        unsetSettleStatus();
      } else {
        setSettleStatus((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case SETTLE_ID:
      return getSettleId();

    case CHANNEL_CODE:
      return getChannelCode();

    case CHANNEL_NAME:
      return getChannelName();

    case CHANNEL_TYPE:
      return getChannelType();

    case CURRENCY:
      return getCurrency();

    case PAY_NUM:
      return getPayNum();

    case TOTAL_AMOUNT:
      return getTotalAmount();

    case CHECK_TIME:
      return getCheckTime();

    case SETTLE_TIME:
      return getSettleTime();

    case SETTLE_CYC:
      return getSettleCyc();

    case SETTLE_BATH:
      return getSettleBath();

    case COST_TIME:
      return getCostTime();

    case COST_AMOUNT:
      return getCostAmount();

    case COST_SETTLE_CYC:
      return getCostSettleCyc();

    case CHECK_STATUS:
      return getCheckStatus();

    case SETTLE_STATUS:
      return getSettleStatus();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case SETTLE_ID:
      return isSetSettleId();
    case CHANNEL_CODE:
      return isSetChannelCode();
    case CHANNEL_NAME:
      return isSetChannelName();
    case CHANNEL_TYPE:
      return isSetChannelType();
    case CURRENCY:
      return isSetCurrency();
    case PAY_NUM:
      return isSetPayNum();
    case TOTAL_AMOUNT:
      return isSetTotalAmount();
    case CHECK_TIME:
      return isSetCheckTime();
    case SETTLE_TIME:
      return isSetSettleTime();
    case SETTLE_CYC:
      return isSetSettleCyc();
    case SETTLE_BATH:
      return isSetSettleBath();
    case COST_TIME:
      return isSetCostTime();
    case COST_AMOUNT:
      return isSetCostAmount();
    case COST_SETTLE_CYC:
      return isSetCostSettleCyc();
    case CHECK_STATUS:
      return isSetCheckStatus();
    case SETTLE_STATUS:
      return isSetSettleStatus();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SettleChannelRecordModel)
      return this.equals((SettleChannelRecordModel)that);
    return false;
  }

  public boolean equals(SettleChannelRecordModel that) {
    if (that == null)
      return false;

    boolean this_present_settleId = true;
    boolean that_present_settleId = true;
    if (this_present_settleId || that_present_settleId) {
      if (!(this_present_settleId && that_present_settleId))
        return false;
      if (this.settleId != that.settleId)
        return false;
    }

    boolean this_present_channelCode = true && this.isSetChannelCode();
    boolean that_present_channelCode = true && that.isSetChannelCode();
    if (this_present_channelCode || that_present_channelCode) {
      if (!(this_present_channelCode && that_present_channelCode))
        return false;
      if (!this.channelCode.equals(that.channelCode))
        return false;
    }

    boolean this_present_channelName = true && this.isSetChannelName();
    boolean that_present_channelName = true && that.isSetChannelName();
    if (this_present_channelName || that_present_channelName) {
      if (!(this_present_channelName && that_present_channelName))
        return false;
      if (!this.channelName.equals(that.channelName))
        return false;
    }

    boolean this_present_channelType = true && this.isSetChannelType();
    boolean that_present_channelType = true && that.isSetChannelType();
    if (this_present_channelType || that_present_channelType) {
      if (!(this_present_channelType && that_present_channelType))
        return false;
      if (!this.channelType.equals(that.channelType))
        return false;
    }

    boolean this_present_currency = true && this.isSetCurrency();
    boolean that_present_currency = true && that.isSetCurrency();
    if (this_present_currency || that_present_currency) {
      if (!(this_present_currency && that_present_currency))
        return false;
      if (!this.currency.equals(that.currency))
        return false;
    }

    boolean this_present_payNum = true;
    boolean that_present_payNum = true;
    if (this_present_payNum || that_present_payNum) {
      if (!(this_present_payNum && that_present_payNum))
        return false;
      if (this.payNum != that.payNum)
        return false;
    }

    boolean this_present_totalAmount = true && this.isSetTotalAmount();
    boolean that_present_totalAmount = true && that.isSetTotalAmount();
    if (this_present_totalAmount || that_present_totalAmount) {
      if (!(this_present_totalAmount && that_present_totalAmount))
        return false;
      if (!this.totalAmount.equals(that.totalAmount))
        return false;
    }

    boolean this_present_checkTime = true && this.isSetCheckTime();
    boolean that_present_checkTime = true && that.isSetCheckTime();
    if (this_present_checkTime || that_present_checkTime) {
      if (!(this_present_checkTime && that_present_checkTime))
        return false;
      if (!this.checkTime.equals(that.checkTime))
        return false;
    }

    boolean this_present_settleTime = true && this.isSetSettleTime();
    boolean that_present_settleTime = true && that.isSetSettleTime();
    if (this_present_settleTime || that_present_settleTime) {
      if (!(this_present_settleTime && that_present_settleTime))
        return false;
      if (!this.settleTime.equals(that.settleTime))
        return false;
    }

    boolean this_present_settleCyc = true && this.isSetSettleCyc();
    boolean that_present_settleCyc = true && that.isSetSettleCyc();
    if (this_present_settleCyc || that_present_settleCyc) {
      if (!(this_present_settleCyc && that_present_settleCyc))
        return false;
      if (!this.settleCyc.equals(that.settleCyc))
        return false;
    }

    boolean this_present_settleBath = true && this.isSetSettleBath();
    boolean that_present_settleBath = true && that.isSetSettleBath();
    if (this_present_settleBath || that_present_settleBath) {
      if (!(this_present_settleBath && that_present_settleBath))
        return false;
      if (!this.settleBath.equals(that.settleBath))
        return false;
    }

    boolean this_present_costTime = true && this.isSetCostTime();
    boolean that_present_costTime = true && that.isSetCostTime();
    if (this_present_costTime || that_present_costTime) {
      if (!(this_present_costTime && that_present_costTime))
        return false;
      if (!this.costTime.equals(that.costTime))
        return false;
    }

    boolean this_present_costAmount = true && this.isSetCostAmount();
    boolean that_present_costAmount = true && that.isSetCostAmount();
    if (this_present_costAmount || that_present_costAmount) {
      if (!(this_present_costAmount && that_present_costAmount))
        return false;
      if (!this.costAmount.equals(that.costAmount))
        return false;
    }

    boolean this_present_costSettleCyc = true && this.isSetCostSettleCyc();
    boolean that_present_costSettleCyc = true && that.isSetCostSettleCyc();
    if (this_present_costSettleCyc || that_present_costSettleCyc) {
      if (!(this_present_costSettleCyc && that_present_costSettleCyc))
        return false;
      if (!this.costSettleCyc.equals(that.costSettleCyc))
        return false;
    }

    boolean this_present_checkStatus = true && this.isSetCheckStatus();
    boolean that_present_checkStatus = true && that.isSetCheckStatus();
    if (this_present_checkStatus || that_present_checkStatus) {
      if (!(this_present_checkStatus && that_present_checkStatus))
        return false;
      if (!this.checkStatus.equals(that.checkStatus))
        return false;
    }

    boolean this_present_settleStatus = true && this.isSetSettleStatus();
    boolean that_present_settleStatus = true && that.isSetSettleStatus();
    if (this_present_settleStatus || that_present_settleStatus) {
      if (!(this_present_settleStatus && that_present_settleStatus))
        return false;
      if (!this.settleStatus.equals(that.settleStatus))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_settleId = true;
    list.add(present_settleId);
    if (present_settleId)
      list.add(settleId);

    boolean present_channelCode = true && (isSetChannelCode());
    list.add(present_channelCode);
    if (present_channelCode)
      list.add(channelCode);

    boolean present_channelName = true && (isSetChannelName());
    list.add(present_channelName);
    if (present_channelName)
      list.add(channelName);

    boolean present_channelType = true && (isSetChannelType());
    list.add(present_channelType);
    if (present_channelType)
      list.add(channelType);

    boolean present_currency = true && (isSetCurrency());
    list.add(present_currency);
    if (present_currency)
      list.add(currency);

    boolean present_payNum = true;
    list.add(present_payNum);
    if (present_payNum)
      list.add(payNum);

    boolean present_totalAmount = true && (isSetTotalAmount());
    list.add(present_totalAmount);
    if (present_totalAmount)
      list.add(totalAmount);

    boolean present_checkTime = true && (isSetCheckTime());
    list.add(present_checkTime);
    if (present_checkTime)
      list.add(checkTime);

    boolean present_settleTime = true && (isSetSettleTime());
    list.add(present_settleTime);
    if (present_settleTime)
      list.add(settleTime);

    boolean present_settleCyc = true && (isSetSettleCyc());
    list.add(present_settleCyc);
    if (present_settleCyc)
      list.add(settleCyc);

    boolean present_settleBath = true && (isSetSettleBath());
    list.add(present_settleBath);
    if (present_settleBath)
      list.add(settleBath);

    boolean present_costTime = true && (isSetCostTime());
    list.add(present_costTime);
    if (present_costTime)
      list.add(costTime);

    boolean present_costAmount = true && (isSetCostAmount());
    list.add(present_costAmount);
    if (present_costAmount)
      list.add(costAmount);

    boolean present_costSettleCyc = true && (isSetCostSettleCyc());
    list.add(present_costSettleCyc);
    if (present_costSettleCyc)
      list.add(costSettleCyc);

    boolean present_checkStatus = true && (isSetCheckStatus());
    list.add(present_checkStatus);
    if (present_checkStatus)
      list.add(checkStatus);

    boolean present_settleStatus = true && (isSetSettleStatus());
    list.add(present_settleStatus);
    if (present_settleStatus)
      list.add(settleStatus);

    return list.hashCode();
  }

  @Override
  public int compareTo(SettleChannelRecordModel other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetSettleId()).compareTo(other.isSetSettleId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleId, other.settleId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannelCode()).compareTo(other.isSetChannelCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channelCode, other.channelCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannelName()).compareTo(other.isSetChannelName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channelName, other.channelName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannelType()).compareTo(other.isSetChannelType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channelType, other.channelType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCurrency()).compareTo(other.isSetCurrency());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrency()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.currency, other.currency);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPayNum()).compareTo(other.isSetPayNum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayNum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.payNum, other.payNum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalAmount()).compareTo(other.isSetTotalAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalAmount, other.totalAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCheckTime()).compareTo(other.isSetCheckTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCheckTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.checkTime, other.checkTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettleTime()).compareTo(other.isSetSettleTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleTime, other.settleTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettleCyc()).compareTo(other.isSetSettleCyc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleCyc()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleCyc, other.settleCyc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettleBath()).compareTo(other.isSetSettleBath());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleBath()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleBath, other.settleBath);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCostTime()).compareTo(other.isSetCostTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCostTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.costTime, other.costTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCostAmount()).compareTo(other.isSetCostAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCostAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.costAmount, other.costAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCostSettleCyc()).compareTo(other.isSetCostSettleCyc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCostSettleCyc()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.costSettleCyc, other.costSettleCyc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCheckStatus()).compareTo(other.isSetCheckStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCheckStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.checkStatus, other.checkStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettleStatus()).compareTo(other.isSetSettleStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleStatus, other.settleStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SettleChannelRecordModel(");
    boolean first = true;

    sb.append("settleId:");
    sb.append(this.settleId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("channelCode:");
    if (this.channelCode == null) {
      sb.append("null");
    } else {
      sb.append(this.channelCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("channelName:");
    if (this.channelName == null) {
      sb.append("null");
    } else {
      sb.append(this.channelName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("channelType:");
    if (this.channelType == null) {
      sb.append("null");
    } else {
      sb.append(this.channelType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("currency:");
    if (this.currency == null) {
      sb.append("null");
    } else {
      sb.append(this.currency);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("payNum:");
    sb.append(this.payNum);
    first = false;
    if (!first) sb.append(", ");
    sb.append("totalAmount:");
    if (this.totalAmount == null) {
      sb.append("null");
    } else {
      sb.append(this.totalAmount);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("checkTime:");
    if (this.checkTime == null) {
      sb.append("null");
    } else {
      sb.append(this.checkTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settleTime:");
    if (this.settleTime == null) {
      sb.append("null");
    } else {
      sb.append(this.settleTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settleCyc:");
    if (this.settleCyc == null) {
      sb.append("null");
    } else {
      sb.append(this.settleCyc);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settleBath:");
    if (this.settleBath == null) {
      sb.append("null");
    } else {
      sb.append(this.settleBath);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("costTime:");
    if (this.costTime == null) {
      sb.append("null");
    } else {
      sb.append(this.costTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("costAmount:");
    if (this.costAmount == null) {
      sb.append("null");
    } else {
      sb.append(this.costAmount);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("costSettleCyc:");
    if (this.costSettleCyc == null) {
      sb.append("null");
    } else {
      sb.append(this.costSettleCyc);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("checkStatus:");
    if (this.checkStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.checkStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settleStatus:");
    if (this.settleStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.settleStatus);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SettleChannelRecordModelStandardSchemeFactory implements SchemeFactory {
    public SettleChannelRecordModelStandardScheme getScheme() {
      return new SettleChannelRecordModelStandardScheme();
    }
  }

  private static class SettleChannelRecordModelStandardScheme extends StandardScheme<SettleChannelRecordModel> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SettleChannelRecordModel struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SETTLE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.settleId = iprot.readI64();
              struct.setSettleIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CHANNEL_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.channelCode = iprot.readString();
              struct.setChannelCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CHANNEL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.channelName = iprot.readString();
              struct.setChannelNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CHANNEL_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.channelType = iprot.readString();
              struct.setChannelTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CURRENCY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.currency = iprot.readString();
              struct.setCurrencyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PAY_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.payNum = iprot.readI32();
              struct.setPayNumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // TOTAL_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.totalAmount = iprot.readString();
              struct.setTotalAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CHECK_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.checkTime = iprot.readString();
              struct.setCheckTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SETTLE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settleTime = iprot.readString();
              struct.setSettleTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // SETTLE_CYC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settleCyc = iprot.readString();
              struct.setSettleCycIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // SETTLE_BATH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settleBath = iprot.readString();
              struct.setSettleBathIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // COST_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.costTime = iprot.readString();
              struct.setCostTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // COST_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.costAmount = iprot.readString();
              struct.setCostAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // COST_SETTLE_CYC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.costSettleCyc = iprot.readString();
              struct.setCostSettleCycIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // CHECK_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.checkStatus = iprot.readString();
              struct.setCheckStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // SETTLE_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settleStatus = iprot.readString();
              struct.setSettleStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SettleChannelRecordModel struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(SETTLE_ID_FIELD_DESC);
      oprot.writeI64(struct.settleId);
      oprot.writeFieldEnd();
      if (struct.channelCode != null) {
        oprot.writeFieldBegin(CHANNEL_CODE_FIELD_DESC);
        oprot.writeString(struct.channelCode);
        oprot.writeFieldEnd();
      }
      if (struct.channelName != null) {
        oprot.writeFieldBegin(CHANNEL_NAME_FIELD_DESC);
        oprot.writeString(struct.channelName);
        oprot.writeFieldEnd();
      }
      if (struct.channelType != null) {
        oprot.writeFieldBegin(CHANNEL_TYPE_FIELD_DESC);
        oprot.writeString(struct.channelType);
        oprot.writeFieldEnd();
      }
      if (struct.currency != null) {
        oprot.writeFieldBegin(CURRENCY_FIELD_DESC);
        oprot.writeString(struct.currency);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(PAY_NUM_FIELD_DESC);
      oprot.writeI32(struct.payNum);
      oprot.writeFieldEnd();
      if (struct.totalAmount != null) {
        oprot.writeFieldBegin(TOTAL_AMOUNT_FIELD_DESC);
        oprot.writeString(struct.totalAmount);
        oprot.writeFieldEnd();
      }
      if (struct.checkTime != null) {
        oprot.writeFieldBegin(CHECK_TIME_FIELD_DESC);
        oprot.writeString(struct.checkTime);
        oprot.writeFieldEnd();
      }
      if (struct.settleTime != null) {
        oprot.writeFieldBegin(SETTLE_TIME_FIELD_DESC);
        oprot.writeString(struct.settleTime);
        oprot.writeFieldEnd();
      }
      if (struct.settleCyc != null) {
        oprot.writeFieldBegin(SETTLE_CYC_FIELD_DESC);
        oprot.writeString(struct.settleCyc);
        oprot.writeFieldEnd();
      }
      if (struct.settleBath != null) {
        oprot.writeFieldBegin(SETTLE_BATH_FIELD_DESC);
        oprot.writeString(struct.settleBath);
        oprot.writeFieldEnd();
      }
      if (struct.costTime != null) {
        oprot.writeFieldBegin(COST_TIME_FIELD_DESC);
        oprot.writeString(struct.costTime);
        oprot.writeFieldEnd();
      }
      if (struct.costAmount != null) {
        oprot.writeFieldBegin(COST_AMOUNT_FIELD_DESC);
        oprot.writeString(struct.costAmount);
        oprot.writeFieldEnd();
      }
      if (struct.costSettleCyc != null) {
        oprot.writeFieldBegin(COST_SETTLE_CYC_FIELD_DESC);
        oprot.writeString(struct.costSettleCyc);
        oprot.writeFieldEnd();
      }
      if (struct.checkStatus != null) {
        oprot.writeFieldBegin(CHECK_STATUS_FIELD_DESC);
        oprot.writeString(struct.checkStatus);
        oprot.writeFieldEnd();
      }
      if (struct.settleStatus != null) {
        oprot.writeFieldBegin(SETTLE_STATUS_FIELD_DESC);
        oprot.writeString(struct.settleStatus);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SettleChannelRecordModelTupleSchemeFactory implements SchemeFactory {
    public SettleChannelRecordModelTupleScheme getScheme() {
      return new SettleChannelRecordModelTupleScheme();
    }
  }

  private static class SettleChannelRecordModelTupleScheme extends TupleScheme<SettleChannelRecordModel> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SettleChannelRecordModel struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetSettleId()) {
        optionals.set(0);
      }
      if (struct.isSetChannelCode()) {
        optionals.set(1);
      }
      if (struct.isSetChannelName()) {
        optionals.set(2);
      }
      if (struct.isSetChannelType()) {
        optionals.set(3);
      }
      if (struct.isSetCurrency()) {
        optionals.set(4);
      }
      if (struct.isSetPayNum()) {
        optionals.set(5);
      }
      if (struct.isSetTotalAmount()) {
        optionals.set(6);
      }
      if (struct.isSetCheckTime()) {
        optionals.set(7);
      }
      if (struct.isSetSettleTime()) {
        optionals.set(8);
      }
      if (struct.isSetSettleCyc()) {
        optionals.set(9);
      }
      if (struct.isSetSettleBath()) {
        optionals.set(10);
      }
      if (struct.isSetCostTime()) {
        optionals.set(11);
      }
      if (struct.isSetCostAmount()) {
        optionals.set(12);
      }
      if (struct.isSetCostSettleCyc()) {
        optionals.set(13);
      }
      if (struct.isSetCheckStatus()) {
        optionals.set(14);
      }
      if (struct.isSetSettleStatus()) {
        optionals.set(15);
      }
      oprot.writeBitSet(optionals, 16);
      if (struct.isSetSettleId()) {
        oprot.writeI64(struct.settleId);
      }
      if (struct.isSetChannelCode()) {
        oprot.writeString(struct.channelCode);
      }
      if (struct.isSetChannelName()) {
        oprot.writeString(struct.channelName);
      }
      if (struct.isSetChannelType()) {
        oprot.writeString(struct.channelType);
      }
      if (struct.isSetCurrency()) {
        oprot.writeString(struct.currency);
      }
      if (struct.isSetPayNum()) {
        oprot.writeI32(struct.payNum);
      }
      if (struct.isSetTotalAmount()) {
        oprot.writeString(struct.totalAmount);
      }
      if (struct.isSetCheckTime()) {
        oprot.writeString(struct.checkTime);
      }
      if (struct.isSetSettleTime()) {
        oprot.writeString(struct.settleTime);
      }
      if (struct.isSetSettleCyc()) {
        oprot.writeString(struct.settleCyc);
      }
      if (struct.isSetSettleBath()) {
        oprot.writeString(struct.settleBath);
      }
      if (struct.isSetCostTime()) {
        oprot.writeString(struct.costTime);
      }
      if (struct.isSetCostAmount()) {
        oprot.writeString(struct.costAmount);
      }
      if (struct.isSetCostSettleCyc()) {
        oprot.writeString(struct.costSettleCyc);
      }
      if (struct.isSetCheckStatus()) {
        oprot.writeString(struct.checkStatus);
      }
      if (struct.isSetSettleStatus()) {
        oprot.writeString(struct.settleStatus);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SettleChannelRecordModel struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(16);
      if (incoming.get(0)) {
        struct.settleId = iprot.readI64();
        struct.setSettleIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.channelCode = iprot.readString();
        struct.setChannelCodeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.channelName = iprot.readString();
        struct.setChannelNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.channelType = iprot.readString();
        struct.setChannelTypeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.currency = iprot.readString();
        struct.setCurrencyIsSet(true);
      }
      if (incoming.get(5)) {
        struct.payNum = iprot.readI32();
        struct.setPayNumIsSet(true);
      }
      if (incoming.get(6)) {
        struct.totalAmount = iprot.readString();
        struct.setTotalAmountIsSet(true);
      }
      if (incoming.get(7)) {
        struct.checkTime = iprot.readString();
        struct.setCheckTimeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.settleTime = iprot.readString();
        struct.setSettleTimeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.settleCyc = iprot.readString();
        struct.setSettleCycIsSet(true);
      }
      if (incoming.get(10)) {
        struct.settleBath = iprot.readString();
        struct.setSettleBathIsSet(true);
      }
      if (incoming.get(11)) {
        struct.costTime = iprot.readString();
        struct.setCostTimeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.costAmount = iprot.readString();
        struct.setCostAmountIsSet(true);
      }
      if (incoming.get(13)) {
        struct.costSettleCyc = iprot.readString();
        struct.setCostSettleCycIsSet(true);
      }
      if (incoming.get(14)) {
        struct.checkStatus = iprot.readString();
        struct.setCheckStatusIsSet(true);
      }
      if (incoming.get(15)) {
        struct.settleStatus = iprot.readString();
        struct.setSettleStatusIsSet(true);
      }
    }
  }

}

