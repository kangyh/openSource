<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heepay.billing.dao.SettleDifferChannelHisMapper" >
  <resultMap id="BaseResultMap" type="com.heepay.billing.entity.SettleDifferChannelHis" >
    <id column="his_id" property="hisId" jdbcType="BIGINT" />
    <result column="differ_chanbill_id" property="differChanbillId" jdbcType="BIGINT" />
    <result column="channel_code" property="channelCode" jdbcType="VARCHAR" />
    <result column="channel_type" property="channelType" jdbcType="VARCHAR" />
    <result column="currency" property="currency" jdbcType="VARCHAR" />
    <result column="error_bath" property="errorBath" jdbcType="VARCHAR" />
    <result column="error_date" property="errorDate" jdbcType="TIMESTAMP" />
    <result column="deal_time" property="dealTime" jdbcType="TIMESTAMP" />
    <result column="payment_id" property="paymentId" jdbcType="VARCHAR" />
    <result column="trans_no" property="transNo" jdbcType="VARCHAR" />
    <result column="success_amount" property="successAmount" jdbcType="DECIMAL" />
    <result column="cost" property="cost" jdbcType="DECIMAL" />
    <result column="bill_type" property="billType" jdbcType="VARCHAR" />
    <result column="error_status" property="errorStatus" jdbcType="CHAR" />
    <result column="check_status" property="checkStatus" jdbcType="CHAR" />
    <result column="check_message" property="checkMessage" jdbcType="VARCHAR" />
    <result column="date_zip" property="dateZip" jdbcType="TIMESTAMP" />
    <result column="update_author" property="updateAuthor" jdbcType="VARCHAR" />
    <result column="channel_seq" property="channelSeq" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    his_id, differ_chanbill_id, channel_code, channel_type, currency, error_bath, error_date,
    deal_time, payment_id, trans_no, success_amount, cost, bill_type, error_status, check_status,
    check_message, date_zip, update_author, channel_seq
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.heepay.billing.entity.SettleDifferChannelHisExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from settle_differ_channel_his
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from settle_differ_channel_his
    where his_id = #{hisId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from settle_differ_channel_his
    where his_id = #{hisId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.heepay.billing.entity.SettleDifferChannelHisExample" >
    delete from settle_differ_channel_his
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.heepay.billing.entity.SettleDifferChannelHis" >
    insert into settle_differ_channel_his (his_id, differ_chanbill_id, channel_code,
    channel_type, currency, error_bath,
    error_date, deal_time, payment_id,
    trans_no, success_amount, cost,
    bill_type, error_status, check_status,
    check_message, date_zip, update_author,
    channel_seq)
    values (#{hisId,jdbcType=BIGINT}, #{differChanbillId,jdbcType=BIGINT}, #{channelCode,jdbcType=VARCHAR},
    #{channelType,jdbcType=VARCHAR}, #{currency,jdbcType=VARCHAR}, #{errorBath,jdbcType=VARCHAR},
    #{errorDate,jdbcType=TIMESTAMP}, #{dealTime,jdbcType=TIMESTAMP}, #{paymentId,jdbcType=VARCHAR},
    #{transNo,jdbcType=VARCHAR}, #{successAmount,jdbcType=DECIMAL}, #{cost,jdbcType=DECIMAL},
    #{billType,jdbcType=VARCHAR}, #{errorStatus,jdbcType=CHAR}, #{checkStatus,jdbcType=CHAR},
    #{checkMessage,jdbcType=VARCHAR}, #{dateZip,jdbcType=TIMESTAMP}, #{updateAuthor,jdbcType=VARCHAR},
    #{channelSeq,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.heepay.billing.entity.SettleDifferChannelHis" >
    insert into settle_differ_channel_his
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="hisId != null" >
        his_id,
      </if>
      <if test="differChanbillId != null" >
        differ_chanbill_id,
      </if>
      <if test="channelCode != null" >
        channel_code,
      </if>
      <if test="channelType != null" >
        channel_type,
      </if>
      <if test="currency != null" >
        currency,
      </if>
      <if test="errorBath != null" >
        error_bath,
      </if>
      <if test="errorDate != null" >
        error_date,
      </if>
      <if test="dealTime != null" >
        deal_time,
      </if>
      <if test="paymentId != null" >
        payment_id,
      </if>
      <if test="transNo != null" >
        trans_no,
      </if>
      <if test="successAmount != null" >
        success_amount,
      </if>
      <if test="cost != null" >
        cost,
      </if>
      <if test="billType != null" >
        bill_type,
      </if>
      <if test="errorStatus != null" >
        error_status,
      </if>
      <if test="checkStatus != null" >
        check_status,
      </if>
      <if test="checkMessage != null" >
        check_message,
      </if>
      <if test="dateZip != null" >
        date_zip,
      </if>
      <if test="updateAuthor != null" >
        update_author,
      </if>
      <if test="channelSeq != null" >
        channel_seq,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="hisId != null" >
        #{hisId,jdbcType=BIGINT},
      </if>
      <if test="differChanbillId != null" >
        #{differChanbillId,jdbcType=BIGINT},
      </if>
      <if test="channelCode != null" >
        #{channelCode,jdbcType=VARCHAR},
      </if>
      <if test="channelType != null" >
        #{channelType,jdbcType=VARCHAR},
      </if>
      <if test="currency != null" >
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="errorBath != null" >
        #{errorBath,jdbcType=VARCHAR},
      </if>
      <if test="errorDate != null" >
        #{errorDate,jdbcType=TIMESTAMP},
      </if>
      <if test="dealTime != null" >
        #{dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentId != null" >
        #{paymentId,jdbcType=VARCHAR},
      </if>
      <if test="transNo != null" >
        #{transNo,jdbcType=VARCHAR},
      </if>
      <if test="successAmount != null" >
        #{successAmount,jdbcType=DECIMAL},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="billType != null" >
        #{billType,jdbcType=VARCHAR},
      </if>
      <if test="errorStatus != null" >
        #{errorStatus,jdbcType=CHAR},
      </if>
      <if test="checkStatus != null" >
        #{checkStatus,jdbcType=CHAR},
      </if>
      <if test="checkMessage != null" >
        #{checkMessage,jdbcType=VARCHAR},
      </if>
      <if test="dateZip != null" >
        #{dateZip,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAuthor != null" >
        #{updateAuthor,jdbcType=VARCHAR},
      </if>
      <if test="channelSeq != null" >
        #{channelSeq,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.heepay.billing.entity.SettleDifferChannelHisExample" resultType="java.lang.Integer" >
    select count(*) from settle_differ_channel_his
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update settle_differ_channel_his
    <set >
      <if test="record.hisId != null" >
        his_id = #{record.hisId,jdbcType=BIGINT},
      </if>
      <if test="record.differChanbillId != null" >
        differ_chanbill_id = #{record.differChanbillId,jdbcType=BIGINT},
      </if>
      <if test="record.channelCode != null" >
        channel_code = #{record.channelCode,jdbcType=VARCHAR},
      </if>
      <if test="record.channelType != null" >
        channel_type = #{record.channelType,jdbcType=VARCHAR},
      </if>
      <if test="record.currency != null" >
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
      <if test="record.errorBath != null" >
        error_bath = #{record.errorBath,jdbcType=VARCHAR},
      </if>
      <if test="record.errorDate != null" >
        error_date = #{record.errorDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dealTime != null" >
        deal_time = #{record.dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paymentId != null" >
        payment_id = #{record.paymentId,jdbcType=VARCHAR},
      </if>
      <if test="record.transNo != null" >
        trans_no = #{record.transNo,jdbcType=VARCHAR},
      </if>
      <if test="record.successAmount != null" >
        success_amount = #{record.successAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.cost != null" >
        cost = #{record.cost,jdbcType=DECIMAL},
      </if>
      <if test="record.billType != null" >
        bill_type = #{record.billType,jdbcType=VARCHAR},
      </if>
      <if test="record.errorStatus != null" >
        error_status = #{record.errorStatus,jdbcType=CHAR},
      </if>
      <if test="record.checkStatus != null" >
        check_status = #{record.checkStatus,jdbcType=CHAR},
      </if>
      <if test="record.checkMessage != null" >
        check_message = #{record.checkMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.dateZip != null" >
        date_zip = #{record.dateZip,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateAuthor != null" >
        update_author = #{record.updateAuthor,jdbcType=VARCHAR},
      </if>
      <if test="record.channelSeq != null" >
        channel_seq = #{record.channelSeq,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update settle_differ_channel_his
    set his_id = #{record.hisId,jdbcType=BIGINT},
    differ_chanbill_id = #{record.differChanbillId,jdbcType=BIGINT},
    channel_code = #{record.channelCode,jdbcType=VARCHAR},
    channel_type = #{record.channelType,jdbcType=VARCHAR},
    currency = #{record.currency,jdbcType=VARCHAR},
    error_bath = #{record.errorBath,jdbcType=VARCHAR},
    error_date = #{record.errorDate,jdbcType=TIMESTAMP},
    deal_time = #{record.dealTime,jdbcType=TIMESTAMP},
    payment_id = #{record.paymentId,jdbcType=VARCHAR},
    trans_no = #{record.transNo,jdbcType=VARCHAR},
    success_amount = #{record.successAmount,jdbcType=DECIMAL},
    cost = #{record.cost,jdbcType=DECIMAL},
    bill_type = #{record.billType,jdbcType=VARCHAR},
    error_status = #{record.errorStatus,jdbcType=CHAR},
    check_status = #{record.checkStatus,jdbcType=CHAR},
    check_message = #{record.checkMessage,jdbcType=VARCHAR},
    date_zip = #{record.dateZip,jdbcType=TIMESTAMP},
    update_author = #{record.updateAuthor,jdbcType=VARCHAR},
    channel_seq = #{record.channelSeq,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.heepay.billing.entity.SettleDifferChannelHis" >
    update settle_differ_channel_his
    <set >
      <if test="differChanbillId != null" >
        differ_chanbill_id = #{differChanbillId,jdbcType=BIGINT},
      </if>
      <if test="channelCode != null" >
        channel_code = #{channelCode,jdbcType=VARCHAR},
      </if>
      <if test="channelType != null" >
        channel_type = #{channelType,jdbcType=VARCHAR},
      </if>
      <if test="currency != null" >
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="errorBath != null" >
        error_bath = #{errorBath,jdbcType=VARCHAR},
      </if>
      <if test="errorDate != null" >
        error_date = #{errorDate,jdbcType=TIMESTAMP},
      </if>
      <if test="dealTime != null" >
        deal_time = #{dealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentId != null" >
        payment_id = #{paymentId,jdbcType=VARCHAR},
      </if>
      <if test="transNo != null" >
        trans_no = #{transNo,jdbcType=VARCHAR},
      </if>
      <if test="successAmount != null" >
        success_amount = #{successAmount,jdbcType=DECIMAL},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=DECIMAL},
      </if>
      <if test="billType != null" >
        bill_type = #{billType,jdbcType=VARCHAR},
      </if>
      <if test="errorStatus != null" >
        error_status = #{errorStatus,jdbcType=CHAR},
      </if>
      <if test="checkStatus != null" >
        check_status = #{checkStatus,jdbcType=CHAR},
      </if>
      <if test="checkMessage != null" >
        check_message = #{checkMessage,jdbcType=VARCHAR},
      </if>
      <if test="dateZip != null" >
        date_zip = #{dateZip,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAuthor != null" >
        update_author = #{updateAuthor,jdbcType=VARCHAR},
      </if>
      <if test="channelSeq != null" >
        channel_seq = #{channelSeq,jdbcType=VARCHAR},
      </if>
    </set>
    where his_id = #{hisId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.heepay.billing.entity.SettleDifferChannelHis" >
    update settle_differ_channel_his
    set differ_chanbill_id = #{differChanbillId,jdbcType=BIGINT},
    channel_code = #{channelCode,jdbcType=VARCHAR},
    channel_type = #{channelType,jdbcType=VARCHAR},
    currency = #{currency,jdbcType=VARCHAR},
    error_bath = #{errorBath,jdbcType=VARCHAR},
    error_date = #{errorDate,jdbcType=TIMESTAMP},
    deal_time = #{dealTime,jdbcType=TIMESTAMP},
    payment_id = #{paymentId,jdbcType=VARCHAR},
    trans_no = #{transNo,jdbcType=VARCHAR},
    success_amount = #{successAmount,jdbcType=DECIMAL},
    cost = #{cost,jdbcType=DECIMAL},
    bill_type = #{billType,jdbcType=VARCHAR},
    error_status = #{errorStatus,jdbcType=CHAR},
    check_status = #{checkStatus,jdbcType=CHAR},
    check_message = #{checkMessage,jdbcType=VARCHAR},
    date_zip = #{dateZip,jdbcType=TIMESTAMP},
    update_author = #{updateAuthor,jdbcType=VARCHAR},
    channel_seq = #{channelSeq,jdbcType=VARCHAR}
    where his_id = #{hisId,jdbcType=BIGINT}
  </update>

  <!-- 插入 map-->
  <insert id="insertMap" parameterType="map" >
  	insert into settle_differ_channel_his (his_id, differ_chanbill_id, channel_code,
      channel_type, currency, error_bath,
      error_date, deal_time, payment_id,
      trans_no, success_amount, cost,
      bill_type, error_status, check_status,
      check_message, date_zip, update_author,
      channel_seq)
    values (#{hisId,jdbcType=BIGINT}, #{differChanbillId,jdbcType=BIGINT}, #{channelCode,jdbcType=VARCHAR},
      #{channelType,jdbcType=VARCHAR}, #{currency,jdbcType=VARCHAR}, #{errorBath,jdbcType=VARCHAR},
      #{errorDate,jdbcType=TIMESTAMP}, #{dealTime,jdbcType=TIMESTAMP}, #{paymentId,jdbcType=VARCHAR},
      #{transNo,jdbcType=VARCHAR}, #{successAmount,jdbcType=DECIMAL}, #{cost,jdbcType=DECIMAL},
      #{billType,jdbcType=VARCHAR}, #{errorStatus,jdbcType=CHAR}, #{checkStatus,jdbcType=CHAR},
      #{checkMessage,jdbcType=VARCHAR}, #{dateZip,jdbcType=TIMESTAMP}, #{updateAuthor,jdbcType=VARCHAR},
      #{channelSeq,jdbcType=VARCHAR})
  </insert>
</mapper>