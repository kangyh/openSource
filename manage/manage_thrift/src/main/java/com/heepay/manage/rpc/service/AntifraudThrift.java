/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.heepay.manage.rpc.service;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2016-12-21")
public class AntifraudThrift implements org.apache.thrift.TBase<AntifraudThrift, AntifraudThrift._Fields>, java.io.Serializable, Cloneable, Comparable<AntifraudThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AntifraudThrift");

  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField LOGIN_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("loginName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField USER_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("userType", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField LEGAL_REPRESENTATIVE_FIELD_DESC = new org.apache.thrift.protocol.TField("legalRepresentative", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField LAST_LOGIN_IP_FIELD_DESC = new org.apache.thrift.protocol.TField("lastLoginIp", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField MOBILE_FIELD_DESC = new org.apache.thrift.protocol.TField("mobile", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField MAC_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("macInfo", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField DISK_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("diskInfo", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField CPU_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("cpuInfo", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField LAST_LOGIN_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("lastLoginDate", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField COMPANY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("companyName", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField CERTIFICATE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("certificateType", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField BUSINESS_LICENSE_END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("businessLicenseEndTime", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField ORGANIZATION_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("organizationCode", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField TAX_REGISTRATION_CERTIFICATE_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("taxRegistrationCertificateNo", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField BUSINESS_SCOPE_FIELD_DESC = new org.apache.thrift.protocol.TField("businessScope", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField LEGAL_IDCARD_FIELD_DESC = new org.apache.thrift.protocol.TField("legalIdcard", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField LEGAL_CERTIFICATE_END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("legalCertificateEndTime", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField CONTACTOR_IDCARD_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("contactorIdcardNo", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField CONTACTOR_CERTIFICATE_END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("contactorCertificateEndTime", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField CONTACTOR_PHONE_FIELD_DESC = new org.apache.thrift.protocol.TField("contactorPhone", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField IPC_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("ipcNo", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField BUSINESS_LICENSE_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("businessLicenseNo", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField BANK_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("bankId", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField BANK_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("bankName", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField BANK_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("bankNo", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField BANK_CARD_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("bankCardType", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField BANK_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("bankStatus", org.apache.thrift.protocol.TType.STRING, (short)29);
  private static final org.apache.thrift.protocol.TField ASSOCIATE_LINE_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("associateLineNumber", org.apache.thrift.protocol.TType.STRING, (short)30);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AntifraudThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AntifraudThriftTupleSchemeFactory());
  }

  public String merchantId; // required
  public String loginName; // required
  public String userType; // required
  public String legalRepresentative; // required
  public String lastLoginIp; // required
  public String mobile; // required
  public String macInfo; // required
  public String diskInfo; // required
  public String cpuInfo; // required
  public String status; // required
  public String lastLoginDate; // required
  public String companyName; // required
  public String certificateType; // required
  public String businessLicenseEndTime; // required
  public String organizationCode; // required
  public String taxRegistrationCertificateNo; // required
  public String businessScope; // required
  public String legalIdcard; // required
  public String legalCertificateEndTime; // required
  public String contactorIdcardNo; // required
  public String contactorCertificateEndTime; // required
  public String contactorPhone; // required
  public String ipcNo; // required
  public String businessLicenseNo; // required
  public String bankId; // required
  public String bankName; // required
  public String bankNo; // required
  public String bankCardType; // required
  public String bankStatus; // required
  public String associateLineNumber; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    MERCHANT_ID((short)1, "merchantId"),
    LOGIN_NAME((short)2, "loginName"),
    USER_TYPE((short)3, "userType"),
    LEGAL_REPRESENTATIVE((short)4, "legalRepresentative"),
    LAST_LOGIN_IP((short)5, "lastLoginIp"),
    MOBILE((short)6, "mobile"),
    MAC_INFO((short)7, "macInfo"),
    DISK_INFO((short)8, "diskInfo"),
    CPU_INFO((short)9, "cpuInfo"),
    STATUS((short)10, "status"),
    LAST_LOGIN_DATE((short)11, "lastLoginDate"),
    COMPANY_NAME((short)12, "companyName"),
    CERTIFICATE_TYPE((short)13, "certificateType"),
    BUSINESS_LICENSE_END_TIME((short)14, "businessLicenseEndTime"),
    ORGANIZATION_CODE((short)15, "organizationCode"),
    TAX_REGISTRATION_CERTIFICATE_NO((short)16, "taxRegistrationCertificateNo"),
    BUSINESS_SCOPE((short)17, "businessScope"),
    LEGAL_IDCARD((short)18, "legalIdcard"),
    LEGAL_CERTIFICATE_END_TIME((short)19, "legalCertificateEndTime"),
    CONTACTOR_IDCARD_NO((short)20, "contactorIdcardNo"),
    CONTACTOR_CERTIFICATE_END_TIME((short)21, "contactorCertificateEndTime"),
    CONTACTOR_PHONE((short)22, "contactorPhone"),
    IPC_NO((short)23, "ipcNo"),
    BUSINESS_LICENSE_NO((short)24, "businessLicenseNo"),
    BANK_ID((short)25, "bankId"),
    BANK_NAME((short)26, "bankName"),
    BANK_NO((short)27, "bankNo"),
    BANK_CARD_TYPE((short)28, "bankCardType"),
    BANK_STATUS((short)29, "bankStatus"),
    ASSOCIATE_LINE_NUMBER((short)30, "associateLineNumber");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MERCHANT_ID
          return MERCHANT_ID;
        case 2: // LOGIN_NAME
          return LOGIN_NAME;
        case 3: // USER_TYPE
          return USER_TYPE;
        case 4: // LEGAL_REPRESENTATIVE
          return LEGAL_REPRESENTATIVE;
        case 5: // LAST_LOGIN_IP
          return LAST_LOGIN_IP;
        case 6: // MOBILE
          return MOBILE;
        case 7: // MAC_INFO
          return MAC_INFO;
        case 8: // DISK_INFO
          return DISK_INFO;
        case 9: // CPU_INFO
          return CPU_INFO;
        case 10: // STATUS
          return STATUS;
        case 11: // LAST_LOGIN_DATE
          return LAST_LOGIN_DATE;
        case 12: // COMPANY_NAME
          return COMPANY_NAME;
        case 13: // CERTIFICATE_TYPE
          return CERTIFICATE_TYPE;
        case 14: // BUSINESS_LICENSE_END_TIME
          return BUSINESS_LICENSE_END_TIME;
        case 15: // ORGANIZATION_CODE
          return ORGANIZATION_CODE;
        case 16: // TAX_REGISTRATION_CERTIFICATE_NO
          return TAX_REGISTRATION_CERTIFICATE_NO;
        case 17: // BUSINESS_SCOPE
          return BUSINESS_SCOPE;
        case 18: // LEGAL_IDCARD
          return LEGAL_IDCARD;
        case 19: // LEGAL_CERTIFICATE_END_TIME
          return LEGAL_CERTIFICATE_END_TIME;
        case 20: // CONTACTOR_IDCARD_NO
          return CONTACTOR_IDCARD_NO;
        case 21: // CONTACTOR_CERTIFICATE_END_TIME
          return CONTACTOR_CERTIFICATE_END_TIME;
        case 22: // CONTACTOR_PHONE
          return CONTACTOR_PHONE;
        case 23: // IPC_NO
          return IPC_NO;
        case 24: // BUSINESS_LICENSE_NO
          return BUSINESS_LICENSE_NO;
        case 25: // BANK_ID
          return BANK_ID;
        case 26: // BANK_NAME
          return BANK_NAME;
        case 27: // BANK_NO
          return BANK_NO;
        case 28: // BANK_CARD_TYPE
          return BANK_CARD_TYPE;
        case 29: // BANK_STATUS
          return BANK_STATUS;
        case 30: // ASSOCIATE_LINE_NUMBER
          return ASSOCIATE_LINE_NUMBER;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LOGIN_NAME, new org.apache.thrift.meta_data.FieldMetaData("loginName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.USER_TYPE, new org.apache.thrift.meta_data.FieldMetaData("userType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LEGAL_REPRESENTATIVE, new org.apache.thrift.meta_data.FieldMetaData("legalRepresentative", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LAST_LOGIN_IP, new org.apache.thrift.meta_data.FieldMetaData("lastLoginIp", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MOBILE, new org.apache.thrift.meta_data.FieldMetaData("mobile", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MAC_INFO, new org.apache.thrift.meta_data.FieldMetaData("macInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DISK_INFO, new org.apache.thrift.meta_data.FieldMetaData("diskInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CPU_INFO, new org.apache.thrift.meta_data.FieldMetaData("cpuInfo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LAST_LOGIN_DATE, new org.apache.thrift.meta_data.FieldMetaData("lastLoginDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPANY_NAME, new org.apache.thrift.meta_data.FieldMetaData("companyName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CERTIFICATE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("certificateType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUSINESS_LICENSE_END_TIME, new org.apache.thrift.meta_data.FieldMetaData("businessLicenseEndTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORGANIZATION_CODE, new org.apache.thrift.meta_data.FieldMetaData("organizationCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TAX_REGISTRATION_CERTIFICATE_NO, new org.apache.thrift.meta_data.FieldMetaData("taxRegistrationCertificateNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUSINESS_SCOPE, new org.apache.thrift.meta_data.FieldMetaData("businessScope", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LEGAL_IDCARD, new org.apache.thrift.meta_data.FieldMetaData("legalIdcard", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LEGAL_CERTIFICATE_END_TIME, new org.apache.thrift.meta_data.FieldMetaData("legalCertificateEndTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACTOR_IDCARD_NO, new org.apache.thrift.meta_data.FieldMetaData("contactorIdcardNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACTOR_CERTIFICATE_END_TIME, new org.apache.thrift.meta_data.FieldMetaData("contactorCertificateEndTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTACTOR_PHONE, new org.apache.thrift.meta_data.FieldMetaData("contactorPhone", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IPC_NO, new org.apache.thrift.meta_data.FieldMetaData("ipcNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUSINESS_LICENSE_NO, new org.apache.thrift.meta_data.FieldMetaData("businessLicenseNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_ID, new org.apache.thrift.meta_data.FieldMetaData("bankId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_NAME, new org.apache.thrift.meta_data.FieldMetaData("bankName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_NO, new org.apache.thrift.meta_data.FieldMetaData("bankNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_CARD_TYPE, new org.apache.thrift.meta_data.FieldMetaData("bankCardType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_STATUS, new org.apache.thrift.meta_data.FieldMetaData("bankStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ASSOCIATE_LINE_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("associateLineNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AntifraudThrift.class, metaDataMap);
  }

  public AntifraudThrift() {
  }

  public AntifraudThrift(
    String merchantId,
    String loginName,
    String userType,
    String legalRepresentative,
    String lastLoginIp,
    String mobile,
    String macInfo,
    String diskInfo,
    String cpuInfo,
    String status,
    String lastLoginDate,
    String companyName,
    String certificateType,
    String businessLicenseEndTime,
    String organizationCode,
    String taxRegistrationCertificateNo,
    String businessScope,
    String legalIdcard,
    String legalCertificateEndTime,
    String contactorIdcardNo,
    String contactorCertificateEndTime,
    String contactorPhone,
    String ipcNo,
    String businessLicenseNo,
    String bankId,
    String bankName,
    String bankNo,
    String bankCardType,
    String bankStatus,
    String associateLineNumber)
  {
    this();
    this.merchantId = merchantId;
    this.loginName = loginName;
    this.userType = userType;
    this.legalRepresentative = legalRepresentative;
    this.lastLoginIp = lastLoginIp;
    this.mobile = mobile;
    this.macInfo = macInfo;
    this.diskInfo = diskInfo;
    this.cpuInfo = cpuInfo;
    this.status = status;
    this.lastLoginDate = lastLoginDate;
    this.companyName = companyName;
    this.certificateType = certificateType;
    this.businessLicenseEndTime = businessLicenseEndTime;
    this.organizationCode = organizationCode;
    this.taxRegistrationCertificateNo = taxRegistrationCertificateNo;
    this.businessScope = businessScope;
    this.legalIdcard = legalIdcard;
    this.legalCertificateEndTime = legalCertificateEndTime;
    this.contactorIdcardNo = contactorIdcardNo;
    this.contactorCertificateEndTime = contactorCertificateEndTime;
    this.contactorPhone = contactorPhone;
    this.ipcNo = ipcNo;
    this.businessLicenseNo = businessLicenseNo;
    this.bankId = bankId;
    this.bankName = bankName;
    this.bankNo = bankNo;
    this.bankCardType = bankCardType;
    this.bankStatus = bankStatus;
    this.associateLineNumber = associateLineNumber;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AntifraudThrift(AntifraudThrift other) {
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetLoginName()) {
      this.loginName = other.loginName;
    }
    if (other.isSetUserType()) {
      this.userType = other.userType;
    }
    if (other.isSetLegalRepresentative()) {
      this.legalRepresentative = other.legalRepresentative;
    }
    if (other.isSetLastLoginIp()) {
      this.lastLoginIp = other.lastLoginIp;
    }
    if (other.isSetMobile()) {
      this.mobile = other.mobile;
    }
    if (other.isSetMacInfo()) {
      this.macInfo = other.macInfo;
    }
    if (other.isSetDiskInfo()) {
      this.diskInfo = other.diskInfo;
    }
    if (other.isSetCpuInfo()) {
      this.cpuInfo = other.cpuInfo;
    }
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    if (other.isSetLastLoginDate()) {
      this.lastLoginDate = other.lastLoginDate;
    }
    if (other.isSetCompanyName()) {
      this.companyName = other.companyName;
    }
    if (other.isSetCertificateType()) {
      this.certificateType = other.certificateType;
    }
    if (other.isSetBusinessLicenseEndTime()) {
      this.businessLicenseEndTime = other.businessLicenseEndTime;
    }
    if (other.isSetOrganizationCode()) {
      this.organizationCode = other.organizationCode;
    }
    if (other.isSetTaxRegistrationCertificateNo()) {
      this.taxRegistrationCertificateNo = other.taxRegistrationCertificateNo;
    }
    if (other.isSetBusinessScope()) {
      this.businessScope = other.businessScope;
    }
    if (other.isSetLegalIdcard()) {
      this.legalIdcard = other.legalIdcard;
    }
    if (other.isSetLegalCertificateEndTime()) {
      this.legalCertificateEndTime = other.legalCertificateEndTime;
    }
    if (other.isSetContactorIdcardNo()) {
      this.contactorIdcardNo = other.contactorIdcardNo;
    }
    if (other.isSetContactorCertificateEndTime()) {
      this.contactorCertificateEndTime = other.contactorCertificateEndTime;
    }
    if (other.isSetContactorPhone()) {
      this.contactorPhone = other.contactorPhone;
    }
    if (other.isSetIpcNo()) {
      this.ipcNo = other.ipcNo;
    }
    if (other.isSetBusinessLicenseNo()) {
      this.businessLicenseNo = other.businessLicenseNo;
    }
    if (other.isSetBankId()) {
      this.bankId = other.bankId;
    }
    if (other.isSetBankName()) {
      this.bankName = other.bankName;
    }
    if (other.isSetBankNo()) {
      this.bankNo = other.bankNo;
    }
    if (other.isSetBankCardType()) {
      this.bankCardType = other.bankCardType;
    }
    if (other.isSetBankStatus()) {
      this.bankStatus = other.bankStatus;
    }
    if (other.isSetAssociateLineNumber()) {
      this.associateLineNumber = other.associateLineNumber;
    }
  }

  public AntifraudThrift deepCopy() {
    return new AntifraudThrift(this);
  }

  @Override
  public void clear() {
    this.merchantId = null;
    this.loginName = null;
    this.userType = null;
    this.legalRepresentative = null;
    this.lastLoginIp = null;
    this.mobile = null;
    this.macInfo = null;
    this.diskInfo = null;
    this.cpuInfo = null;
    this.status = null;
    this.lastLoginDate = null;
    this.companyName = null;
    this.certificateType = null;
    this.businessLicenseEndTime = null;
    this.organizationCode = null;
    this.taxRegistrationCertificateNo = null;
    this.businessScope = null;
    this.legalIdcard = null;
    this.legalCertificateEndTime = null;
    this.contactorIdcardNo = null;
    this.contactorCertificateEndTime = null;
    this.contactorPhone = null;
    this.ipcNo = null;
    this.businessLicenseNo = null;
    this.bankId = null;
    this.bankName = null;
    this.bankNo = null;
    this.bankCardType = null;
    this.bankStatus = null;
    this.associateLineNumber = null;
  }

  public String getMerchantId() {
    return this.merchantId;
  }

  public AntifraudThrift setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  public String getLoginName() {
    return this.loginName;
  }

  public AntifraudThrift setLoginName(String loginName) {
    this.loginName = loginName;
    return this;
  }

  public void unsetLoginName() {
    this.loginName = null;
  }

  /** Returns true if field loginName is set (has been assigned a value) and false otherwise */
  public boolean isSetLoginName() {
    return this.loginName != null;
  }

  public void setLoginNameIsSet(boolean value) {
    if (!value) {
      this.loginName = null;
    }
  }

  public String getUserType() {
    return this.userType;
  }

  public AntifraudThrift setUserType(String userType) {
    this.userType = userType;
    return this;
  }

  public void unsetUserType() {
    this.userType = null;
  }

  /** Returns true if field userType is set (has been assigned a value) and false otherwise */
  public boolean isSetUserType() {
    return this.userType != null;
  }

  public void setUserTypeIsSet(boolean value) {
    if (!value) {
      this.userType = null;
    }
  }

  public String getLegalRepresentative() {
    return this.legalRepresentative;
  }

  public AntifraudThrift setLegalRepresentative(String legalRepresentative) {
    this.legalRepresentative = legalRepresentative;
    return this;
  }

  public void unsetLegalRepresentative() {
    this.legalRepresentative = null;
  }

  /** Returns true if field legalRepresentative is set (has been assigned a value) and false otherwise */
  public boolean isSetLegalRepresentative() {
    return this.legalRepresentative != null;
  }

  public void setLegalRepresentativeIsSet(boolean value) {
    if (!value) {
      this.legalRepresentative = null;
    }
  }

  public String getLastLoginIp() {
    return this.lastLoginIp;
  }

  public AntifraudThrift setLastLoginIp(String lastLoginIp) {
    this.lastLoginIp = lastLoginIp;
    return this;
  }

  public void unsetLastLoginIp() {
    this.lastLoginIp = null;
  }

  /** Returns true if field lastLoginIp is set (has been assigned a value) and false otherwise */
  public boolean isSetLastLoginIp() {
    return this.lastLoginIp != null;
  }

  public void setLastLoginIpIsSet(boolean value) {
    if (!value) {
      this.lastLoginIp = null;
    }
  }

  public String getMobile() {
    return this.mobile;
  }

  public AntifraudThrift setMobile(String mobile) {
    this.mobile = mobile;
    return this;
  }

  public void unsetMobile() {
    this.mobile = null;
  }

  /** Returns true if field mobile is set (has been assigned a value) and false otherwise */
  public boolean isSetMobile() {
    return this.mobile != null;
  }

  public void setMobileIsSet(boolean value) {
    if (!value) {
      this.mobile = null;
    }
  }

  public String getMacInfo() {
    return this.macInfo;
  }

  public AntifraudThrift setMacInfo(String macInfo) {
    this.macInfo = macInfo;
    return this;
  }

  public void unsetMacInfo() {
    this.macInfo = null;
  }

  /** Returns true if field macInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetMacInfo() {
    return this.macInfo != null;
  }

  public void setMacInfoIsSet(boolean value) {
    if (!value) {
      this.macInfo = null;
    }
  }

  public String getDiskInfo() {
    return this.diskInfo;
  }

  public AntifraudThrift setDiskInfo(String diskInfo) {
    this.diskInfo = diskInfo;
    return this;
  }

  public void unsetDiskInfo() {
    this.diskInfo = null;
  }

  /** Returns true if field diskInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetDiskInfo() {
    return this.diskInfo != null;
  }

  public void setDiskInfoIsSet(boolean value) {
    if (!value) {
      this.diskInfo = null;
    }
  }

  public String getCpuInfo() {
    return this.cpuInfo;
  }

  public AntifraudThrift setCpuInfo(String cpuInfo) {
    this.cpuInfo = cpuInfo;
    return this;
  }

  public void unsetCpuInfo() {
    this.cpuInfo = null;
  }

  /** Returns true if field cpuInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetCpuInfo() {
    return this.cpuInfo != null;
  }

  public void setCpuInfoIsSet(boolean value) {
    if (!value) {
      this.cpuInfo = null;
    }
  }

  public String getStatus() {
    return this.status;
  }

  public AntifraudThrift setStatus(String status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public String getLastLoginDate() {
    return this.lastLoginDate;
  }

  public AntifraudThrift setLastLoginDate(String lastLoginDate) {
    this.lastLoginDate = lastLoginDate;
    return this;
  }

  public void unsetLastLoginDate() {
    this.lastLoginDate = null;
  }

  /** Returns true if field lastLoginDate is set (has been assigned a value) and false otherwise */
  public boolean isSetLastLoginDate() {
    return this.lastLoginDate != null;
  }

  public void setLastLoginDateIsSet(boolean value) {
    if (!value) {
      this.lastLoginDate = null;
    }
  }

  public String getCompanyName() {
    return this.companyName;
  }

  public AntifraudThrift setCompanyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

  public void unsetCompanyName() {
    this.companyName = null;
  }

  /** Returns true if field companyName is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyName() {
    return this.companyName != null;
  }

  public void setCompanyNameIsSet(boolean value) {
    if (!value) {
      this.companyName = null;
    }
  }

  public String getCertificateType() {
    return this.certificateType;
  }

  public AntifraudThrift setCertificateType(String certificateType) {
    this.certificateType = certificateType;
    return this;
  }

  public void unsetCertificateType() {
    this.certificateType = null;
  }

  /** Returns true if field certificateType is set (has been assigned a value) and false otherwise */
  public boolean isSetCertificateType() {
    return this.certificateType != null;
  }

  public void setCertificateTypeIsSet(boolean value) {
    if (!value) {
      this.certificateType = null;
    }
  }

  public String getBusinessLicenseEndTime() {
    return this.businessLicenseEndTime;
  }

  public AntifraudThrift setBusinessLicenseEndTime(String businessLicenseEndTime) {
    this.businessLicenseEndTime = businessLicenseEndTime;
    return this;
  }

  public void unsetBusinessLicenseEndTime() {
    this.businessLicenseEndTime = null;
  }

  /** Returns true if field businessLicenseEndTime is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessLicenseEndTime() {
    return this.businessLicenseEndTime != null;
  }

  public void setBusinessLicenseEndTimeIsSet(boolean value) {
    if (!value) {
      this.businessLicenseEndTime = null;
    }
  }

  public String getOrganizationCode() {
    return this.organizationCode;
  }

  public AntifraudThrift setOrganizationCode(String organizationCode) {
    this.organizationCode = organizationCode;
    return this;
  }

  public void unsetOrganizationCode() {
    this.organizationCode = null;
  }

  /** Returns true if field organizationCode is set (has been assigned a value) and false otherwise */
  public boolean isSetOrganizationCode() {
    return this.organizationCode != null;
  }

  public void setOrganizationCodeIsSet(boolean value) {
    if (!value) {
      this.organizationCode = null;
    }
  }

  public String getTaxRegistrationCertificateNo() {
    return this.taxRegistrationCertificateNo;
  }

  public AntifraudThrift setTaxRegistrationCertificateNo(String taxRegistrationCertificateNo) {
    this.taxRegistrationCertificateNo = taxRegistrationCertificateNo;
    return this;
  }

  public void unsetTaxRegistrationCertificateNo() {
    this.taxRegistrationCertificateNo = null;
  }

  /** Returns true if field taxRegistrationCertificateNo is set (has been assigned a value) and false otherwise */
  public boolean isSetTaxRegistrationCertificateNo() {
    return this.taxRegistrationCertificateNo != null;
  }

  public void setTaxRegistrationCertificateNoIsSet(boolean value) {
    if (!value) {
      this.taxRegistrationCertificateNo = null;
    }
  }

  public String getBusinessScope() {
    return this.businessScope;
  }

  public AntifraudThrift setBusinessScope(String businessScope) {
    this.businessScope = businessScope;
    return this;
  }

  public void unsetBusinessScope() {
    this.businessScope = null;
  }

  /** Returns true if field businessScope is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessScope() {
    return this.businessScope != null;
  }

  public void setBusinessScopeIsSet(boolean value) {
    if (!value) {
      this.businessScope = null;
    }
  }

  public String getLegalIdcard() {
    return this.legalIdcard;
  }

  public AntifraudThrift setLegalIdcard(String legalIdcard) {
    this.legalIdcard = legalIdcard;
    return this;
  }

  public void unsetLegalIdcard() {
    this.legalIdcard = null;
  }

  /** Returns true if field legalIdcard is set (has been assigned a value) and false otherwise */
  public boolean isSetLegalIdcard() {
    return this.legalIdcard != null;
  }

  public void setLegalIdcardIsSet(boolean value) {
    if (!value) {
      this.legalIdcard = null;
    }
  }

  public String getLegalCertificateEndTime() {
    return this.legalCertificateEndTime;
  }

  public AntifraudThrift setLegalCertificateEndTime(String legalCertificateEndTime) {
    this.legalCertificateEndTime = legalCertificateEndTime;
    return this;
  }

  public void unsetLegalCertificateEndTime() {
    this.legalCertificateEndTime = null;
  }

  /** Returns true if field legalCertificateEndTime is set (has been assigned a value) and false otherwise */
  public boolean isSetLegalCertificateEndTime() {
    return this.legalCertificateEndTime != null;
  }

  public void setLegalCertificateEndTimeIsSet(boolean value) {
    if (!value) {
      this.legalCertificateEndTime = null;
    }
  }

  public String getContactorIdcardNo() {
    return this.contactorIdcardNo;
  }

  public AntifraudThrift setContactorIdcardNo(String contactorIdcardNo) {
    this.contactorIdcardNo = contactorIdcardNo;
    return this;
  }

  public void unsetContactorIdcardNo() {
    this.contactorIdcardNo = null;
  }

  /** Returns true if field contactorIdcardNo is set (has been assigned a value) and false otherwise */
  public boolean isSetContactorIdcardNo() {
    return this.contactorIdcardNo != null;
  }

  public void setContactorIdcardNoIsSet(boolean value) {
    if (!value) {
      this.contactorIdcardNo = null;
    }
  }

  public String getContactorCertificateEndTime() {
    return this.contactorCertificateEndTime;
  }

  public AntifraudThrift setContactorCertificateEndTime(String contactorCertificateEndTime) {
    this.contactorCertificateEndTime = contactorCertificateEndTime;
    return this;
  }

  public void unsetContactorCertificateEndTime() {
    this.contactorCertificateEndTime = null;
  }

  /** Returns true if field contactorCertificateEndTime is set (has been assigned a value) and false otherwise */
  public boolean isSetContactorCertificateEndTime() {
    return this.contactorCertificateEndTime != null;
  }

  public void setContactorCertificateEndTimeIsSet(boolean value) {
    if (!value) {
      this.contactorCertificateEndTime = null;
    }
  }

  public String getContactorPhone() {
    return this.contactorPhone;
  }

  public AntifraudThrift setContactorPhone(String contactorPhone) {
    this.contactorPhone = contactorPhone;
    return this;
  }

  public void unsetContactorPhone() {
    this.contactorPhone = null;
  }

  /** Returns true if field contactorPhone is set (has been assigned a value) and false otherwise */
  public boolean isSetContactorPhone() {
    return this.contactorPhone != null;
  }

  public void setContactorPhoneIsSet(boolean value) {
    if (!value) {
      this.contactorPhone = null;
    }
  }

  public String getIpcNo() {
    return this.ipcNo;
  }

  public AntifraudThrift setIpcNo(String ipcNo) {
    this.ipcNo = ipcNo;
    return this;
  }

  public void unsetIpcNo() {
    this.ipcNo = null;
  }

  /** Returns true if field ipcNo is set (has been assigned a value) and false otherwise */
  public boolean isSetIpcNo() {
    return this.ipcNo != null;
  }

  public void setIpcNoIsSet(boolean value) {
    if (!value) {
      this.ipcNo = null;
    }
  }

  public String getBusinessLicenseNo() {
    return this.businessLicenseNo;
  }

  public AntifraudThrift setBusinessLicenseNo(String businessLicenseNo) {
    this.businessLicenseNo = businessLicenseNo;
    return this;
  }

  public void unsetBusinessLicenseNo() {
    this.businessLicenseNo = null;
  }

  /** Returns true if field businessLicenseNo is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessLicenseNo() {
    return this.businessLicenseNo != null;
  }

  public void setBusinessLicenseNoIsSet(boolean value) {
    if (!value) {
      this.businessLicenseNo = null;
    }
  }

  public String getBankId() {
    return this.bankId;
  }

  public AntifraudThrift setBankId(String bankId) {
    this.bankId = bankId;
    return this;
  }

  public void unsetBankId() {
    this.bankId = null;
  }

  /** Returns true if field bankId is set (has been assigned a value) and false otherwise */
  public boolean isSetBankId() {
    return this.bankId != null;
  }

  public void setBankIdIsSet(boolean value) {
    if (!value) {
      this.bankId = null;
    }
  }

  public String getBankName() {
    return this.bankName;
  }

  public AntifraudThrift setBankName(String bankName) {
    this.bankName = bankName;
    return this;
  }

  public void unsetBankName() {
    this.bankName = null;
  }

  /** Returns true if field bankName is set (has been assigned a value) and false otherwise */
  public boolean isSetBankName() {
    return this.bankName != null;
  }

  public void setBankNameIsSet(boolean value) {
    if (!value) {
      this.bankName = null;
    }
  }

  public String getBankNo() {
    return this.bankNo;
  }

  public AntifraudThrift setBankNo(String bankNo) {
    this.bankNo = bankNo;
    return this;
  }

  public void unsetBankNo() {
    this.bankNo = null;
  }

  /** Returns true if field bankNo is set (has been assigned a value) and false otherwise */
  public boolean isSetBankNo() {
    return this.bankNo != null;
  }

  public void setBankNoIsSet(boolean value) {
    if (!value) {
      this.bankNo = null;
    }
  }

  public String getBankCardType() {
    return this.bankCardType;
  }

  public AntifraudThrift setBankCardType(String bankCardType) {
    this.bankCardType = bankCardType;
    return this;
  }

  public void unsetBankCardType() {
    this.bankCardType = null;
  }

  /** Returns true if field bankCardType is set (has been assigned a value) and false otherwise */
  public boolean isSetBankCardType() {
    return this.bankCardType != null;
  }

  public void setBankCardTypeIsSet(boolean value) {
    if (!value) {
      this.bankCardType = null;
    }
  }

  public String getBankStatus() {
    return this.bankStatus;
  }

  public AntifraudThrift setBankStatus(String bankStatus) {
    this.bankStatus = bankStatus;
    return this;
  }

  public void unsetBankStatus() {
    this.bankStatus = null;
  }

  /** Returns true if field bankStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetBankStatus() {
    return this.bankStatus != null;
  }

  public void setBankStatusIsSet(boolean value) {
    if (!value) {
      this.bankStatus = null;
    }
  }

  public String getAssociateLineNumber() {
    return this.associateLineNumber;
  }

  public AntifraudThrift setAssociateLineNumber(String associateLineNumber) {
    this.associateLineNumber = associateLineNumber;
    return this;
  }

  public void unsetAssociateLineNumber() {
    this.associateLineNumber = null;
  }

  /** Returns true if field associateLineNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetAssociateLineNumber() {
    return this.associateLineNumber != null;
  }

  public void setAssociateLineNumberIsSet(boolean value) {
    if (!value) {
      this.associateLineNumber = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case LOGIN_NAME:
      if (value == null) {
        unsetLoginName();
      } else {
        setLoginName((String)value);
      }
      break;

    case USER_TYPE:
      if (value == null) {
        unsetUserType();
      } else {
        setUserType((String)value);
      }
      break;

    case LEGAL_REPRESENTATIVE:
      if (value == null) {
        unsetLegalRepresentative();
      } else {
        setLegalRepresentative((String)value);
      }
      break;

    case LAST_LOGIN_IP:
      if (value == null) {
        unsetLastLoginIp();
      } else {
        setLastLoginIp((String)value);
      }
      break;

    case MOBILE:
      if (value == null) {
        unsetMobile();
      } else {
        setMobile((String)value);
      }
      break;

    case MAC_INFO:
      if (value == null) {
        unsetMacInfo();
      } else {
        setMacInfo((String)value);
      }
      break;

    case DISK_INFO:
      if (value == null) {
        unsetDiskInfo();
      } else {
        setDiskInfo((String)value);
      }
      break;

    case CPU_INFO:
      if (value == null) {
        unsetCpuInfo();
      } else {
        setCpuInfo((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((String)value);
      }
      break;

    case LAST_LOGIN_DATE:
      if (value == null) {
        unsetLastLoginDate();
      } else {
        setLastLoginDate((String)value);
      }
      break;

    case COMPANY_NAME:
      if (value == null) {
        unsetCompanyName();
      } else {
        setCompanyName((String)value);
      }
      break;

    case CERTIFICATE_TYPE:
      if (value == null) {
        unsetCertificateType();
      } else {
        setCertificateType((String)value);
      }
      break;

    case BUSINESS_LICENSE_END_TIME:
      if (value == null) {
        unsetBusinessLicenseEndTime();
      } else {
        setBusinessLicenseEndTime((String)value);
      }
      break;

    case ORGANIZATION_CODE:
      if (value == null) {
        unsetOrganizationCode();
      } else {
        setOrganizationCode((String)value);
      }
      break;

    case TAX_REGISTRATION_CERTIFICATE_NO:
      if (value == null) {
        unsetTaxRegistrationCertificateNo();
      } else {
        setTaxRegistrationCertificateNo((String)value);
      }
      break;

    case BUSINESS_SCOPE:
      if (value == null) {
        unsetBusinessScope();
      } else {
        setBusinessScope((String)value);
      }
      break;

    case LEGAL_IDCARD:
      if (value == null) {
        unsetLegalIdcard();
      } else {
        setLegalIdcard((String)value);
      }
      break;

    case LEGAL_CERTIFICATE_END_TIME:
      if (value == null) {
        unsetLegalCertificateEndTime();
      } else {
        setLegalCertificateEndTime((String)value);
      }
      break;

    case CONTACTOR_IDCARD_NO:
      if (value == null) {
        unsetContactorIdcardNo();
      } else {
        setContactorIdcardNo((String)value);
      }
      break;

    case CONTACTOR_CERTIFICATE_END_TIME:
      if (value == null) {
        unsetContactorCertificateEndTime();
      } else {
        setContactorCertificateEndTime((String)value);
      }
      break;

    case CONTACTOR_PHONE:
      if (value == null) {
        unsetContactorPhone();
      } else {
        setContactorPhone((String)value);
      }
      break;

    case IPC_NO:
      if (value == null) {
        unsetIpcNo();
      } else {
        setIpcNo((String)value);
      }
      break;

    case BUSINESS_LICENSE_NO:
      if (value == null) {
        unsetBusinessLicenseNo();
      } else {
        setBusinessLicenseNo((String)value);
      }
      break;

    case BANK_ID:
      if (value == null) {
        unsetBankId();
      } else {
        setBankId((String)value);
      }
      break;

    case BANK_NAME:
      if (value == null) {
        unsetBankName();
      } else {
        setBankName((String)value);
      }
      break;

    case BANK_NO:
      if (value == null) {
        unsetBankNo();
      } else {
        setBankNo((String)value);
      }
      break;

    case BANK_CARD_TYPE:
      if (value == null) {
        unsetBankCardType();
      } else {
        setBankCardType((String)value);
      }
      break;

    case BANK_STATUS:
      if (value == null) {
        unsetBankStatus();
      } else {
        setBankStatus((String)value);
      }
      break;

    case ASSOCIATE_LINE_NUMBER:
      if (value == null) {
        unsetAssociateLineNumber();
      } else {
        setAssociateLineNumber((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case MERCHANT_ID:
      return getMerchantId();

    case LOGIN_NAME:
      return getLoginName();

    case USER_TYPE:
      return getUserType();

    case LEGAL_REPRESENTATIVE:
      return getLegalRepresentative();

    case LAST_LOGIN_IP:
      return getLastLoginIp();

    case MOBILE:
      return getMobile();

    case MAC_INFO:
      return getMacInfo();

    case DISK_INFO:
      return getDiskInfo();

    case CPU_INFO:
      return getCpuInfo();

    case STATUS:
      return getStatus();

    case LAST_LOGIN_DATE:
      return getLastLoginDate();

    case COMPANY_NAME:
      return getCompanyName();

    case CERTIFICATE_TYPE:
      return getCertificateType();

    case BUSINESS_LICENSE_END_TIME:
      return getBusinessLicenseEndTime();

    case ORGANIZATION_CODE:
      return getOrganizationCode();

    case TAX_REGISTRATION_CERTIFICATE_NO:
      return getTaxRegistrationCertificateNo();

    case BUSINESS_SCOPE:
      return getBusinessScope();

    case LEGAL_IDCARD:
      return getLegalIdcard();

    case LEGAL_CERTIFICATE_END_TIME:
      return getLegalCertificateEndTime();

    case CONTACTOR_IDCARD_NO:
      return getContactorIdcardNo();

    case CONTACTOR_CERTIFICATE_END_TIME:
      return getContactorCertificateEndTime();

    case CONTACTOR_PHONE:
      return getContactorPhone();

    case IPC_NO:
      return getIpcNo();

    case BUSINESS_LICENSE_NO:
      return getBusinessLicenseNo();

    case BANK_ID:
      return getBankId();

    case BANK_NAME:
      return getBankName();

    case BANK_NO:
      return getBankNo();

    case BANK_CARD_TYPE:
      return getBankCardType();

    case BANK_STATUS:
      return getBankStatus();

    case ASSOCIATE_LINE_NUMBER:
      return getAssociateLineNumber();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case MERCHANT_ID:
      return isSetMerchantId();
    case LOGIN_NAME:
      return isSetLoginName();
    case USER_TYPE:
      return isSetUserType();
    case LEGAL_REPRESENTATIVE:
      return isSetLegalRepresentative();
    case LAST_LOGIN_IP:
      return isSetLastLoginIp();
    case MOBILE:
      return isSetMobile();
    case MAC_INFO:
      return isSetMacInfo();
    case DISK_INFO:
      return isSetDiskInfo();
    case CPU_INFO:
      return isSetCpuInfo();
    case STATUS:
      return isSetStatus();
    case LAST_LOGIN_DATE:
      return isSetLastLoginDate();
    case COMPANY_NAME:
      return isSetCompanyName();
    case CERTIFICATE_TYPE:
      return isSetCertificateType();
    case BUSINESS_LICENSE_END_TIME:
      return isSetBusinessLicenseEndTime();
    case ORGANIZATION_CODE:
      return isSetOrganizationCode();
    case TAX_REGISTRATION_CERTIFICATE_NO:
      return isSetTaxRegistrationCertificateNo();
    case BUSINESS_SCOPE:
      return isSetBusinessScope();
    case LEGAL_IDCARD:
      return isSetLegalIdcard();
    case LEGAL_CERTIFICATE_END_TIME:
      return isSetLegalCertificateEndTime();
    case CONTACTOR_IDCARD_NO:
      return isSetContactorIdcardNo();
    case CONTACTOR_CERTIFICATE_END_TIME:
      return isSetContactorCertificateEndTime();
    case CONTACTOR_PHONE:
      return isSetContactorPhone();
    case IPC_NO:
      return isSetIpcNo();
    case BUSINESS_LICENSE_NO:
      return isSetBusinessLicenseNo();
    case BANK_ID:
      return isSetBankId();
    case BANK_NAME:
      return isSetBankName();
    case BANK_NO:
      return isSetBankNo();
    case BANK_CARD_TYPE:
      return isSetBankCardType();
    case BANK_STATUS:
      return isSetBankStatus();
    case ASSOCIATE_LINE_NUMBER:
      return isSetAssociateLineNumber();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AntifraudThrift)
      return this.equals((AntifraudThrift)that);
    return false;
  }

  public boolean equals(AntifraudThrift that) {
    if (that == null)
      return false;

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_loginName = true && this.isSetLoginName();
    boolean that_present_loginName = true && that.isSetLoginName();
    if (this_present_loginName || that_present_loginName) {
      if (!(this_present_loginName && that_present_loginName))
        return false;
      if (!this.loginName.equals(that.loginName))
        return false;
    }

    boolean this_present_userType = true && this.isSetUserType();
    boolean that_present_userType = true && that.isSetUserType();
    if (this_present_userType || that_present_userType) {
      if (!(this_present_userType && that_present_userType))
        return false;
      if (!this.userType.equals(that.userType))
        return false;
    }

    boolean this_present_legalRepresentative = true && this.isSetLegalRepresentative();
    boolean that_present_legalRepresentative = true && that.isSetLegalRepresentative();
    if (this_present_legalRepresentative || that_present_legalRepresentative) {
      if (!(this_present_legalRepresentative && that_present_legalRepresentative))
        return false;
      if (!this.legalRepresentative.equals(that.legalRepresentative))
        return false;
    }

    boolean this_present_lastLoginIp = true && this.isSetLastLoginIp();
    boolean that_present_lastLoginIp = true && that.isSetLastLoginIp();
    if (this_present_lastLoginIp || that_present_lastLoginIp) {
      if (!(this_present_lastLoginIp && that_present_lastLoginIp))
        return false;
      if (!this.lastLoginIp.equals(that.lastLoginIp))
        return false;
    }

    boolean this_present_mobile = true && this.isSetMobile();
    boolean that_present_mobile = true && that.isSetMobile();
    if (this_present_mobile || that_present_mobile) {
      if (!(this_present_mobile && that_present_mobile))
        return false;
      if (!this.mobile.equals(that.mobile))
        return false;
    }

    boolean this_present_macInfo = true && this.isSetMacInfo();
    boolean that_present_macInfo = true && that.isSetMacInfo();
    if (this_present_macInfo || that_present_macInfo) {
      if (!(this_present_macInfo && that_present_macInfo))
        return false;
      if (!this.macInfo.equals(that.macInfo))
        return false;
    }

    boolean this_present_diskInfo = true && this.isSetDiskInfo();
    boolean that_present_diskInfo = true && that.isSetDiskInfo();
    if (this_present_diskInfo || that_present_diskInfo) {
      if (!(this_present_diskInfo && that_present_diskInfo))
        return false;
      if (!this.diskInfo.equals(that.diskInfo))
        return false;
    }

    boolean this_present_cpuInfo = true && this.isSetCpuInfo();
    boolean that_present_cpuInfo = true && that.isSetCpuInfo();
    if (this_present_cpuInfo || that_present_cpuInfo) {
      if (!(this_present_cpuInfo && that_present_cpuInfo))
        return false;
      if (!this.cpuInfo.equals(that.cpuInfo))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_lastLoginDate = true && this.isSetLastLoginDate();
    boolean that_present_lastLoginDate = true && that.isSetLastLoginDate();
    if (this_present_lastLoginDate || that_present_lastLoginDate) {
      if (!(this_present_lastLoginDate && that_present_lastLoginDate))
        return false;
      if (!this.lastLoginDate.equals(that.lastLoginDate))
        return false;
    }

    boolean this_present_companyName = true && this.isSetCompanyName();
    boolean that_present_companyName = true && that.isSetCompanyName();
    if (this_present_companyName || that_present_companyName) {
      if (!(this_present_companyName && that_present_companyName))
        return false;
      if (!this.companyName.equals(that.companyName))
        return false;
    }

    boolean this_present_certificateType = true && this.isSetCertificateType();
    boolean that_present_certificateType = true && that.isSetCertificateType();
    if (this_present_certificateType || that_present_certificateType) {
      if (!(this_present_certificateType && that_present_certificateType))
        return false;
      if (!this.certificateType.equals(that.certificateType))
        return false;
    }

    boolean this_present_businessLicenseEndTime = true && this.isSetBusinessLicenseEndTime();
    boolean that_present_businessLicenseEndTime = true && that.isSetBusinessLicenseEndTime();
    if (this_present_businessLicenseEndTime || that_present_businessLicenseEndTime) {
      if (!(this_present_businessLicenseEndTime && that_present_businessLicenseEndTime))
        return false;
      if (!this.businessLicenseEndTime.equals(that.businessLicenseEndTime))
        return false;
    }

    boolean this_present_organizationCode = true && this.isSetOrganizationCode();
    boolean that_present_organizationCode = true && that.isSetOrganizationCode();
    if (this_present_organizationCode || that_present_organizationCode) {
      if (!(this_present_organizationCode && that_present_organizationCode))
        return false;
      if (!this.organizationCode.equals(that.organizationCode))
        return false;
    }

    boolean this_present_taxRegistrationCertificateNo = true && this.isSetTaxRegistrationCertificateNo();
    boolean that_present_taxRegistrationCertificateNo = true && that.isSetTaxRegistrationCertificateNo();
    if (this_present_taxRegistrationCertificateNo || that_present_taxRegistrationCertificateNo) {
      if (!(this_present_taxRegistrationCertificateNo && that_present_taxRegistrationCertificateNo))
        return false;
      if (!this.taxRegistrationCertificateNo.equals(that.taxRegistrationCertificateNo))
        return false;
    }

    boolean this_present_businessScope = true && this.isSetBusinessScope();
    boolean that_present_businessScope = true && that.isSetBusinessScope();
    if (this_present_businessScope || that_present_businessScope) {
      if (!(this_present_businessScope && that_present_businessScope))
        return false;
      if (!this.businessScope.equals(that.businessScope))
        return false;
    }

    boolean this_present_legalIdcard = true && this.isSetLegalIdcard();
    boolean that_present_legalIdcard = true && that.isSetLegalIdcard();
    if (this_present_legalIdcard || that_present_legalIdcard) {
      if (!(this_present_legalIdcard && that_present_legalIdcard))
        return false;
      if (!this.legalIdcard.equals(that.legalIdcard))
        return false;
    }

    boolean this_present_legalCertificateEndTime = true && this.isSetLegalCertificateEndTime();
    boolean that_present_legalCertificateEndTime = true && that.isSetLegalCertificateEndTime();
    if (this_present_legalCertificateEndTime || that_present_legalCertificateEndTime) {
      if (!(this_present_legalCertificateEndTime && that_present_legalCertificateEndTime))
        return false;
      if (!this.legalCertificateEndTime.equals(that.legalCertificateEndTime))
        return false;
    }

    boolean this_present_contactorIdcardNo = true && this.isSetContactorIdcardNo();
    boolean that_present_contactorIdcardNo = true && that.isSetContactorIdcardNo();
    if (this_present_contactorIdcardNo || that_present_contactorIdcardNo) {
      if (!(this_present_contactorIdcardNo && that_present_contactorIdcardNo))
        return false;
      if (!this.contactorIdcardNo.equals(that.contactorIdcardNo))
        return false;
    }

    boolean this_present_contactorCertificateEndTime = true && this.isSetContactorCertificateEndTime();
    boolean that_present_contactorCertificateEndTime = true && that.isSetContactorCertificateEndTime();
    if (this_present_contactorCertificateEndTime || that_present_contactorCertificateEndTime) {
      if (!(this_present_contactorCertificateEndTime && that_present_contactorCertificateEndTime))
        return false;
      if (!this.contactorCertificateEndTime.equals(that.contactorCertificateEndTime))
        return false;
    }

    boolean this_present_contactorPhone = true && this.isSetContactorPhone();
    boolean that_present_contactorPhone = true && that.isSetContactorPhone();
    if (this_present_contactorPhone || that_present_contactorPhone) {
      if (!(this_present_contactorPhone && that_present_contactorPhone))
        return false;
      if (!this.contactorPhone.equals(that.contactorPhone))
        return false;
    }

    boolean this_present_ipcNo = true && this.isSetIpcNo();
    boolean that_present_ipcNo = true && that.isSetIpcNo();
    if (this_present_ipcNo || that_present_ipcNo) {
      if (!(this_present_ipcNo && that_present_ipcNo))
        return false;
      if (!this.ipcNo.equals(that.ipcNo))
        return false;
    }

    boolean this_present_businessLicenseNo = true && this.isSetBusinessLicenseNo();
    boolean that_present_businessLicenseNo = true && that.isSetBusinessLicenseNo();
    if (this_present_businessLicenseNo || that_present_businessLicenseNo) {
      if (!(this_present_businessLicenseNo && that_present_businessLicenseNo))
        return false;
      if (!this.businessLicenseNo.equals(that.businessLicenseNo))
        return false;
    }

    boolean this_present_bankId = true && this.isSetBankId();
    boolean that_present_bankId = true && that.isSetBankId();
    if (this_present_bankId || that_present_bankId) {
      if (!(this_present_bankId && that_present_bankId))
        return false;
      if (!this.bankId.equals(that.bankId))
        return false;
    }

    boolean this_present_bankName = true && this.isSetBankName();
    boolean that_present_bankName = true && that.isSetBankName();
    if (this_present_bankName || that_present_bankName) {
      if (!(this_present_bankName && that_present_bankName))
        return false;
      if (!this.bankName.equals(that.bankName))
        return false;
    }

    boolean this_present_bankNo = true && this.isSetBankNo();
    boolean that_present_bankNo = true && that.isSetBankNo();
    if (this_present_bankNo || that_present_bankNo) {
      if (!(this_present_bankNo && that_present_bankNo))
        return false;
      if (!this.bankNo.equals(that.bankNo))
        return false;
    }

    boolean this_present_bankCardType = true && this.isSetBankCardType();
    boolean that_present_bankCardType = true && that.isSetBankCardType();
    if (this_present_bankCardType || that_present_bankCardType) {
      if (!(this_present_bankCardType && that_present_bankCardType))
        return false;
      if (!this.bankCardType.equals(that.bankCardType))
        return false;
    }

    boolean this_present_bankStatus = true && this.isSetBankStatus();
    boolean that_present_bankStatus = true && that.isSetBankStatus();
    if (this_present_bankStatus || that_present_bankStatus) {
      if (!(this_present_bankStatus && that_present_bankStatus))
        return false;
      if (!this.bankStatus.equals(that.bankStatus))
        return false;
    }

    boolean this_present_associateLineNumber = true && this.isSetAssociateLineNumber();
    boolean that_present_associateLineNumber = true && that.isSetAssociateLineNumber();
    if (this_present_associateLineNumber || that_present_associateLineNumber) {
      if (!(this_present_associateLineNumber && that_present_associateLineNumber))
        return false;
      if (!this.associateLineNumber.equals(that.associateLineNumber))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_loginName = true && (isSetLoginName());
    list.add(present_loginName);
    if (present_loginName)
      list.add(loginName);

    boolean present_userType = true && (isSetUserType());
    list.add(present_userType);
    if (present_userType)
      list.add(userType);

    boolean present_legalRepresentative = true && (isSetLegalRepresentative());
    list.add(present_legalRepresentative);
    if (present_legalRepresentative)
      list.add(legalRepresentative);

    boolean present_lastLoginIp = true && (isSetLastLoginIp());
    list.add(present_lastLoginIp);
    if (present_lastLoginIp)
      list.add(lastLoginIp);

    boolean present_mobile = true && (isSetMobile());
    list.add(present_mobile);
    if (present_mobile)
      list.add(mobile);

    boolean present_macInfo = true && (isSetMacInfo());
    list.add(present_macInfo);
    if (present_macInfo)
      list.add(macInfo);

    boolean present_diskInfo = true && (isSetDiskInfo());
    list.add(present_diskInfo);
    if (present_diskInfo)
      list.add(diskInfo);

    boolean present_cpuInfo = true && (isSetCpuInfo());
    list.add(present_cpuInfo);
    if (present_cpuInfo)
      list.add(cpuInfo);

    boolean present_status = true && (isSetStatus());
    list.add(present_status);
    if (present_status)
      list.add(status);

    boolean present_lastLoginDate = true && (isSetLastLoginDate());
    list.add(present_lastLoginDate);
    if (present_lastLoginDate)
      list.add(lastLoginDate);

    boolean present_companyName = true && (isSetCompanyName());
    list.add(present_companyName);
    if (present_companyName)
      list.add(companyName);

    boolean present_certificateType = true && (isSetCertificateType());
    list.add(present_certificateType);
    if (present_certificateType)
      list.add(certificateType);

    boolean present_businessLicenseEndTime = true && (isSetBusinessLicenseEndTime());
    list.add(present_businessLicenseEndTime);
    if (present_businessLicenseEndTime)
      list.add(businessLicenseEndTime);

    boolean present_organizationCode = true && (isSetOrganizationCode());
    list.add(present_organizationCode);
    if (present_organizationCode)
      list.add(organizationCode);

    boolean present_taxRegistrationCertificateNo = true && (isSetTaxRegistrationCertificateNo());
    list.add(present_taxRegistrationCertificateNo);
    if (present_taxRegistrationCertificateNo)
      list.add(taxRegistrationCertificateNo);

    boolean present_businessScope = true && (isSetBusinessScope());
    list.add(present_businessScope);
    if (present_businessScope)
      list.add(businessScope);

    boolean present_legalIdcard = true && (isSetLegalIdcard());
    list.add(present_legalIdcard);
    if (present_legalIdcard)
      list.add(legalIdcard);

    boolean present_legalCertificateEndTime = true && (isSetLegalCertificateEndTime());
    list.add(present_legalCertificateEndTime);
    if (present_legalCertificateEndTime)
      list.add(legalCertificateEndTime);

    boolean present_contactorIdcardNo = true && (isSetContactorIdcardNo());
    list.add(present_contactorIdcardNo);
    if (present_contactorIdcardNo)
      list.add(contactorIdcardNo);

    boolean present_contactorCertificateEndTime = true && (isSetContactorCertificateEndTime());
    list.add(present_contactorCertificateEndTime);
    if (present_contactorCertificateEndTime)
      list.add(contactorCertificateEndTime);

    boolean present_contactorPhone = true && (isSetContactorPhone());
    list.add(present_contactorPhone);
    if (present_contactorPhone)
      list.add(contactorPhone);

    boolean present_ipcNo = true && (isSetIpcNo());
    list.add(present_ipcNo);
    if (present_ipcNo)
      list.add(ipcNo);

    boolean present_businessLicenseNo = true && (isSetBusinessLicenseNo());
    list.add(present_businessLicenseNo);
    if (present_businessLicenseNo)
      list.add(businessLicenseNo);

    boolean present_bankId = true && (isSetBankId());
    list.add(present_bankId);
    if (present_bankId)
      list.add(bankId);

    boolean present_bankName = true && (isSetBankName());
    list.add(present_bankName);
    if (present_bankName)
      list.add(bankName);

    boolean present_bankNo = true && (isSetBankNo());
    list.add(present_bankNo);
    if (present_bankNo)
      list.add(bankNo);

    boolean present_bankCardType = true && (isSetBankCardType());
    list.add(present_bankCardType);
    if (present_bankCardType)
      list.add(bankCardType);

    boolean present_bankStatus = true && (isSetBankStatus());
    list.add(present_bankStatus);
    if (present_bankStatus)
      list.add(bankStatus);

    boolean present_associateLineNumber = true && (isSetAssociateLineNumber());
    list.add(present_associateLineNumber);
    if (present_associateLineNumber)
      list.add(associateLineNumber);

    return list.hashCode();
  }

  @Override
  public int compareTo(AntifraudThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoginName()).compareTo(other.isSetLoginName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoginName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loginName, other.loginName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserType()).compareTo(other.isSetUserType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userType, other.userType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLegalRepresentative()).compareTo(other.isSetLegalRepresentative());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLegalRepresentative()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.legalRepresentative, other.legalRepresentative);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastLoginIp()).compareTo(other.isSetLastLoginIp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastLoginIp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastLoginIp, other.lastLoginIp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMobile()).compareTo(other.isSetMobile());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMobile()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mobile, other.mobile);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMacInfo()).compareTo(other.isSetMacInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMacInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.macInfo, other.macInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDiskInfo()).compareTo(other.isSetDiskInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDiskInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.diskInfo, other.diskInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpuInfo()).compareTo(other.isSetCpuInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpuInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpuInfo, other.cpuInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastLoginDate()).compareTo(other.isSetLastLoginDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastLoginDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastLoginDate, other.lastLoginDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyName()).compareTo(other.isSetCompanyName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyName, other.companyName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCertificateType()).compareTo(other.isSetCertificateType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCertificateType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.certificateType, other.certificateType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessLicenseEndTime()).compareTo(other.isSetBusinessLicenseEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessLicenseEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessLicenseEndTime, other.businessLicenseEndTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrganizationCode()).compareTo(other.isSetOrganizationCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrganizationCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.organizationCode, other.organizationCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTaxRegistrationCertificateNo()).compareTo(other.isSetTaxRegistrationCertificateNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTaxRegistrationCertificateNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.taxRegistrationCertificateNo, other.taxRegistrationCertificateNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessScope()).compareTo(other.isSetBusinessScope());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessScope()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessScope, other.businessScope);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLegalIdcard()).compareTo(other.isSetLegalIdcard());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLegalIdcard()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.legalIdcard, other.legalIdcard);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLegalCertificateEndTime()).compareTo(other.isSetLegalCertificateEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLegalCertificateEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.legalCertificateEndTime, other.legalCertificateEndTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContactorIdcardNo()).compareTo(other.isSetContactorIdcardNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactorIdcardNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contactorIdcardNo, other.contactorIdcardNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContactorCertificateEndTime()).compareTo(other.isSetContactorCertificateEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactorCertificateEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contactorCertificateEndTime, other.contactorCertificateEndTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContactorPhone()).compareTo(other.isSetContactorPhone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContactorPhone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contactorPhone, other.contactorPhone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIpcNo()).compareTo(other.isSetIpcNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIpcNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ipcNo, other.ipcNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessLicenseNo()).compareTo(other.isSetBusinessLicenseNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessLicenseNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessLicenseNo, other.businessLicenseNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankId()).compareTo(other.isSetBankId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankId, other.bankId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankName()).compareTo(other.isSetBankName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankName, other.bankName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankNo()).compareTo(other.isSetBankNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankNo, other.bankNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankCardType()).compareTo(other.isSetBankCardType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankCardType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankCardType, other.bankCardType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankStatus()).compareTo(other.isSetBankStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankStatus, other.bankStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAssociateLineNumber()).compareTo(other.isSetAssociateLineNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAssociateLineNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.associateLineNumber, other.associateLineNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AntifraudThrift(");
    boolean first = true;

    sb.append("merchantId:");
    if (this.merchantId == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("loginName:");
    if (this.loginName == null) {
      sb.append("null");
    } else {
      sb.append(this.loginName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("userType:");
    if (this.userType == null) {
      sb.append("null");
    } else {
      sb.append(this.userType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("legalRepresentative:");
    if (this.legalRepresentative == null) {
      sb.append("null");
    } else {
      sb.append(this.legalRepresentative);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastLoginIp:");
    if (this.lastLoginIp == null) {
      sb.append("null");
    } else {
      sb.append(this.lastLoginIp);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("mobile:");
    if (this.mobile == null) {
      sb.append("null");
    } else {
      sb.append(this.mobile);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("macInfo:");
    if (this.macInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.macInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("diskInfo:");
    if (this.diskInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.diskInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cpuInfo:");
    if (this.cpuInfo == null) {
      sb.append("null");
    } else {
      sb.append(this.cpuInfo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastLoginDate:");
    if (this.lastLoginDate == null) {
      sb.append("null");
    } else {
      sb.append(this.lastLoginDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("companyName:");
    if (this.companyName == null) {
      sb.append("null");
    } else {
      sb.append(this.companyName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("certificateType:");
    if (this.certificateType == null) {
      sb.append("null");
    } else {
      sb.append(this.certificateType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessLicenseEndTime:");
    if (this.businessLicenseEndTime == null) {
      sb.append("null");
    } else {
      sb.append(this.businessLicenseEndTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("organizationCode:");
    if (this.organizationCode == null) {
      sb.append("null");
    } else {
      sb.append(this.organizationCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("taxRegistrationCertificateNo:");
    if (this.taxRegistrationCertificateNo == null) {
      sb.append("null");
    } else {
      sb.append(this.taxRegistrationCertificateNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessScope:");
    if (this.businessScope == null) {
      sb.append("null");
    } else {
      sb.append(this.businessScope);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("legalIdcard:");
    if (this.legalIdcard == null) {
      sb.append("null");
    } else {
      sb.append(this.legalIdcard);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("legalCertificateEndTime:");
    if (this.legalCertificateEndTime == null) {
      sb.append("null");
    } else {
      sb.append(this.legalCertificateEndTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contactorIdcardNo:");
    if (this.contactorIdcardNo == null) {
      sb.append("null");
    } else {
      sb.append(this.contactorIdcardNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contactorCertificateEndTime:");
    if (this.contactorCertificateEndTime == null) {
      sb.append("null");
    } else {
      sb.append(this.contactorCertificateEndTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contactorPhone:");
    if (this.contactorPhone == null) {
      sb.append("null");
    } else {
      sb.append(this.contactorPhone);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ipcNo:");
    if (this.ipcNo == null) {
      sb.append("null");
    } else {
      sb.append(this.ipcNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessLicenseNo:");
    if (this.businessLicenseNo == null) {
      sb.append("null");
    } else {
      sb.append(this.businessLicenseNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankId:");
    if (this.bankId == null) {
      sb.append("null");
    } else {
      sb.append(this.bankId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankName:");
    if (this.bankName == null) {
      sb.append("null");
    } else {
      sb.append(this.bankName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankNo:");
    if (this.bankNo == null) {
      sb.append("null");
    } else {
      sb.append(this.bankNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankCardType:");
    if (this.bankCardType == null) {
      sb.append("null");
    } else {
      sb.append(this.bankCardType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankStatus:");
    if (this.bankStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.bankStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("associateLineNumber:");
    if (this.associateLineNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.associateLineNumber);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AntifraudThriftStandardSchemeFactory implements SchemeFactory {
    public AntifraudThriftStandardScheme getScheme() {
      return new AntifraudThriftStandardScheme();
    }
  }

  private static class AntifraudThriftStandardScheme extends StandardScheme<AntifraudThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AntifraudThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // LOGIN_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.loginName = iprot.readString();
              struct.setLoginNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // USER_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.userType = iprot.readString();
              struct.setUserTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LEGAL_REPRESENTATIVE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.legalRepresentative = iprot.readString();
              struct.setLegalRepresentativeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // LAST_LOGIN_IP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lastLoginIp = iprot.readString();
              struct.setLastLoginIpIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MOBILE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.mobile = iprot.readString();
              struct.setMobileIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // MAC_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.macInfo = iprot.readString();
              struct.setMacInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // DISK_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.diskInfo = iprot.readString();
              struct.setDiskInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CPU_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpuInfo = iprot.readString();
              struct.setCpuInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.status = iprot.readString();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // LAST_LOGIN_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lastLoginDate = iprot.readString();
              struct.setLastLoginDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // COMPANY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.companyName = iprot.readString();
              struct.setCompanyNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CERTIFICATE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.certificateType = iprot.readString();
              struct.setCertificateTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // BUSINESS_LICENSE_END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.businessLicenseEndTime = iprot.readString();
              struct.setBusinessLicenseEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // ORGANIZATION_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.organizationCode = iprot.readString();
              struct.setOrganizationCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // TAX_REGISTRATION_CERTIFICATE_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.taxRegistrationCertificateNo = iprot.readString();
              struct.setTaxRegistrationCertificateNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // BUSINESS_SCOPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.businessScope = iprot.readString();
              struct.setBusinessScopeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // LEGAL_IDCARD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.legalIdcard = iprot.readString();
              struct.setLegalIdcardIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // LEGAL_CERTIFICATE_END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.legalCertificateEndTime = iprot.readString();
              struct.setLegalCertificateEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // CONTACTOR_IDCARD_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contactorIdcardNo = iprot.readString();
              struct.setContactorIdcardNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // CONTACTOR_CERTIFICATE_END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contactorCertificateEndTime = iprot.readString();
              struct.setContactorCertificateEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // CONTACTOR_PHONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contactorPhone = iprot.readString();
              struct.setContactorPhoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // IPC_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ipcNo = iprot.readString();
              struct.setIpcNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // BUSINESS_LICENSE_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.businessLicenseNo = iprot.readString();
              struct.setBusinessLicenseNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // BANK_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankId = iprot.readString();
              struct.setBankIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // BANK_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankName = iprot.readString();
              struct.setBankNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // BANK_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankNo = iprot.readString();
              struct.setBankNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // BANK_CARD_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankCardType = iprot.readString();
              struct.setBankCardTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // BANK_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankStatus = iprot.readString();
              struct.setBankStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // ASSOCIATE_LINE_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.associateLineNumber = iprot.readString();
              struct.setAssociateLineNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AntifraudThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.merchantId != null) {
        oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
        oprot.writeString(struct.merchantId);
        oprot.writeFieldEnd();
      }
      if (struct.loginName != null) {
        oprot.writeFieldBegin(LOGIN_NAME_FIELD_DESC);
        oprot.writeString(struct.loginName);
        oprot.writeFieldEnd();
      }
      if (struct.userType != null) {
        oprot.writeFieldBegin(USER_TYPE_FIELD_DESC);
        oprot.writeString(struct.userType);
        oprot.writeFieldEnd();
      }
      if (struct.legalRepresentative != null) {
        oprot.writeFieldBegin(LEGAL_REPRESENTATIVE_FIELD_DESC);
        oprot.writeString(struct.legalRepresentative);
        oprot.writeFieldEnd();
      }
      if (struct.lastLoginIp != null) {
        oprot.writeFieldBegin(LAST_LOGIN_IP_FIELD_DESC);
        oprot.writeString(struct.lastLoginIp);
        oprot.writeFieldEnd();
      }
      if (struct.mobile != null) {
        oprot.writeFieldBegin(MOBILE_FIELD_DESC);
        oprot.writeString(struct.mobile);
        oprot.writeFieldEnd();
      }
      if (struct.macInfo != null) {
        oprot.writeFieldBegin(MAC_INFO_FIELD_DESC);
        oprot.writeString(struct.macInfo);
        oprot.writeFieldEnd();
      }
      if (struct.diskInfo != null) {
        oprot.writeFieldBegin(DISK_INFO_FIELD_DESC);
        oprot.writeString(struct.diskInfo);
        oprot.writeFieldEnd();
      }
      if (struct.cpuInfo != null) {
        oprot.writeFieldBegin(CPU_INFO_FIELD_DESC);
        oprot.writeString(struct.cpuInfo);
        oprot.writeFieldEnd();
      }
      if (struct.status != null) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeString(struct.status);
        oprot.writeFieldEnd();
      }
      if (struct.lastLoginDate != null) {
        oprot.writeFieldBegin(LAST_LOGIN_DATE_FIELD_DESC);
        oprot.writeString(struct.lastLoginDate);
        oprot.writeFieldEnd();
      }
      if (struct.companyName != null) {
        oprot.writeFieldBegin(COMPANY_NAME_FIELD_DESC);
        oprot.writeString(struct.companyName);
        oprot.writeFieldEnd();
      }
      if (struct.certificateType != null) {
        oprot.writeFieldBegin(CERTIFICATE_TYPE_FIELD_DESC);
        oprot.writeString(struct.certificateType);
        oprot.writeFieldEnd();
      }
      if (struct.businessLicenseEndTime != null) {
        oprot.writeFieldBegin(BUSINESS_LICENSE_END_TIME_FIELD_DESC);
        oprot.writeString(struct.businessLicenseEndTime);
        oprot.writeFieldEnd();
      }
      if (struct.organizationCode != null) {
        oprot.writeFieldBegin(ORGANIZATION_CODE_FIELD_DESC);
        oprot.writeString(struct.organizationCode);
        oprot.writeFieldEnd();
      }
      if (struct.taxRegistrationCertificateNo != null) {
        oprot.writeFieldBegin(TAX_REGISTRATION_CERTIFICATE_NO_FIELD_DESC);
        oprot.writeString(struct.taxRegistrationCertificateNo);
        oprot.writeFieldEnd();
      }
      if (struct.businessScope != null) {
        oprot.writeFieldBegin(BUSINESS_SCOPE_FIELD_DESC);
        oprot.writeString(struct.businessScope);
        oprot.writeFieldEnd();
      }
      if (struct.legalIdcard != null) {
        oprot.writeFieldBegin(LEGAL_IDCARD_FIELD_DESC);
        oprot.writeString(struct.legalIdcard);
        oprot.writeFieldEnd();
      }
      if (struct.legalCertificateEndTime != null) {
        oprot.writeFieldBegin(LEGAL_CERTIFICATE_END_TIME_FIELD_DESC);
        oprot.writeString(struct.legalCertificateEndTime);
        oprot.writeFieldEnd();
      }
      if (struct.contactorIdcardNo != null) {
        oprot.writeFieldBegin(CONTACTOR_IDCARD_NO_FIELD_DESC);
        oprot.writeString(struct.contactorIdcardNo);
        oprot.writeFieldEnd();
      }
      if (struct.contactorCertificateEndTime != null) {
        oprot.writeFieldBegin(CONTACTOR_CERTIFICATE_END_TIME_FIELD_DESC);
        oprot.writeString(struct.contactorCertificateEndTime);
        oprot.writeFieldEnd();
      }
      if (struct.contactorPhone != null) {
        oprot.writeFieldBegin(CONTACTOR_PHONE_FIELD_DESC);
        oprot.writeString(struct.contactorPhone);
        oprot.writeFieldEnd();
      }
      if (struct.ipcNo != null) {
        oprot.writeFieldBegin(IPC_NO_FIELD_DESC);
        oprot.writeString(struct.ipcNo);
        oprot.writeFieldEnd();
      }
      if (struct.businessLicenseNo != null) {
        oprot.writeFieldBegin(BUSINESS_LICENSE_NO_FIELD_DESC);
        oprot.writeString(struct.businessLicenseNo);
        oprot.writeFieldEnd();
      }
      if (struct.bankId != null) {
        oprot.writeFieldBegin(BANK_ID_FIELD_DESC);
        oprot.writeString(struct.bankId);
        oprot.writeFieldEnd();
      }
      if (struct.bankName != null) {
        oprot.writeFieldBegin(BANK_NAME_FIELD_DESC);
        oprot.writeString(struct.bankName);
        oprot.writeFieldEnd();
      }
      if (struct.bankNo != null) {
        oprot.writeFieldBegin(BANK_NO_FIELD_DESC);
        oprot.writeString(struct.bankNo);
        oprot.writeFieldEnd();
      }
      if (struct.bankCardType != null) {
        oprot.writeFieldBegin(BANK_CARD_TYPE_FIELD_DESC);
        oprot.writeString(struct.bankCardType);
        oprot.writeFieldEnd();
      }
      if (struct.bankStatus != null) {
        oprot.writeFieldBegin(BANK_STATUS_FIELD_DESC);
        oprot.writeString(struct.bankStatus);
        oprot.writeFieldEnd();
      }
      if (struct.associateLineNumber != null) {
        oprot.writeFieldBegin(ASSOCIATE_LINE_NUMBER_FIELD_DESC);
        oprot.writeString(struct.associateLineNumber);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AntifraudThriftTupleSchemeFactory implements SchemeFactory {
    public AntifraudThriftTupleScheme getScheme() {
      return new AntifraudThriftTupleScheme();
    }
  }

  private static class AntifraudThriftTupleScheme extends TupleScheme<AntifraudThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, AntifraudThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetMerchantId()) {
        optionals.set(0);
      }
      if (struct.isSetLoginName()) {
        optionals.set(1);
      }
      if (struct.isSetUserType()) {
        optionals.set(2);
      }
      if (struct.isSetLegalRepresentative()) {
        optionals.set(3);
      }
      if (struct.isSetLastLoginIp()) {
        optionals.set(4);
      }
      if (struct.isSetMobile()) {
        optionals.set(5);
      }
      if (struct.isSetMacInfo()) {
        optionals.set(6);
      }
      if (struct.isSetDiskInfo()) {
        optionals.set(7);
      }
      if (struct.isSetCpuInfo()) {
        optionals.set(8);
      }
      if (struct.isSetStatus()) {
        optionals.set(9);
      }
      if (struct.isSetLastLoginDate()) {
        optionals.set(10);
      }
      if (struct.isSetCompanyName()) {
        optionals.set(11);
      }
      if (struct.isSetCertificateType()) {
        optionals.set(12);
      }
      if (struct.isSetBusinessLicenseEndTime()) {
        optionals.set(13);
      }
      if (struct.isSetOrganizationCode()) {
        optionals.set(14);
      }
      if (struct.isSetTaxRegistrationCertificateNo()) {
        optionals.set(15);
      }
      if (struct.isSetBusinessScope()) {
        optionals.set(16);
      }
      if (struct.isSetLegalIdcard()) {
        optionals.set(17);
      }
      if (struct.isSetLegalCertificateEndTime()) {
        optionals.set(18);
      }
      if (struct.isSetContactorIdcardNo()) {
        optionals.set(19);
      }
      if (struct.isSetContactorCertificateEndTime()) {
        optionals.set(20);
      }
      if (struct.isSetContactorPhone()) {
        optionals.set(21);
      }
      if (struct.isSetIpcNo()) {
        optionals.set(22);
      }
      if (struct.isSetBusinessLicenseNo()) {
        optionals.set(23);
      }
      if (struct.isSetBankId()) {
        optionals.set(24);
      }
      if (struct.isSetBankName()) {
        optionals.set(25);
      }
      if (struct.isSetBankNo()) {
        optionals.set(26);
      }
      if (struct.isSetBankCardType()) {
        optionals.set(27);
      }
      if (struct.isSetBankStatus()) {
        optionals.set(28);
      }
      if (struct.isSetAssociateLineNumber()) {
        optionals.set(29);
      }
      oprot.writeBitSet(optionals, 30);
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetLoginName()) {
        oprot.writeString(struct.loginName);
      }
      if (struct.isSetUserType()) {
        oprot.writeString(struct.userType);
      }
      if (struct.isSetLegalRepresentative()) {
        oprot.writeString(struct.legalRepresentative);
      }
      if (struct.isSetLastLoginIp()) {
        oprot.writeString(struct.lastLoginIp);
      }
      if (struct.isSetMobile()) {
        oprot.writeString(struct.mobile);
      }
      if (struct.isSetMacInfo()) {
        oprot.writeString(struct.macInfo);
      }
      if (struct.isSetDiskInfo()) {
        oprot.writeString(struct.diskInfo);
      }
      if (struct.isSetCpuInfo()) {
        oprot.writeString(struct.cpuInfo);
      }
      if (struct.isSetStatus()) {
        oprot.writeString(struct.status);
      }
      if (struct.isSetLastLoginDate()) {
        oprot.writeString(struct.lastLoginDate);
      }
      if (struct.isSetCompanyName()) {
        oprot.writeString(struct.companyName);
      }
      if (struct.isSetCertificateType()) {
        oprot.writeString(struct.certificateType);
      }
      if (struct.isSetBusinessLicenseEndTime()) {
        oprot.writeString(struct.businessLicenseEndTime);
      }
      if (struct.isSetOrganizationCode()) {
        oprot.writeString(struct.organizationCode);
      }
      if (struct.isSetTaxRegistrationCertificateNo()) {
        oprot.writeString(struct.taxRegistrationCertificateNo);
      }
      if (struct.isSetBusinessScope()) {
        oprot.writeString(struct.businessScope);
      }
      if (struct.isSetLegalIdcard()) {
        oprot.writeString(struct.legalIdcard);
      }
      if (struct.isSetLegalCertificateEndTime()) {
        oprot.writeString(struct.legalCertificateEndTime);
      }
      if (struct.isSetContactorIdcardNo()) {
        oprot.writeString(struct.contactorIdcardNo);
      }
      if (struct.isSetContactorCertificateEndTime()) {
        oprot.writeString(struct.contactorCertificateEndTime);
      }
      if (struct.isSetContactorPhone()) {
        oprot.writeString(struct.contactorPhone);
      }
      if (struct.isSetIpcNo()) {
        oprot.writeString(struct.ipcNo);
      }
      if (struct.isSetBusinessLicenseNo()) {
        oprot.writeString(struct.businessLicenseNo);
      }
      if (struct.isSetBankId()) {
        oprot.writeString(struct.bankId);
      }
      if (struct.isSetBankName()) {
        oprot.writeString(struct.bankName);
      }
      if (struct.isSetBankNo()) {
        oprot.writeString(struct.bankNo);
      }
      if (struct.isSetBankCardType()) {
        oprot.writeString(struct.bankCardType);
      }
      if (struct.isSetBankStatus()) {
        oprot.writeString(struct.bankStatus);
      }
      if (struct.isSetAssociateLineNumber()) {
        oprot.writeString(struct.associateLineNumber);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AntifraudThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(30);
      if (incoming.get(0)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.loginName = iprot.readString();
        struct.setLoginNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.userType = iprot.readString();
        struct.setUserTypeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.legalRepresentative = iprot.readString();
        struct.setLegalRepresentativeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.lastLoginIp = iprot.readString();
        struct.setLastLoginIpIsSet(true);
      }
      if (incoming.get(5)) {
        struct.mobile = iprot.readString();
        struct.setMobileIsSet(true);
      }
      if (incoming.get(6)) {
        struct.macInfo = iprot.readString();
        struct.setMacInfoIsSet(true);
      }
      if (incoming.get(7)) {
        struct.diskInfo = iprot.readString();
        struct.setDiskInfoIsSet(true);
      }
      if (incoming.get(8)) {
        struct.cpuInfo = iprot.readString();
        struct.setCpuInfoIsSet(true);
      }
      if (incoming.get(9)) {
        struct.status = iprot.readString();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(10)) {
        struct.lastLoginDate = iprot.readString();
        struct.setLastLoginDateIsSet(true);
      }
      if (incoming.get(11)) {
        struct.companyName = iprot.readString();
        struct.setCompanyNameIsSet(true);
      }
      if (incoming.get(12)) {
        struct.certificateType = iprot.readString();
        struct.setCertificateTypeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.businessLicenseEndTime = iprot.readString();
        struct.setBusinessLicenseEndTimeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.organizationCode = iprot.readString();
        struct.setOrganizationCodeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.taxRegistrationCertificateNo = iprot.readString();
        struct.setTaxRegistrationCertificateNoIsSet(true);
      }
      if (incoming.get(16)) {
        struct.businessScope = iprot.readString();
        struct.setBusinessScopeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.legalIdcard = iprot.readString();
        struct.setLegalIdcardIsSet(true);
      }
      if (incoming.get(18)) {
        struct.legalCertificateEndTime = iprot.readString();
        struct.setLegalCertificateEndTimeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.contactorIdcardNo = iprot.readString();
        struct.setContactorIdcardNoIsSet(true);
      }
      if (incoming.get(20)) {
        struct.contactorCertificateEndTime = iprot.readString();
        struct.setContactorCertificateEndTimeIsSet(true);
      }
      if (incoming.get(21)) {
        struct.contactorPhone = iprot.readString();
        struct.setContactorPhoneIsSet(true);
      }
      if (incoming.get(22)) {
        struct.ipcNo = iprot.readString();
        struct.setIpcNoIsSet(true);
      }
      if (incoming.get(23)) {
        struct.businessLicenseNo = iprot.readString();
        struct.setBusinessLicenseNoIsSet(true);
      }
      if (incoming.get(24)) {
        struct.bankId = iprot.readString();
        struct.setBankIdIsSet(true);
      }
      if (incoming.get(25)) {
        struct.bankName = iprot.readString();
        struct.setBankNameIsSet(true);
      }
      if (incoming.get(26)) {
        struct.bankNo = iprot.readString();
        struct.setBankNoIsSet(true);
      }
      if (incoming.get(27)) {
        struct.bankCardType = iprot.readString();
        struct.setBankCardTypeIsSet(true);
      }
      if (incoming.get(28)) {
        struct.bankStatus = iprot.readString();
        struct.setBankStatusIsSet(true);
      }
      if (incoming.get(29)) {
        struct.associateLineNumber = iprot.readString();
        struct.setAssociateLineNumberIsSet(true);
      }
    }
  }

}

