/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.heepay.manage.rpc.service;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2017-09-13")
public class MerchantProductThrift implements org.apache.thrift.TBase<MerchantProductThrift, MerchantProductThrift._Fields>, java.io.Serializable, Cloneable, Comparable<MerchantProductThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MerchantProductThrift");

  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField PRODUCT_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("productCode", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PRODUCT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("productName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField VALIDITY_DATE_END_FIELD_DESC = new org.apache.thrift.protocol.TField("validityDateEnd", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField VALIDITY_DATE_BEGIN_FIELD_DESC = new org.apache.thrift.protocol.TField("validityDateBegin", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField FEE_FIELD_DESC = new org.apache.thrift.protocol.TField("fee", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("remark", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField TRX_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("trxType", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField BUSINESS_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("businessType", org.apache.thrift.protocol.TType.STRING, (short)9);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new MerchantProductThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new MerchantProductThriftTupleSchemeFactory());
  }

  public String merchantId; // required
  public String productCode; // required
  public String productName; // required
  public String validityDateEnd; // required
  public String validityDateBegin; // required
  public String fee; // required
  public String remark; // required
  public String trxType; // required
  public String businessType; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    MERCHANT_ID((short)1, "merchantId"),
    PRODUCT_CODE((short)2, "productCode"),
    PRODUCT_NAME((short)3, "productName"),
    VALIDITY_DATE_END((short)4, "validityDateEnd"),
    VALIDITY_DATE_BEGIN((short)5, "validityDateBegin"),
    FEE((short)6, "fee"),
    REMARK((short)7, "remark"),
    TRX_TYPE((short)8, "trxType"),
    BUSINESS_TYPE((short)9, "businessType");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MERCHANT_ID
          return MERCHANT_ID;
        case 2: // PRODUCT_CODE
          return PRODUCT_CODE;
        case 3: // PRODUCT_NAME
          return PRODUCT_NAME;
        case 4: // VALIDITY_DATE_END
          return VALIDITY_DATE_END;
        case 5: // VALIDITY_DATE_BEGIN
          return VALIDITY_DATE_BEGIN;
        case 6: // FEE
          return FEE;
        case 7: // REMARK
          return REMARK;
        case 8: // TRX_TYPE
          return TRX_TYPE;
        case 9: // BUSINESS_TYPE
          return BUSINESS_TYPE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_CODE, new org.apache.thrift.meta_data.FieldMetaData("productCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_NAME, new org.apache.thrift.meta_data.FieldMetaData("productName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALIDITY_DATE_END, new org.apache.thrift.meta_data.FieldMetaData("validityDateEnd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VALIDITY_DATE_BEGIN, new org.apache.thrift.meta_data.FieldMetaData("validityDateBegin", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FEE, new org.apache.thrift.meta_data.FieldMetaData("fee", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REMARK, new org.apache.thrift.meta_data.FieldMetaData("remark", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TRX_TYPE, new org.apache.thrift.meta_data.FieldMetaData("trxType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUSINESS_TYPE, new org.apache.thrift.meta_data.FieldMetaData("businessType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MerchantProductThrift.class, metaDataMap);
  }

  public MerchantProductThrift() {
  }

  public MerchantProductThrift(
    String merchantId,
    String productCode,
    String productName,
    String validityDateEnd,
    String validityDateBegin,
    String fee,
    String remark,
    String trxType,
    String businessType)
  {
    this();
    this.merchantId = merchantId;
    this.productCode = productCode;
    this.productName = productName;
    this.validityDateEnd = validityDateEnd;
    this.validityDateBegin = validityDateBegin;
    this.fee = fee;
    this.remark = remark;
    this.trxType = trxType;
    this.businessType = businessType;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MerchantProductThrift(MerchantProductThrift other) {
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetProductCode()) {
      this.productCode = other.productCode;
    }
    if (other.isSetProductName()) {
      this.productName = other.productName;
    }
    if (other.isSetValidityDateEnd()) {
      this.validityDateEnd = other.validityDateEnd;
    }
    if (other.isSetValidityDateBegin()) {
      this.validityDateBegin = other.validityDateBegin;
    }
    if (other.isSetFee()) {
      this.fee = other.fee;
    }
    if (other.isSetRemark()) {
      this.remark = other.remark;
    }
    if (other.isSetTrxType()) {
      this.trxType = other.trxType;
    }
    if (other.isSetBusinessType()) {
      this.businessType = other.businessType;
    }
  }

  public MerchantProductThrift deepCopy() {
    return new MerchantProductThrift(this);
  }

  @Override
  public void clear() {
    this.merchantId = null;
    this.productCode = null;
    this.productName = null;
    this.validityDateEnd = null;
    this.validityDateBegin = null;
    this.fee = null;
    this.remark = null;
    this.trxType = null;
    this.businessType = null;
  }

  public String getMerchantId() {
    return this.merchantId;
  }

  public MerchantProductThrift setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  public String getProductCode() {
    return this.productCode;
  }

  public MerchantProductThrift setProductCode(String productCode) {
    this.productCode = productCode;
    return this;
  }

  public void unsetProductCode() {
    this.productCode = null;
  }

  /** Returns true if field productCode is set (has been assigned a value) and false otherwise */
  public boolean isSetProductCode() {
    return this.productCode != null;
  }

  public void setProductCodeIsSet(boolean value) {
    if (!value) {
      this.productCode = null;
    }
  }

  public String getProductName() {
    return this.productName;
  }

  public MerchantProductThrift setProductName(String productName) {
    this.productName = productName;
    return this;
  }

  public void unsetProductName() {
    this.productName = null;
  }

  /** Returns true if field productName is set (has been assigned a value) and false otherwise */
  public boolean isSetProductName() {
    return this.productName != null;
  }

  public void setProductNameIsSet(boolean value) {
    if (!value) {
      this.productName = null;
    }
  }

  public String getValidityDateEnd() {
    return this.validityDateEnd;
  }

  public MerchantProductThrift setValidityDateEnd(String validityDateEnd) {
    this.validityDateEnd = validityDateEnd;
    return this;
  }

  public void unsetValidityDateEnd() {
    this.validityDateEnd = null;
  }

  /** Returns true if field validityDateEnd is set (has been assigned a value) and false otherwise */
  public boolean isSetValidityDateEnd() {
    return this.validityDateEnd != null;
  }

  public void setValidityDateEndIsSet(boolean value) {
    if (!value) {
      this.validityDateEnd = null;
    }
  }

  public String getValidityDateBegin() {
    return this.validityDateBegin;
  }

  public MerchantProductThrift setValidityDateBegin(String validityDateBegin) {
    this.validityDateBegin = validityDateBegin;
    return this;
  }

  public void unsetValidityDateBegin() {
    this.validityDateBegin = null;
  }

  /** Returns true if field validityDateBegin is set (has been assigned a value) and false otherwise */
  public boolean isSetValidityDateBegin() {
    return this.validityDateBegin != null;
  }

  public void setValidityDateBeginIsSet(boolean value) {
    if (!value) {
      this.validityDateBegin = null;
    }
  }

  public String getFee() {
    return this.fee;
  }

  public MerchantProductThrift setFee(String fee) {
    this.fee = fee;
    return this;
  }

  public void unsetFee() {
    this.fee = null;
  }

  /** Returns true if field fee is set (has been assigned a value) and false otherwise */
  public boolean isSetFee() {
    return this.fee != null;
  }

  public void setFeeIsSet(boolean value) {
    if (!value) {
      this.fee = null;
    }
  }

  public String getRemark() {
    return this.remark;
  }

  public MerchantProductThrift setRemark(String remark) {
    this.remark = remark;
    return this;
  }

  public void unsetRemark() {
    this.remark = null;
  }

  /** Returns true if field remark is set (has been assigned a value) and false otherwise */
  public boolean isSetRemark() {
    return this.remark != null;
  }

  public void setRemarkIsSet(boolean value) {
    if (!value) {
      this.remark = null;
    }
  }

  public String getTrxType() {
    return this.trxType;
  }

  public MerchantProductThrift setTrxType(String trxType) {
    this.trxType = trxType;
    return this;
  }

  public void unsetTrxType() {
    this.trxType = null;
  }

  /** Returns true if field trxType is set (has been assigned a value) and false otherwise */
  public boolean isSetTrxType() {
    return this.trxType != null;
  }

  public void setTrxTypeIsSet(boolean value) {
    if (!value) {
      this.trxType = null;
    }
  }

  public String getBusinessType() {
    return this.businessType;
  }

  public MerchantProductThrift setBusinessType(String businessType) {
    this.businessType = businessType;
    return this;
  }

  public void unsetBusinessType() {
    this.businessType = null;
  }

  /** Returns true if field businessType is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessType() {
    return this.businessType != null;
  }

  public void setBusinessTypeIsSet(boolean value) {
    if (!value) {
      this.businessType = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case PRODUCT_CODE:
      if (value == null) {
        unsetProductCode();
      } else {
        setProductCode((String)value);
      }
      break;

    case PRODUCT_NAME:
      if (value == null) {
        unsetProductName();
      } else {
        setProductName((String)value);
      }
      break;

    case VALIDITY_DATE_END:
      if (value == null) {
        unsetValidityDateEnd();
      } else {
        setValidityDateEnd((String)value);
      }
      break;

    case VALIDITY_DATE_BEGIN:
      if (value == null) {
        unsetValidityDateBegin();
      } else {
        setValidityDateBegin((String)value);
      }
      break;

    case FEE:
      if (value == null) {
        unsetFee();
      } else {
        setFee((String)value);
      }
      break;

    case REMARK:
      if (value == null) {
        unsetRemark();
      } else {
        setRemark((String)value);
      }
      break;

    case TRX_TYPE:
      if (value == null) {
        unsetTrxType();
      } else {
        setTrxType((String)value);
      }
      break;

    case BUSINESS_TYPE:
      if (value == null) {
        unsetBusinessType();
      } else {
        setBusinessType((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case MERCHANT_ID:
      return getMerchantId();

    case PRODUCT_CODE:
      return getProductCode();

    case PRODUCT_NAME:
      return getProductName();

    case VALIDITY_DATE_END:
      return getValidityDateEnd();

    case VALIDITY_DATE_BEGIN:
      return getValidityDateBegin();

    case FEE:
      return getFee();

    case REMARK:
      return getRemark();

    case TRX_TYPE:
      return getTrxType();

    case BUSINESS_TYPE:
      return getBusinessType();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case MERCHANT_ID:
      return isSetMerchantId();
    case PRODUCT_CODE:
      return isSetProductCode();
    case PRODUCT_NAME:
      return isSetProductName();
    case VALIDITY_DATE_END:
      return isSetValidityDateEnd();
    case VALIDITY_DATE_BEGIN:
      return isSetValidityDateBegin();
    case FEE:
      return isSetFee();
    case REMARK:
      return isSetRemark();
    case TRX_TYPE:
      return isSetTrxType();
    case BUSINESS_TYPE:
      return isSetBusinessType();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MerchantProductThrift)
      return this.equals((MerchantProductThrift)that);
    return false;
  }

  public boolean equals(MerchantProductThrift that) {
    if (that == null)
      return false;

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_productCode = true && this.isSetProductCode();
    boolean that_present_productCode = true && that.isSetProductCode();
    if (this_present_productCode || that_present_productCode) {
      if (!(this_present_productCode && that_present_productCode))
        return false;
      if (!this.productCode.equals(that.productCode))
        return false;
    }

    boolean this_present_productName = true && this.isSetProductName();
    boolean that_present_productName = true && that.isSetProductName();
    if (this_present_productName || that_present_productName) {
      if (!(this_present_productName && that_present_productName))
        return false;
      if (!this.productName.equals(that.productName))
        return false;
    }

    boolean this_present_validityDateEnd = true && this.isSetValidityDateEnd();
    boolean that_present_validityDateEnd = true && that.isSetValidityDateEnd();
    if (this_present_validityDateEnd || that_present_validityDateEnd) {
      if (!(this_present_validityDateEnd && that_present_validityDateEnd))
        return false;
      if (!this.validityDateEnd.equals(that.validityDateEnd))
        return false;
    }

    boolean this_present_validityDateBegin = true && this.isSetValidityDateBegin();
    boolean that_present_validityDateBegin = true && that.isSetValidityDateBegin();
    if (this_present_validityDateBegin || that_present_validityDateBegin) {
      if (!(this_present_validityDateBegin && that_present_validityDateBegin))
        return false;
      if (!this.validityDateBegin.equals(that.validityDateBegin))
        return false;
    }

    boolean this_present_fee = true && this.isSetFee();
    boolean that_present_fee = true && that.isSetFee();
    if (this_present_fee || that_present_fee) {
      if (!(this_present_fee && that_present_fee))
        return false;
      if (!this.fee.equals(that.fee))
        return false;
    }

    boolean this_present_remark = true && this.isSetRemark();
    boolean that_present_remark = true && that.isSetRemark();
    if (this_present_remark || that_present_remark) {
      if (!(this_present_remark && that_present_remark))
        return false;
      if (!this.remark.equals(that.remark))
        return false;
    }

    boolean this_present_trxType = true && this.isSetTrxType();
    boolean that_present_trxType = true && that.isSetTrxType();
    if (this_present_trxType || that_present_trxType) {
      if (!(this_present_trxType && that_present_trxType))
        return false;
      if (!this.trxType.equals(that.trxType))
        return false;
    }

    boolean this_present_businessType = true && this.isSetBusinessType();
    boolean that_present_businessType = true && that.isSetBusinessType();
    if (this_present_businessType || that_present_businessType) {
      if (!(this_present_businessType && that_present_businessType))
        return false;
      if (!this.businessType.equals(that.businessType))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_productCode = true && (isSetProductCode());
    list.add(present_productCode);
    if (present_productCode)
      list.add(productCode);

    boolean present_productName = true && (isSetProductName());
    list.add(present_productName);
    if (present_productName)
      list.add(productName);

    boolean present_validityDateEnd = true && (isSetValidityDateEnd());
    list.add(present_validityDateEnd);
    if (present_validityDateEnd)
      list.add(validityDateEnd);

    boolean present_validityDateBegin = true && (isSetValidityDateBegin());
    list.add(present_validityDateBegin);
    if (present_validityDateBegin)
      list.add(validityDateBegin);

    boolean present_fee = true && (isSetFee());
    list.add(present_fee);
    if (present_fee)
      list.add(fee);

    boolean present_remark = true && (isSetRemark());
    list.add(present_remark);
    if (present_remark)
      list.add(remark);

    boolean present_trxType = true && (isSetTrxType());
    list.add(present_trxType);
    if (present_trxType)
      list.add(trxType);

    boolean present_businessType = true && (isSetBusinessType());
    list.add(present_businessType);
    if (present_businessType)
      list.add(businessType);

    return list.hashCode();
  }

  @Override
  public int compareTo(MerchantProductThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductCode()).compareTo(other.isSetProductCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productCode, other.productCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductName()).compareTo(other.isSetProductName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productName, other.productName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValidityDateEnd()).compareTo(other.isSetValidityDateEnd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValidityDateEnd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.validityDateEnd, other.validityDateEnd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValidityDateBegin()).compareTo(other.isSetValidityDateBegin());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValidityDateBegin()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.validityDateBegin, other.validityDateBegin);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFee()).compareTo(other.isSetFee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fee, other.fee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRemark()).compareTo(other.isSetRemark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remark, other.remark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTrxType()).compareTo(other.isSetTrxType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTrxType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.trxType, other.trxType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessType()).compareTo(other.isSetBusinessType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessType, other.businessType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MerchantProductThrift(");
    boolean first = true;

    sb.append("merchantId:");
    if (this.merchantId == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productCode:");
    if (this.productCode == null) {
      sb.append("null");
    } else {
      sb.append(this.productCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productName:");
    if (this.productName == null) {
      sb.append("null");
    } else {
      sb.append(this.productName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("validityDateEnd:");
    if (this.validityDateEnd == null) {
      sb.append("null");
    } else {
      sb.append(this.validityDateEnd);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("validityDateBegin:");
    if (this.validityDateBegin == null) {
      sb.append("null");
    } else {
      sb.append(this.validityDateBegin);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fee:");
    if (this.fee == null) {
      sb.append("null");
    } else {
      sb.append(this.fee);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("remark:");
    if (this.remark == null) {
      sb.append("null");
    } else {
      sb.append(this.remark);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("trxType:");
    if (this.trxType == null) {
      sb.append("null");
    } else {
      sb.append(this.trxType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessType:");
    if (this.businessType == null) {
      sb.append("null");
    } else {
      sb.append(this.businessType);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MerchantProductThriftStandardSchemeFactory implements SchemeFactory {
    public MerchantProductThriftStandardScheme getScheme() {
      return new MerchantProductThriftStandardScheme();
    }
  }

  private static class MerchantProductThriftStandardScheme extends StandardScheme<MerchantProductThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MerchantProductThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PRODUCT_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productCode = iprot.readString();
              struct.setProductCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PRODUCT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productName = iprot.readString();
              struct.setProductNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // VALIDITY_DATE_END
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.validityDateEnd = iprot.readString();
              struct.setValidityDateEndIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // VALIDITY_DATE_BEGIN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.validityDateBegin = iprot.readString();
              struct.setValidityDateBeginIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // FEE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fee = iprot.readString();
              struct.setFeeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.remark = iprot.readString();
              struct.setRemarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // TRX_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.trxType = iprot.readString();
              struct.setTrxTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // BUSINESS_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.businessType = iprot.readString();
              struct.setBusinessTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MerchantProductThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.merchantId != null) {
        oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
        oprot.writeString(struct.merchantId);
        oprot.writeFieldEnd();
      }
      if (struct.productCode != null) {
        oprot.writeFieldBegin(PRODUCT_CODE_FIELD_DESC);
        oprot.writeString(struct.productCode);
        oprot.writeFieldEnd();
      }
      if (struct.productName != null) {
        oprot.writeFieldBegin(PRODUCT_NAME_FIELD_DESC);
        oprot.writeString(struct.productName);
        oprot.writeFieldEnd();
      }
      if (struct.validityDateEnd != null) {
        oprot.writeFieldBegin(VALIDITY_DATE_END_FIELD_DESC);
        oprot.writeString(struct.validityDateEnd);
        oprot.writeFieldEnd();
      }
      if (struct.validityDateBegin != null) {
        oprot.writeFieldBegin(VALIDITY_DATE_BEGIN_FIELD_DESC);
        oprot.writeString(struct.validityDateBegin);
        oprot.writeFieldEnd();
      }
      if (struct.fee != null) {
        oprot.writeFieldBegin(FEE_FIELD_DESC);
        oprot.writeString(struct.fee);
        oprot.writeFieldEnd();
      }
      if (struct.remark != null) {
        oprot.writeFieldBegin(REMARK_FIELD_DESC);
        oprot.writeString(struct.remark);
        oprot.writeFieldEnd();
      }
      if (struct.trxType != null) {
        oprot.writeFieldBegin(TRX_TYPE_FIELD_DESC);
        oprot.writeString(struct.trxType);
        oprot.writeFieldEnd();
      }
      if (struct.businessType != null) {
        oprot.writeFieldBegin(BUSINESS_TYPE_FIELD_DESC);
        oprot.writeString(struct.businessType);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MerchantProductThriftTupleSchemeFactory implements SchemeFactory {
    public MerchantProductThriftTupleScheme getScheme() {
      return new MerchantProductThriftTupleScheme();
    }
  }

  private static class MerchantProductThriftTupleScheme extends TupleScheme<MerchantProductThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MerchantProductThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetMerchantId()) {
        optionals.set(0);
      }
      if (struct.isSetProductCode()) {
        optionals.set(1);
      }
      if (struct.isSetProductName()) {
        optionals.set(2);
      }
      if (struct.isSetValidityDateEnd()) {
        optionals.set(3);
      }
      if (struct.isSetValidityDateBegin()) {
        optionals.set(4);
      }
      if (struct.isSetFee()) {
        optionals.set(5);
      }
      if (struct.isSetRemark()) {
        optionals.set(6);
      }
      if (struct.isSetTrxType()) {
        optionals.set(7);
      }
      if (struct.isSetBusinessType()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetProductCode()) {
        oprot.writeString(struct.productCode);
      }
      if (struct.isSetProductName()) {
        oprot.writeString(struct.productName);
      }
      if (struct.isSetValidityDateEnd()) {
        oprot.writeString(struct.validityDateEnd);
      }
      if (struct.isSetValidityDateBegin()) {
        oprot.writeString(struct.validityDateBegin);
      }
      if (struct.isSetFee()) {
        oprot.writeString(struct.fee);
      }
      if (struct.isSetRemark()) {
        oprot.writeString(struct.remark);
      }
      if (struct.isSetTrxType()) {
        oprot.writeString(struct.trxType);
      }
      if (struct.isSetBusinessType()) {
        oprot.writeString(struct.businessType);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MerchantProductThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.productCode = iprot.readString();
        struct.setProductCodeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.productName = iprot.readString();
        struct.setProductNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.validityDateEnd = iprot.readString();
        struct.setValidityDateEndIsSet(true);
      }
      if (incoming.get(4)) {
        struct.validityDateBegin = iprot.readString();
        struct.setValidityDateBeginIsSet(true);
      }
      if (incoming.get(5)) {
        struct.fee = iprot.readString();
        struct.setFeeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.remark = iprot.readString();
        struct.setRemarkIsSet(true);
      }
      if (incoming.get(7)) {
        struct.trxType = iprot.readString();
        struct.setTrxTypeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.businessType = iprot.readString();
        struct.setBusinessTypeIsSet(true);
      }
    }
  }

}

