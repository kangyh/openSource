/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.heepay.manage.rpc.service;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2017-09-12")
public class PayChannelThrift implements org.apache.thrift.TBase<PayChannelThrift, PayChannelThrift._Fields>, java.io.Serializable, Cloneable, Comparable<PayChannelThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PayChannelThrift");

  private static final org.apache.thrift.protocol.TField CHANNEL_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("channelCode", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CHANNEL_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("channelName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField BANK_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("bankName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField BANK_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("bankNo", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CHANNEL_PARTNER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("channelPartnerName", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CHANNEL_PARTNER_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("channelPartnerCode", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField CHANNEL_TYPE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("channelTypeName", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField CHANNEL_TYPE_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("channelTypeCode", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField CARD_TYPE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("cardTypeName", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField CARD_TYPE_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("cardTypeCode", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField ACCOUNT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("accountType", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField BUSINESS_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("businessType", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField CHARGE_DEDUCT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("chargeDeductType", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField CHARGE_RETURN_TAG_FIELD_DESC = new org.apache.thrift.protocol.TField("chargeReturnTag", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField EFFECT_START_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("effectStartDate", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField EFFECT_END_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("effectEndDate", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField COST_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("costType", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField COST_RATE_FIELD_DESC = new org.apache.thrift.protocol.TField("costRate", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField COST_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("costCount", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField CONTRACT_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("contractDate", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField SETTLE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("settleType", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField SETTLE_PERIOD_FIELD_DESC = new org.apache.thrift.protocol.TField("settlePeriod", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField SORT_FIELD_DESC = new org.apache.thrift.protocol.TField("sort", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField PERLIMIT_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("perlimitAmount", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField DAYLIMIT_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("daylimitAmount", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField MONLIMIT_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("monlimitAmount", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField ORDER_SETTLE_PERIOD_FIELD_DESC = new org.apache.thrift.protocol.TField("orderSettlePeriod", org.apache.thrift.protocol.TType.STRING, (short)28);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new PayChannelThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new PayChannelThriftTupleSchemeFactory());
  }

  public String channelCode; // required
  public String channelName; // required
  public String bankName; // required
  public String bankNo; // required
  public String channelPartnerName; // required
  public String channelPartnerCode; // required
  public String channelTypeName; // required
  public String channelTypeCode; // required
  public String cardTypeName; // required
  public String cardTypeCode; // required
  public String accountType; // required
  public String businessType; // required
  public String chargeDeductType; // required
  public String chargeReturnTag; // required
  public String effectStartDate; // required
  public String effectEndDate; // required
  public String costType; // required
  public String costRate; // required
  public String costCount; // required
  public String status; // required
  public String contractDate; // required
  public String settleType; // required
  public String settlePeriod; // required
  public String sort; // required
  public String perlimitAmount; // required
  public String daylimitAmount; // required
  public String monlimitAmount; // required
  public String orderSettlePeriod; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    CHANNEL_CODE((short)1, "channelCode"),
    CHANNEL_NAME((short)2, "channelName"),
    BANK_NAME((short)3, "bankName"),
    BANK_NO((short)4, "bankNo"),
    CHANNEL_PARTNER_NAME((short)5, "channelPartnerName"),
    CHANNEL_PARTNER_CODE((short)6, "channelPartnerCode"),
    CHANNEL_TYPE_NAME((short)7, "channelTypeName"),
    CHANNEL_TYPE_CODE((short)8, "channelTypeCode"),
    CARD_TYPE_NAME((short)9, "cardTypeName"),
    CARD_TYPE_CODE((short)10, "cardTypeCode"),
    ACCOUNT_TYPE((short)11, "accountType"),
    BUSINESS_TYPE((short)12, "businessType"),
    CHARGE_DEDUCT_TYPE((short)13, "chargeDeductType"),
    CHARGE_RETURN_TAG((short)14, "chargeReturnTag"),
    EFFECT_START_DATE((short)15, "effectStartDate"),
    EFFECT_END_DATE((short)16, "effectEndDate"),
    COST_TYPE((short)17, "costType"),
    COST_RATE((short)18, "costRate"),
    COST_COUNT((short)19, "costCount"),
    STATUS((short)20, "status"),
    CONTRACT_DATE((short)21, "contractDate"),
    SETTLE_TYPE((short)22, "settleType"),
    SETTLE_PERIOD((short)23, "settlePeriod"),
    SORT((short)24, "sort"),
    PERLIMIT_AMOUNT((short)25, "perlimitAmount"),
    DAYLIMIT_AMOUNT((short)26, "daylimitAmount"),
    MONLIMIT_AMOUNT((short)27, "monlimitAmount"),
    ORDER_SETTLE_PERIOD((short)28, "orderSettlePeriod");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CHANNEL_CODE
          return CHANNEL_CODE;
        case 2: // CHANNEL_NAME
          return CHANNEL_NAME;
        case 3: // BANK_NAME
          return BANK_NAME;
        case 4: // BANK_NO
          return BANK_NO;
        case 5: // CHANNEL_PARTNER_NAME
          return CHANNEL_PARTNER_NAME;
        case 6: // CHANNEL_PARTNER_CODE
          return CHANNEL_PARTNER_CODE;
        case 7: // CHANNEL_TYPE_NAME
          return CHANNEL_TYPE_NAME;
        case 8: // CHANNEL_TYPE_CODE
          return CHANNEL_TYPE_CODE;
        case 9: // CARD_TYPE_NAME
          return CARD_TYPE_NAME;
        case 10: // CARD_TYPE_CODE
          return CARD_TYPE_CODE;
        case 11: // ACCOUNT_TYPE
          return ACCOUNT_TYPE;
        case 12: // BUSINESS_TYPE
          return BUSINESS_TYPE;
        case 13: // CHARGE_DEDUCT_TYPE
          return CHARGE_DEDUCT_TYPE;
        case 14: // CHARGE_RETURN_TAG
          return CHARGE_RETURN_TAG;
        case 15: // EFFECT_START_DATE
          return EFFECT_START_DATE;
        case 16: // EFFECT_END_DATE
          return EFFECT_END_DATE;
        case 17: // COST_TYPE
          return COST_TYPE;
        case 18: // COST_RATE
          return COST_RATE;
        case 19: // COST_COUNT
          return COST_COUNT;
        case 20: // STATUS
          return STATUS;
        case 21: // CONTRACT_DATE
          return CONTRACT_DATE;
        case 22: // SETTLE_TYPE
          return SETTLE_TYPE;
        case 23: // SETTLE_PERIOD
          return SETTLE_PERIOD;
        case 24: // SORT
          return SORT;
        case 25: // PERLIMIT_AMOUNT
          return PERLIMIT_AMOUNT;
        case 26: // DAYLIMIT_AMOUNT
          return DAYLIMIT_AMOUNT;
        case 27: // MONLIMIT_AMOUNT
          return MONLIMIT_AMOUNT;
        case 28: // ORDER_SETTLE_PERIOD
          return ORDER_SETTLE_PERIOD;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CHANNEL_CODE, new org.apache.thrift.meta_data.FieldMetaData("channelCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHANNEL_NAME, new org.apache.thrift.meta_data.FieldMetaData("channelName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_NAME, new org.apache.thrift.meta_data.FieldMetaData("bankName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_NO, new org.apache.thrift.meta_data.FieldMetaData("bankNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHANNEL_PARTNER_NAME, new org.apache.thrift.meta_data.FieldMetaData("channelPartnerName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHANNEL_PARTNER_CODE, new org.apache.thrift.meta_data.FieldMetaData("channelPartnerCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHANNEL_TYPE_NAME, new org.apache.thrift.meta_data.FieldMetaData("channelTypeName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHANNEL_TYPE_CODE, new org.apache.thrift.meta_data.FieldMetaData("channelTypeCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CARD_TYPE_NAME, new org.apache.thrift.meta_data.FieldMetaData("cardTypeName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CARD_TYPE_CODE, new org.apache.thrift.meta_data.FieldMetaData("cardTypeCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCOUNT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("accountType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BUSINESS_TYPE, new org.apache.thrift.meta_data.FieldMetaData("businessType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHARGE_DEDUCT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("chargeDeductType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHARGE_RETURN_TAG, new org.apache.thrift.meta_data.FieldMetaData("chargeReturnTag", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EFFECT_START_DATE, new org.apache.thrift.meta_data.FieldMetaData("effectStartDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EFFECT_END_DATE, new org.apache.thrift.meta_data.FieldMetaData("effectEndDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COST_TYPE, new org.apache.thrift.meta_data.FieldMetaData("costType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COST_RATE, new org.apache.thrift.meta_data.FieldMetaData("costRate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COST_COUNT, new org.apache.thrift.meta_data.FieldMetaData("costCount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONTRACT_DATE, new org.apache.thrift.meta_data.FieldMetaData("contractDate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("settleType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLE_PERIOD, new org.apache.thrift.meta_data.FieldMetaData("settlePeriod", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SORT, new org.apache.thrift.meta_data.FieldMetaData("sort", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PERLIMIT_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("perlimitAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DAYLIMIT_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("daylimitAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MONLIMIT_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("monlimitAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ORDER_SETTLE_PERIOD, new org.apache.thrift.meta_data.FieldMetaData("orderSettlePeriod", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PayChannelThrift.class, metaDataMap);
  }

  public PayChannelThrift() {
  }

  public PayChannelThrift(
    String channelCode,
    String channelName,
    String bankName,
    String bankNo,
    String channelPartnerName,
    String channelPartnerCode,
    String channelTypeName,
    String channelTypeCode,
    String cardTypeName,
    String cardTypeCode,
    String accountType,
    String businessType,
    String chargeDeductType,
    String chargeReturnTag,
    String effectStartDate,
    String effectEndDate,
    String costType,
    String costRate,
    String costCount,
    String status,
    String contractDate,
    String settleType,
    String settlePeriod,
    String sort,
    String perlimitAmount,
    String daylimitAmount,
    String monlimitAmount,
    String orderSettlePeriod)
  {
    this();
    this.channelCode = channelCode;
    this.channelName = channelName;
    this.bankName = bankName;
    this.bankNo = bankNo;
    this.channelPartnerName = channelPartnerName;
    this.channelPartnerCode = channelPartnerCode;
    this.channelTypeName = channelTypeName;
    this.channelTypeCode = channelTypeCode;
    this.cardTypeName = cardTypeName;
    this.cardTypeCode = cardTypeCode;
    this.accountType = accountType;
    this.businessType = businessType;
    this.chargeDeductType = chargeDeductType;
    this.chargeReturnTag = chargeReturnTag;
    this.effectStartDate = effectStartDate;
    this.effectEndDate = effectEndDate;
    this.costType = costType;
    this.costRate = costRate;
    this.costCount = costCount;
    this.status = status;
    this.contractDate = contractDate;
    this.settleType = settleType;
    this.settlePeriod = settlePeriod;
    this.sort = sort;
    this.perlimitAmount = perlimitAmount;
    this.daylimitAmount = daylimitAmount;
    this.monlimitAmount = monlimitAmount;
    this.orderSettlePeriod = orderSettlePeriod;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PayChannelThrift(PayChannelThrift other) {
    if (other.isSetChannelCode()) {
      this.channelCode = other.channelCode;
    }
    if (other.isSetChannelName()) {
      this.channelName = other.channelName;
    }
    if (other.isSetBankName()) {
      this.bankName = other.bankName;
    }
    if (other.isSetBankNo()) {
      this.bankNo = other.bankNo;
    }
    if (other.isSetChannelPartnerName()) {
      this.channelPartnerName = other.channelPartnerName;
    }
    if (other.isSetChannelPartnerCode()) {
      this.channelPartnerCode = other.channelPartnerCode;
    }
    if (other.isSetChannelTypeName()) {
      this.channelTypeName = other.channelTypeName;
    }
    if (other.isSetChannelTypeCode()) {
      this.channelTypeCode = other.channelTypeCode;
    }
    if (other.isSetCardTypeName()) {
      this.cardTypeName = other.cardTypeName;
    }
    if (other.isSetCardTypeCode()) {
      this.cardTypeCode = other.cardTypeCode;
    }
    if (other.isSetAccountType()) {
      this.accountType = other.accountType;
    }
    if (other.isSetBusinessType()) {
      this.businessType = other.businessType;
    }
    if (other.isSetChargeDeductType()) {
      this.chargeDeductType = other.chargeDeductType;
    }
    if (other.isSetChargeReturnTag()) {
      this.chargeReturnTag = other.chargeReturnTag;
    }
    if (other.isSetEffectStartDate()) {
      this.effectStartDate = other.effectStartDate;
    }
    if (other.isSetEffectEndDate()) {
      this.effectEndDate = other.effectEndDate;
    }
    if (other.isSetCostType()) {
      this.costType = other.costType;
    }
    if (other.isSetCostRate()) {
      this.costRate = other.costRate;
    }
    if (other.isSetCostCount()) {
      this.costCount = other.costCount;
    }
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    if (other.isSetContractDate()) {
      this.contractDate = other.contractDate;
    }
    if (other.isSetSettleType()) {
      this.settleType = other.settleType;
    }
    if (other.isSetSettlePeriod()) {
      this.settlePeriod = other.settlePeriod;
    }
    if (other.isSetSort()) {
      this.sort = other.sort;
    }
    if (other.isSetPerlimitAmount()) {
      this.perlimitAmount = other.perlimitAmount;
    }
    if (other.isSetDaylimitAmount()) {
      this.daylimitAmount = other.daylimitAmount;
    }
    if (other.isSetMonlimitAmount()) {
      this.monlimitAmount = other.monlimitAmount;
    }
    if (other.isSetOrderSettlePeriod()) {
      this.orderSettlePeriod = other.orderSettlePeriod;
    }
  }

  public PayChannelThrift deepCopy() {
    return new PayChannelThrift(this);
  }

  @Override
  public void clear() {
    this.channelCode = null;
    this.channelName = null;
    this.bankName = null;
    this.bankNo = null;
    this.channelPartnerName = null;
    this.channelPartnerCode = null;
    this.channelTypeName = null;
    this.channelTypeCode = null;
    this.cardTypeName = null;
    this.cardTypeCode = null;
    this.accountType = null;
    this.businessType = null;
    this.chargeDeductType = null;
    this.chargeReturnTag = null;
    this.effectStartDate = null;
    this.effectEndDate = null;
    this.costType = null;
    this.costRate = null;
    this.costCount = null;
    this.status = null;
    this.contractDate = null;
    this.settleType = null;
    this.settlePeriod = null;
    this.sort = null;
    this.perlimitAmount = null;
    this.daylimitAmount = null;
    this.monlimitAmount = null;
    this.orderSettlePeriod = null;
  }

  public String getChannelCode() {
    return this.channelCode;
  }

  public PayChannelThrift setChannelCode(String channelCode) {
    this.channelCode = channelCode;
    return this;
  }

  public void unsetChannelCode() {
    this.channelCode = null;
  }

  /** Returns true if field channelCode is set (has been assigned a value) and false otherwise */
  public boolean isSetChannelCode() {
    return this.channelCode != null;
  }

  public void setChannelCodeIsSet(boolean value) {
    if (!value) {
      this.channelCode = null;
    }
  }

  public String getChannelName() {
    return this.channelName;
  }

  public PayChannelThrift setChannelName(String channelName) {
    this.channelName = channelName;
    return this;
  }

  public void unsetChannelName() {
    this.channelName = null;
  }

  /** Returns true if field channelName is set (has been assigned a value) and false otherwise */
  public boolean isSetChannelName() {
    return this.channelName != null;
  }

  public void setChannelNameIsSet(boolean value) {
    if (!value) {
      this.channelName = null;
    }
  }

  public String getBankName() {
    return this.bankName;
  }

  public PayChannelThrift setBankName(String bankName) {
    this.bankName = bankName;
    return this;
  }

  public void unsetBankName() {
    this.bankName = null;
  }

  /** Returns true if field bankName is set (has been assigned a value) and false otherwise */
  public boolean isSetBankName() {
    return this.bankName != null;
  }

  public void setBankNameIsSet(boolean value) {
    if (!value) {
      this.bankName = null;
    }
  }

  public String getBankNo() {
    return this.bankNo;
  }

  public PayChannelThrift setBankNo(String bankNo) {
    this.bankNo = bankNo;
    return this;
  }

  public void unsetBankNo() {
    this.bankNo = null;
  }

  /** Returns true if field bankNo is set (has been assigned a value) and false otherwise */
  public boolean isSetBankNo() {
    return this.bankNo != null;
  }

  public void setBankNoIsSet(boolean value) {
    if (!value) {
      this.bankNo = null;
    }
  }

  public String getChannelPartnerName() {
    return this.channelPartnerName;
  }

  public PayChannelThrift setChannelPartnerName(String channelPartnerName) {
    this.channelPartnerName = channelPartnerName;
    return this;
  }

  public void unsetChannelPartnerName() {
    this.channelPartnerName = null;
  }

  /** Returns true if field channelPartnerName is set (has been assigned a value) and false otherwise */
  public boolean isSetChannelPartnerName() {
    return this.channelPartnerName != null;
  }

  public void setChannelPartnerNameIsSet(boolean value) {
    if (!value) {
      this.channelPartnerName = null;
    }
  }

  public String getChannelPartnerCode() {
    return this.channelPartnerCode;
  }

  public PayChannelThrift setChannelPartnerCode(String channelPartnerCode) {
    this.channelPartnerCode = channelPartnerCode;
    return this;
  }

  public void unsetChannelPartnerCode() {
    this.channelPartnerCode = null;
  }

  /** Returns true if field channelPartnerCode is set (has been assigned a value) and false otherwise */
  public boolean isSetChannelPartnerCode() {
    return this.channelPartnerCode != null;
  }

  public void setChannelPartnerCodeIsSet(boolean value) {
    if (!value) {
      this.channelPartnerCode = null;
    }
  }

  public String getChannelTypeName() {
    return this.channelTypeName;
  }

  public PayChannelThrift setChannelTypeName(String channelTypeName) {
    this.channelTypeName = channelTypeName;
    return this;
  }

  public void unsetChannelTypeName() {
    this.channelTypeName = null;
  }

  /** Returns true if field channelTypeName is set (has been assigned a value) and false otherwise */
  public boolean isSetChannelTypeName() {
    return this.channelTypeName != null;
  }

  public void setChannelTypeNameIsSet(boolean value) {
    if (!value) {
      this.channelTypeName = null;
    }
  }

  public String getChannelTypeCode() {
    return this.channelTypeCode;
  }

  public PayChannelThrift setChannelTypeCode(String channelTypeCode) {
    this.channelTypeCode = channelTypeCode;
    return this;
  }

  public void unsetChannelTypeCode() {
    this.channelTypeCode = null;
  }

  /** Returns true if field channelTypeCode is set (has been assigned a value) and false otherwise */
  public boolean isSetChannelTypeCode() {
    return this.channelTypeCode != null;
  }

  public void setChannelTypeCodeIsSet(boolean value) {
    if (!value) {
      this.channelTypeCode = null;
    }
  }

  public String getCardTypeName() {
    return this.cardTypeName;
  }

  public PayChannelThrift setCardTypeName(String cardTypeName) {
    this.cardTypeName = cardTypeName;
    return this;
  }

  public void unsetCardTypeName() {
    this.cardTypeName = null;
  }

  /** Returns true if field cardTypeName is set (has been assigned a value) and false otherwise */
  public boolean isSetCardTypeName() {
    return this.cardTypeName != null;
  }

  public void setCardTypeNameIsSet(boolean value) {
    if (!value) {
      this.cardTypeName = null;
    }
  }

  public String getCardTypeCode() {
    return this.cardTypeCode;
  }

  public PayChannelThrift setCardTypeCode(String cardTypeCode) {
    this.cardTypeCode = cardTypeCode;
    return this;
  }

  public void unsetCardTypeCode() {
    this.cardTypeCode = null;
  }

  /** Returns true if field cardTypeCode is set (has been assigned a value) and false otherwise */
  public boolean isSetCardTypeCode() {
    return this.cardTypeCode != null;
  }

  public void setCardTypeCodeIsSet(boolean value) {
    if (!value) {
      this.cardTypeCode = null;
    }
  }

  public String getAccountType() {
    return this.accountType;
  }

  public PayChannelThrift setAccountType(String accountType) {
    this.accountType = accountType;
    return this;
  }

  public void unsetAccountType() {
    this.accountType = null;
  }

  /** Returns true if field accountType is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountType() {
    return this.accountType != null;
  }

  public void setAccountTypeIsSet(boolean value) {
    if (!value) {
      this.accountType = null;
    }
  }

  public String getBusinessType() {
    return this.businessType;
  }

  public PayChannelThrift setBusinessType(String businessType) {
    this.businessType = businessType;
    return this;
  }

  public void unsetBusinessType() {
    this.businessType = null;
  }

  /** Returns true if field businessType is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessType() {
    return this.businessType != null;
  }

  public void setBusinessTypeIsSet(boolean value) {
    if (!value) {
      this.businessType = null;
    }
  }

  public String getChargeDeductType() {
    return this.chargeDeductType;
  }

  public PayChannelThrift setChargeDeductType(String chargeDeductType) {
    this.chargeDeductType = chargeDeductType;
    return this;
  }

  public void unsetChargeDeductType() {
    this.chargeDeductType = null;
  }

  /** Returns true if field chargeDeductType is set (has been assigned a value) and false otherwise */
  public boolean isSetChargeDeductType() {
    return this.chargeDeductType != null;
  }

  public void setChargeDeductTypeIsSet(boolean value) {
    if (!value) {
      this.chargeDeductType = null;
    }
  }

  public String getChargeReturnTag() {
    return this.chargeReturnTag;
  }

  public PayChannelThrift setChargeReturnTag(String chargeReturnTag) {
    this.chargeReturnTag = chargeReturnTag;
    return this;
  }

  public void unsetChargeReturnTag() {
    this.chargeReturnTag = null;
  }

  /** Returns true if field chargeReturnTag is set (has been assigned a value) and false otherwise */
  public boolean isSetChargeReturnTag() {
    return this.chargeReturnTag != null;
  }

  public void setChargeReturnTagIsSet(boolean value) {
    if (!value) {
      this.chargeReturnTag = null;
    }
  }

  public String getEffectStartDate() {
    return this.effectStartDate;
  }

  public PayChannelThrift setEffectStartDate(String effectStartDate) {
    this.effectStartDate = effectStartDate;
    return this;
  }

  public void unsetEffectStartDate() {
    this.effectStartDate = null;
  }

  /** Returns true if field effectStartDate is set (has been assigned a value) and false otherwise */
  public boolean isSetEffectStartDate() {
    return this.effectStartDate != null;
  }

  public void setEffectStartDateIsSet(boolean value) {
    if (!value) {
      this.effectStartDate = null;
    }
  }

  public String getEffectEndDate() {
    return this.effectEndDate;
  }

  public PayChannelThrift setEffectEndDate(String effectEndDate) {
    this.effectEndDate = effectEndDate;
    return this;
  }

  public void unsetEffectEndDate() {
    this.effectEndDate = null;
  }

  /** Returns true if field effectEndDate is set (has been assigned a value) and false otherwise */
  public boolean isSetEffectEndDate() {
    return this.effectEndDate != null;
  }

  public void setEffectEndDateIsSet(boolean value) {
    if (!value) {
      this.effectEndDate = null;
    }
  }

  public String getCostType() {
    return this.costType;
  }

  public PayChannelThrift setCostType(String costType) {
    this.costType = costType;
    return this;
  }

  public void unsetCostType() {
    this.costType = null;
  }

  /** Returns true if field costType is set (has been assigned a value) and false otherwise */
  public boolean isSetCostType() {
    return this.costType != null;
  }

  public void setCostTypeIsSet(boolean value) {
    if (!value) {
      this.costType = null;
    }
  }

  public String getCostRate() {
    return this.costRate;
  }

  public PayChannelThrift setCostRate(String costRate) {
    this.costRate = costRate;
    return this;
  }

  public void unsetCostRate() {
    this.costRate = null;
  }

  /** Returns true if field costRate is set (has been assigned a value) and false otherwise */
  public boolean isSetCostRate() {
    return this.costRate != null;
  }

  public void setCostRateIsSet(boolean value) {
    if (!value) {
      this.costRate = null;
    }
  }

  public String getCostCount() {
    return this.costCount;
  }

  public PayChannelThrift setCostCount(String costCount) {
    this.costCount = costCount;
    return this;
  }

  public void unsetCostCount() {
    this.costCount = null;
  }

  /** Returns true if field costCount is set (has been assigned a value) and false otherwise */
  public boolean isSetCostCount() {
    return this.costCount != null;
  }

  public void setCostCountIsSet(boolean value) {
    if (!value) {
      this.costCount = null;
    }
  }

  public String getStatus() {
    return this.status;
  }

  public PayChannelThrift setStatus(String status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public String getContractDate() {
    return this.contractDate;
  }

  public PayChannelThrift setContractDate(String contractDate) {
    this.contractDate = contractDate;
    return this;
  }

  public void unsetContractDate() {
    this.contractDate = null;
  }

  /** Returns true if field contractDate is set (has been assigned a value) and false otherwise */
  public boolean isSetContractDate() {
    return this.contractDate != null;
  }

  public void setContractDateIsSet(boolean value) {
    if (!value) {
      this.contractDate = null;
    }
  }

  public String getSettleType() {
    return this.settleType;
  }

  public PayChannelThrift setSettleType(String settleType) {
    this.settleType = settleType;
    return this;
  }

  public void unsetSettleType() {
    this.settleType = null;
  }

  /** Returns true if field settleType is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleType() {
    return this.settleType != null;
  }

  public void setSettleTypeIsSet(boolean value) {
    if (!value) {
      this.settleType = null;
    }
  }

  public String getSettlePeriod() {
    return this.settlePeriod;
  }

  public PayChannelThrift setSettlePeriod(String settlePeriod) {
    this.settlePeriod = settlePeriod;
    return this;
  }

  public void unsetSettlePeriod() {
    this.settlePeriod = null;
  }

  /** Returns true if field settlePeriod is set (has been assigned a value) and false otherwise */
  public boolean isSetSettlePeriod() {
    return this.settlePeriod != null;
  }

  public void setSettlePeriodIsSet(boolean value) {
    if (!value) {
      this.settlePeriod = null;
    }
  }

  public String getSort() {
    return this.sort;
  }

  public PayChannelThrift setSort(String sort) {
    this.sort = sort;
    return this;
  }

  public void unsetSort() {
    this.sort = null;
  }

  /** Returns true if field sort is set (has been assigned a value) and false otherwise */
  public boolean isSetSort() {
    return this.sort != null;
  }

  public void setSortIsSet(boolean value) {
    if (!value) {
      this.sort = null;
    }
  }

  public String getPerlimitAmount() {
    return this.perlimitAmount;
  }

  public PayChannelThrift setPerlimitAmount(String perlimitAmount) {
    this.perlimitAmount = perlimitAmount;
    return this;
  }

  public void unsetPerlimitAmount() {
    this.perlimitAmount = null;
  }

  /** Returns true if field perlimitAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetPerlimitAmount() {
    return this.perlimitAmount != null;
  }

  public void setPerlimitAmountIsSet(boolean value) {
    if (!value) {
      this.perlimitAmount = null;
    }
  }

  public String getDaylimitAmount() {
    return this.daylimitAmount;
  }

  public PayChannelThrift setDaylimitAmount(String daylimitAmount) {
    this.daylimitAmount = daylimitAmount;
    return this;
  }

  public void unsetDaylimitAmount() {
    this.daylimitAmount = null;
  }

  /** Returns true if field daylimitAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetDaylimitAmount() {
    return this.daylimitAmount != null;
  }

  public void setDaylimitAmountIsSet(boolean value) {
    if (!value) {
      this.daylimitAmount = null;
    }
  }

  public String getMonlimitAmount() {
    return this.monlimitAmount;
  }

  public PayChannelThrift setMonlimitAmount(String monlimitAmount) {
    this.monlimitAmount = monlimitAmount;
    return this;
  }

  public void unsetMonlimitAmount() {
    this.monlimitAmount = null;
  }

  /** Returns true if field monlimitAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetMonlimitAmount() {
    return this.monlimitAmount != null;
  }

  public void setMonlimitAmountIsSet(boolean value) {
    if (!value) {
      this.monlimitAmount = null;
    }
  }

  public String getOrderSettlePeriod() {
    return this.orderSettlePeriod;
  }

  public PayChannelThrift setOrderSettlePeriod(String orderSettlePeriod) {
    this.orderSettlePeriod = orderSettlePeriod;
    return this;
  }

  public void unsetOrderSettlePeriod() {
    this.orderSettlePeriod = null;
  }

  /** Returns true if field orderSettlePeriod is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderSettlePeriod() {
    return this.orderSettlePeriod != null;
  }

  public void setOrderSettlePeriodIsSet(boolean value) {
    if (!value) {
      this.orderSettlePeriod = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CHANNEL_CODE:
      if (value == null) {
        unsetChannelCode();
      } else {
        setChannelCode((String)value);
      }
      break;

    case CHANNEL_NAME:
      if (value == null) {
        unsetChannelName();
      } else {
        setChannelName((String)value);
      }
      break;

    case BANK_NAME:
      if (value == null) {
        unsetBankName();
      } else {
        setBankName((String)value);
      }
      break;

    case BANK_NO:
      if (value == null) {
        unsetBankNo();
      } else {
        setBankNo((String)value);
      }
      break;

    case CHANNEL_PARTNER_NAME:
      if (value == null) {
        unsetChannelPartnerName();
      } else {
        setChannelPartnerName((String)value);
      }
      break;

    case CHANNEL_PARTNER_CODE:
      if (value == null) {
        unsetChannelPartnerCode();
      } else {
        setChannelPartnerCode((String)value);
      }
      break;

    case CHANNEL_TYPE_NAME:
      if (value == null) {
        unsetChannelTypeName();
      } else {
        setChannelTypeName((String)value);
      }
      break;

    case CHANNEL_TYPE_CODE:
      if (value == null) {
        unsetChannelTypeCode();
      } else {
        setChannelTypeCode((String)value);
      }
      break;

    case CARD_TYPE_NAME:
      if (value == null) {
        unsetCardTypeName();
      } else {
        setCardTypeName((String)value);
      }
      break;

    case CARD_TYPE_CODE:
      if (value == null) {
        unsetCardTypeCode();
      } else {
        setCardTypeCode((String)value);
      }
      break;

    case ACCOUNT_TYPE:
      if (value == null) {
        unsetAccountType();
      } else {
        setAccountType((String)value);
      }
      break;

    case BUSINESS_TYPE:
      if (value == null) {
        unsetBusinessType();
      } else {
        setBusinessType((String)value);
      }
      break;

    case CHARGE_DEDUCT_TYPE:
      if (value == null) {
        unsetChargeDeductType();
      } else {
        setChargeDeductType((String)value);
      }
      break;

    case CHARGE_RETURN_TAG:
      if (value == null) {
        unsetChargeReturnTag();
      } else {
        setChargeReturnTag((String)value);
      }
      break;

    case EFFECT_START_DATE:
      if (value == null) {
        unsetEffectStartDate();
      } else {
        setEffectStartDate((String)value);
      }
      break;

    case EFFECT_END_DATE:
      if (value == null) {
        unsetEffectEndDate();
      } else {
        setEffectEndDate((String)value);
      }
      break;

    case COST_TYPE:
      if (value == null) {
        unsetCostType();
      } else {
        setCostType((String)value);
      }
      break;

    case COST_RATE:
      if (value == null) {
        unsetCostRate();
      } else {
        setCostRate((String)value);
      }
      break;

    case COST_COUNT:
      if (value == null) {
        unsetCostCount();
      } else {
        setCostCount((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((String)value);
      }
      break;

    case CONTRACT_DATE:
      if (value == null) {
        unsetContractDate();
      } else {
        setContractDate((String)value);
      }
      break;

    case SETTLE_TYPE:
      if (value == null) {
        unsetSettleType();
      } else {
        setSettleType((String)value);
      }
      break;

    case SETTLE_PERIOD:
      if (value == null) {
        unsetSettlePeriod();
      } else {
        setSettlePeriod((String)value);
      }
      break;

    case SORT:
      if (value == null) {
        unsetSort();
      } else {
        setSort((String)value);
      }
      break;

    case PERLIMIT_AMOUNT:
      if (value == null) {
        unsetPerlimitAmount();
      } else {
        setPerlimitAmount((String)value);
      }
      break;

    case DAYLIMIT_AMOUNT:
      if (value == null) {
        unsetDaylimitAmount();
      } else {
        setDaylimitAmount((String)value);
      }
      break;

    case MONLIMIT_AMOUNT:
      if (value == null) {
        unsetMonlimitAmount();
      } else {
        setMonlimitAmount((String)value);
      }
      break;

    case ORDER_SETTLE_PERIOD:
      if (value == null) {
        unsetOrderSettlePeriod();
      } else {
        setOrderSettlePeriod((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CHANNEL_CODE:
      return getChannelCode();

    case CHANNEL_NAME:
      return getChannelName();

    case BANK_NAME:
      return getBankName();

    case BANK_NO:
      return getBankNo();

    case CHANNEL_PARTNER_NAME:
      return getChannelPartnerName();

    case CHANNEL_PARTNER_CODE:
      return getChannelPartnerCode();

    case CHANNEL_TYPE_NAME:
      return getChannelTypeName();

    case CHANNEL_TYPE_CODE:
      return getChannelTypeCode();

    case CARD_TYPE_NAME:
      return getCardTypeName();

    case CARD_TYPE_CODE:
      return getCardTypeCode();

    case ACCOUNT_TYPE:
      return getAccountType();

    case BUSINESS_TYPE:
      return getBusinessType();

    case CHARGE_DEDUCT_TYPE:
      return getChargeDeductType();

    case CHARGE_RETURN_TAG:
      return getChargeReturnTag();

    case EFFECT_START_DATE:
      return getEffectStartDate();

    case EFFECT_END_DATE:
      return getEffectEndDate();

    case COST_TYPE:
      return getCostType();

    case COST_RATE:
      return getCostRate();

    case COST_COUNT:
      return getCostCount();

    case STATUS:
      return getStatus();

    case CONTRACT_DATE:
      return getContractDate();

    case SETTLE_TYPE:
      return getSettleType();

    case SETTLE_PERIOD:
      return getSettlePeriod();

    case SORT:
      return getSort();

    case PERLIMIT_AMOUNT:
      return getPerlimitAmount();

    case DAYLIMIT_AMOUNT:
      return getDaylimitAmount();

    case MONLIMIT_AMOUNT:
      return getMonlimitAmount();

    case ORDER_SETTLE_PERIOD:
      return getOrderSettlePeriod();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CHANNEL_CODE:
      return isSetChannelCode();
    case CHANNEL_NAME:
      return isSetChannelName();
    case BANK_NAME:
      return isSetBankName();
    case BANK_NO:
      return isSetBankNo();
    case CHANNEL_PARTNER_NAME:
      return isSetChannelPartnerName();
    case CHANNEL_PARTNER_CODE:
      return isSetChannelPartnerCode();
    case CHANNEL_TYPE_NAME:
      return isSetChannelTypeName();
    case CHANNEL_TYPE_CODE:
      return isSetChannelTypeCode();
    case CARD_TYPE_NAME:
      return isSetCardTypeName();
    case CARD_TYPE_CODE:
      return isSetCardTypeCode();
    case ACCOUNT_TYPE:
      return isSetAccountType();
    case BUSINESS_TYPE:
      return isSetBusinessType();
    case CHARGE_DEDUCT_TYPE:
      return isSetChargeDeductType();
    case CHARGE_RETURN_TAG:
      return isSetChargeReturnTag();
    case EFFECT_START_DATE:
      return isSetEffectStartDate();
    case EFFECT_END_DATE:
      return isSetEffectEndDate();
    case COST_TYPE:
      return isSetCostType();
    case COST_RATE:
      return isSetCostRate();
    case COST_COUNT:
      return isSetCostCount();
    case STATUS:
      return isSetStatus();
    case CONTRACT_DATE:
      return isSetContractDate();
    case SETTLE_TYPE:
      return isSetSettleType();
    case SETTLE_PERIOD:
      return isSetSettlePeriod();
    case SORT:
      return isSetSort();
    case PERLIMIT_AMOUNT:
      return isSetPerlimitAmount();
    case DAYLIMIT_AMOUNT:
      return isSetDaylimitAmount();
    case MONLIMIT_AMOUNT:
      return isSetMonlimitAmount();
    case ORDER_SETTLE_PERIOD:
      return isSetOrderSettlePeriod();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PayChannelThrift)
      return this.equals((PayChannelThrift)that);
    return false;
  }

  public boolean equals(PayChannelThrift that) {
    if (that == null)
      return false;

    boolean this_present_channelCode = true && this.isSetChannelCode();
    boolean that_present_channelCode = true && that.isSetChannelCode();
    if (this_present_channelCode || that_present_channelCode) {
      if (!(this_present_channelCode && that_present_channelCode))
        return false;
      if (!this.channelCode.equals(that.channelCode))
        return false;
    }

    boolean this_present_channelName = true && this.isSetChannelName();
    boolean that_present_channelName = true && that.isSetChannelName();
    if (this_present_channelName || that_present_channelName) {
      if (!(this_present_channelName && that_present_channelName))
        return false;
      if (!this.channelName.equals(that.channelName))
        return false;
    }

    boolean this_present_bankName = true && this.isSetBankName();
    boolean that_present_bankName = true && that.isSetBankName();
    if (this_present_bankName || that_present_bankName) {
      if (!(this_present_bankName && that_present_bankName))
        return false;
      if (!this.bankName.equals(that.bankName))
        return false;
    }

    boolean this_present_bankNo = true && this.isSetBankNo();
    boolean that_present_bankNo = true && that.isSetBankNo();
    if (this_present_bankNo || that_present_bankNo) {
      if (!(this_present_bankNo && that_present_bankNo))
        return false;
      if (!this.bankNo.equals(that.bankNo))
        return false;
    }

    boolean this_present_channelPartnerName = true && this.isSetChannelPartnerName();
    boolean that_present_channelPartnerName = true && that.isSetChannelPartnerName();
    if (this_present_channelPartnerName || that_present_channelPartnerName) {
      if (!(this_present_channelPartnerName && that_present_channelPartnerName))
        return false;
      if (!this.channelPartnerName.equals(that.channelPartnerName))
        return false;
    }

    boolean this_present_channelPartnerCode = true && this.isSetChannelPartnerCode();
    boolean that_present_channelPartnerCode = true && that.isSetChannelPartnerCode();
    if (this_present_channelPartnerCode || that_present_channelPartnerCode) {
      if (!(this_present_channelPartnerCode && that_present_channelPartnerCode))
        return false;
      if (!this.channelPartnerCode.equals(that.channelPartnerCode))
        return false;
    }

    boolean this_present_channelTypeName = true && this.isSetChannelTypeName();
    boolean that_present_channelTypeName = true && that.isSetChannelTypeName();
    if (this_present_channelTypeName || that_present_channelTypeName) {
      if (!(this_present_channelTypeName && that_present_channelTypeName))
        return false;
      if (!this.channelTypeName.equals(that.channelTypeName))
        return false;
    }

    boolean this_present_channelTypeCode = true && this.isSetChannelTypeCode();
    boolean that_present_channelTypeCode = true && that.isSetChannelTypeCode();
    if (this_present_channelTypeCode || that_present_channelTypeCode) {
      if (!(this_present_channelTypeCode && that_present_channelTypeCode))
        return false;
      if (!this.channelTypeCode.equals(that.channelTypeCode))
        return false;
    }

    boolean this_present_cardTypeName = true && this.isSetCardTypeName();
    boolean that_present_cardTypeName = true && that.isSetCardTypeName();
    if (this_present_cardTypeName || that_present_cardTypeName) {
      if (!(this_present_cardTypeName && that_present_cardTypeName))
        return false;
      if (!this.cardTypeName.equals(that.cardTypeName))
        return false;
    }

    boolean this_present_cardTypeCode = true && this.isSetCardTypeCode();
    boolean that_present_cardTypeCode = true && that.isSetCardTypeCode();
    if (this_present_cardTypeCode || that_present_cardTypeCode) {
      if (!(this_present_cardTypeCode && that_present_cardTypeCode))
        return false;
      if (!this.cardTypeCode.equals(that.cardTypeCode))
        return false;
    }

    boolean this_present_accountType = true && this.isSetAccountType();
    boolean that_present_accountType = true && that.isSetAccountType();
    if (this_present_accountType || that_present_accountType) {
      if (!(this_present_accountType && that_present_accountType))
        return false;
      if (!this.accountType.equals(that.accountType))
        return false;
    }

    boolean this_present_businessType = true && this.isSetBusinessType();
    boolean that_present_businessType = true && that.isSetBusinessType();
    if (this_present_businessType || that_present_businessType) {
      if (!(this_present_businessType && that_present_businessType))
        return false;
      if (!this.businessType.equals(that.businessType))
        return false;
    }

    boolean this_present_chargeDeductType = true && this.isSetChargeDeductType();
    boolean that_present_chargeDeductType = true && that.isSetChargeDeductType();
    if (this_present_chargeDeductType || that_present_chargeDeductType) {
      if (!(this_present_chargeDeductType && that_present_chargeDeductType))
        return false;
      if (!this.chargeDeductType.equals(that.chargeDeductType))
        return false;
    }

    boolean this_present_chargeReturnTag = true && this.isSetChargeReturnTag();
    boolean that_present_chargeReturnTag = true && that.isSetChargeReturnTag();
    if (this_present_chargeReturnTag || that_present_chargeReturnTag) {
      if (!(this_present_chargeReturnTag && that_present_chargeReturnTag))
        return false;
      if (!this.chargeReturnTag.equals(that.chargeReturnTag))
        return false;
    }

    boolean this_present_effectStartDate = true && this.isSetEffectStartDate();
    boolean that_present_effectStartDate = true && that.isSetEffectStartDate();
    if (this_present_effectStartDate || that_present_effectStartDate) {
      if (!(this_present_effectStartDate && that_present_effectStartDate))
        return false;
      if (!this.effectStartDate.equals(that.effectStartDate))
        return false;
    }

    boolean this_present_effectEndDate = true && this.isSetEffectEndDate();
    boolean that_present_effectEndDate = true && that.isSetEffectEndDate();
    if (this_present_effectEndDate || that_present_effectEndDate) {
      if (!(this_present_effectEndDate && that_present_effectEndDate))
        return false;
      if (!this.effectEndDate.equals(that.effectEndDate))
        return false;
    }

    boolean this_present_costType = true && this.isSetCostType();
    boolean that_present_costType = true && that.isSetCostType();
    if (this_present_costType || that_present_costType) {
      if (!(this_present_costType && that_present_costType))
        return false;
      if (!this.costType.equals(that.costType))
        return false;
    }

    boolean this_present_costRate = true && this.isSetCostRate();
    boolean that_present_costRate = true && that.isSetCostRate();
    if (this_present_costRate || that_present_costRate) {
      if (!(this_present_costRate && that_present_costRate))
        return false;
      if (!this.costRate.equals(that.costRate))
        return false;
    }

    boolean this_present_costCount = true && this.isSetCostCount();
    boolean that_present_costCount = true && that.isSetCostCount();
    if (this_present_costCount || that_present_costCount) {
      if (!(this_present_costCount && that_present_costCount))
        return false;
      if (!this.costCount.equals(that.costCount))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_contractDate = true && this.isSetContractDate();
    boolean that_present_contractDate = true && that.isSetContractDate();
    if (this_present_contractDate || that_present_contractDate) {
      if (!(this_present_contractDate && that_present_contractDate))
        return false;
      if (!this.contractDate.equals(that.contractDate))
        return false;
    }

    boolean this_present_settleType = true && this.isSetSettleType();
    boolean that_present_settleType = true && that.isSetSettleType();
    if (this_present_settleType || that_present_settleType) {
      if (!(this_present_settleType && that_present_settleType))
        return false;
      if (!this.settleType.equals(that.settleType))
        return false;
    }

    boolean this_present_settlePeriod = true && this.isSetSettlePeriod();
    boolean that_present_settlePeriod = true && that.isSetSettlePeriod();
    if (this_present_settlePeriod || that_present_settlePeriod) {
      if (!(this_present_settlePeriod && that_present_settlePeriod))
        return false;
      if (!this.settlePeriod.equals(that.settlePeriod))
        return false;
    }

    boolean this_present_sort = true && this.isSetSort();
    boolean that_present_sort = true && that.isSetSort();
    if (this_present_sort || that_present_sort) {
      if (!(this_present_sort && that_present_sort))
        return false;
      if (!this.sort.equals(that.sort))
        return false;
    }

    boolean this_present_perlimitAmount = true && this.isSetPerlimitAmount();
    boolean that_present_perlimitAmount = true && that.isSetPerlimitAmount();
    if (this_present_perlimitAmount || that_present_perlimitAmount) {
      if (!(this_present_perlimitAmount && that_present_perlimitAmount))
        return false;
      if (!this.perlimitAmount.equals(that.perlimitAmount))
        return false;
    }

    boolean this_present_daylimitAmount = true && this.isSetDaylimitAmount();
    boolean that_present_daylimitAmount = true && that.isSetDaylimitAmount();
    if (this_present_daylimitAmount || that_present_daylimitAmount) {
      if (!(this_present_daylimitAmount && that_present_daylimitAmount))
        return false;
      if (!this.daylimitAmount.equals(that.daylimitAmount))
        return false;
    }

    boolean this_present_monlimitAmount = true && this.isSetMonlimitAmount();
    boolean that_present_monlimitAmount = true && that.isSetMonlimitAmount();
    if (this_present_monlimitAmount || that_present_monlimitAmount) {
      if (!(this_present_monlimitAmount && that_present_monlimitAmount))
        return false;
      if (!this.monlimitAmount.equals(that.monlimitAmount))
        return false;
    }

    boolean this_present_orderSettlePeriod = true && this.isSetOrderSettlePeriod();
    boolean that_present_orderSettlePeriod = true && that.isSetOrderSettlePeriod();
    if (this_present_orderSettlePeriod || that_present_orderSettlePeriod) {
      if (!(this_present_orderSettlePeriod && that_present_orderSettlePeriod))
        return false;
      if (!this.orderSettlePeriod.equals(that.orderSettlePeriod))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_channelCode = true && (isSetChannelCode());
    list.add(present_channelCode);
    if (present_channelCode)
      list.add(channelCode);

    boolean present_channelName = true && (isSetChannelName());
    list.add(present_channelName);
    if (present_channelName)
      list.add(channelName);

    boolean present_bankName = true && (isSetBankName());
    list.add(present_bankName);
    if (present_bankName)
      list.add(bankName);

    boolean present_bankNo = true && (isSetBankNo());
    list.add(present_bankNo);
    if (present_bankNo)
      list.add(bankNo);

    boolean present_channelPartnerName = true && (isSetChannelPartnerName());
    list.add(present_channelPartnerName);
    if (present_channelPartnerName)
      list.add(channelPartnerName);

    boolean present_channelPartnerCode = true && (isSetChannelPartnerCode());
    list.add(present_channelPartnerCode);
    if (present_channelPartnerCode)
      list.add(channelPartnerCode);

    boolean present_channelTypeName = true && (isSetChannelTypeName());
    list.add(present_channelTypeName);
    if (present_channelTypeName)
      list.add(channelTypeName);

    boolean present_channelTypeCode = true && (isSetChannelTypeCode());
    list.add(present_channelTypeCode);
    if (present_channelTypeCode)
      list.add(channelTypeCode);

    boolean present_cardTypeName = true && (isSetCardTypeName());
    list.add(present_cardTypeName);
    if (present_cardTypeName)
      list.add(cardTypeName);

    boolean present_cardTypeCode = true && (isSetCardTypeCode());
    list.add(present_cardTypeCode);
    if (present_cardTypeCode)
      list.add(cardTypeCode);

    boolean present_accountType = true && (isSetAccountType());
    list.add(present_accountType);
    if (present_accountType)
      list.add(accountType);

    boolean present_businessType = true && (isSetBusinessType());
    list.add(present_businessType);
    if (present_businessType)
      list.add(businessType);

    boolean present_chargeDeductType = true && (isSetChargeDeductType());
    list.add(present_chargeDeductType);
    if (present_chargeDeductType)
      list.add(chargeDeductType);

    boolean present_chargeReturnTag = true && (isSetChargeReturnTag());
    list.add(present_chargeReturnTag);
    if (present_chargeReturnTag)
      list.add(chargeReturnTag);

    boolean present_effectStartDate = true && (isSetEffectStartDate());
    list.add(present_effectStartDate);
    if (present_effectStartDate)
      list.add(effectStartDate);

    boolean present_effectEndDate = true && (isSetEffectEndDate());
    list.add(present_effectEndDate);
    if (present_effectEndDate)
      list.add(effectEndDate);

    boolean present_costType = true && (isSetCostType());
    list.add(present_costType);
    if (present_costType)
      list.add(costType);

    boolean present_costRate = true && (isSetCostRate());
    list.add(present_costRate);
    if (present_costRate)
      list.add(costRate);

    boolean present_costCount = true && (isSetCostCount());
    list.add(present_costCount);
    if (present_costCount)
      list.add(costCount);

    boolean present_status = true && (isSetStatus());
    list.add(present_status);
    if (present_status)
      list.add(status);

    boolean present_contractDate = true && (isSetContractDate());
    list.add(present_contractDate);
    if (present_contractDate)
      list.add(contractDate);

    boolean present_settleType = true && (isSetSettleType());
    list.add(present_settleType);
    if (present_settleType)
      list.add(settleType);

    boolean present_settlePeriod = true && (isSetSettlePeriod());
    list.add(present_settlePeriod);
    if (present_settlePeriod)
      list.add(settlePeriod);

    boolean present_sort = true && (isSetSort());
    list.add(present_sort);
    if (present_sort)
      list.add(sort);

    boolean present_perlimitAmount = true && (isSetPerlimitAmount());
    list.add(present_perlimitAmount);
    if (present_perlimitAmount)
      list.add(perlimitAmount);

    boolean present_daylimitAmount = true && (isSetDaylimitAmount());
    list.add(present_daylimitAmount);
    if (present_daylimitAmount)
      list.add(daylimitAmount);

    boolean present_monlimitAmount = true && (isSetMonlimitAmount());
    list.add(present_monlimitAmount);
    if (present_monlimitAmount)
      list.add(monlimitAmount);

    boolean present_orderSettlePeriod = true && (isSetOrderSettlePeriod());
    list.add(present_orderSettlePeriod);
    if (present_orderSettlePeriod)
      list.add(orderSettlePeriod);

    return list.hashCode();
  }

  @Override
  public int compareTo(PayChannelThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetChannelCode()).compareTo(other.isSetChannelCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channelCode, other.channelCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannelName()).compareTo(other.isSetChannelName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channelName, other.channelName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankName()).compareTo(other.isSetBankName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankName, other.bankName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankNo()).compareTo(other.isSetBankNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankNo, other.bankNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannelPartnerName()).compareTo(other.isSetChannelPartnerName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelPartnerName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channelPartnerName, other.channelPartnerName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannelPartnerCode()).compareTo(other.isSetChannelPartnerCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelPartnerCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channelPartnerCode, other.channelPartnerCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannelTypeName()).compareTo(other.isSetChannelTypeName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelTypeName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channelTypeName, other.channelTypeName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannelTypeCode()).compareTo(other.isSetChannelTypeCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelTypeCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channelTypeCode, other.channelTypeCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCardTypeName()).compareTo(other.isSetCardTypeName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCardTypeName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cardTypeName, other.cardTypeName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCardTypeCode()).compareTo(other.isSetCardTypeCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCardTypeCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cardTypeCode, other.cardTypeCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountType()).compareTo(other.isSetAccountType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountType, other.accountType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusinessType()).compareTo(other.isSetBusinessType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessType, other.businessType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChargeDeductType()).compareTo(other.isSetChargeDeductType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChargeDeductType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chargeDeductType, other.chargeDeductType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChargeReturnTag()).compareTo(other.isSetChargeReturnTag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChargeReturnTag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.chargeReturnTag, other.chargeReturnTag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEffectStartDate()).compareTo(other.isSetEffectStartDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEffectStartDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.effectStartDate, other.effectStartDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEffectEndDate()).compareTo(other.isSetEffectEndDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEffectEndDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.effectEndDate, other.effectEndDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCostType()).compareTo(other.isSetCostType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCostType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.costType, other.costType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCostRate()).compareTo(other.isSetCostRate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCostRate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.costRate, other.costRate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCostCount()).compareTo(other.isSetCostCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCostCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.costCount, other.costCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContractDate()).compareTo(other.isSetContractDate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContractDate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contractDate, other.contractDate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettleType()).compareTo(other.isSetSettleType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleType, other.settleType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettlePeriod()).compareTo(other.isSetSettlePeriod());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettlePeriod()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settlePeriod, other.settlePeriod);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSort()).compareTo(other.isSetSort());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSort()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sort, other.sort);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPerlimitAmount()).compareTo(other.isSetPerlimitAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPerlimitAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.perlimitAmount, other.perlimitAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDaylimitAmount()).compareTo(other.isSetDaylimitAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDaylimitAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.daylimitAmount, other.daylimitAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMonlimitAmount()).compareTo(other.isSetMonlimitAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMonlimitAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.monlimitAmount, other.monlimitAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOrderSettlePeriod()).compareTo(other.isSetOrderSettlePeriod());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderSettlePeriod()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderSettlePeriod, other.orderSettlePeriod);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("PayChannelThrift(");
    boolean first = true;

    sb.append("channelCode:");
    if (this.channelCode == null) {
      sb.append("null");
    } else {
      sb.append(this.channelCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("channelName:");
    if (this.channelName == null) {
      sb.append("null");
    } else {
      sb.append(this.channelName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankName:");
    if (this.bankName == null) {
      sb.append("null");
    } else {
      sb.append(this.bankName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankNo:");
    if (this.bankNo == null) {
      sb.append("null");
    } else {
      sb.append(this.bankNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("channelPartnerName:");
    if (this.channelPartnerName == null) {
      sb.append("null");
    } else {
      sb.append(this.channelPartnerName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("channelPartnerCode:");
    if (this.channelPartnerCode == null) {
      sb.append("null");
    } else {
      sb.append(this.channelPartnerCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("channelTypeName:");
    if (this.channelTypeName == null) {
      sb.append("null");
    } else {
      sb.append(this.channelTypeName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("channelTypeCode:");
    if (this.channelTypeCode == null) {
      sb.append("null");
    } else {
      sb.append(this.channelTypeCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cardTypeName:");
    if (this.cardTypeName == null) {
      sb.append("null");
    } else {
      sb.append(this.cardTypeName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cardTypeCode:");
    if (this.cardTypeCode == null) {
      sb.append("null");
    } else {
      sb.append(this.cardTypeCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("accountType:");
    if (this.accountType == null) {
      sb.append("null");
    } else {
      sb.append(this.accountType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("businessType:");
    if (this.businessType == null) {
      sb.append("null");
    } else {
      sb.append(this.businessType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("chargeDeductType:");
    if (this.chargeDeductType == null) {
      sb.append("null");
    } else {
      sb.append(this.chargeDeductType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("chargeReturnTag:");
    if (this.chargeReturnTag == null) {
      sb.append("null");
    } else {
      sb.append(this.chargeReturnTag);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("effectStartDate:");
    if (this.effectStartDate == null) {
      sb.append("null");
    } else {
      sb.append(this.effectStartDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("effectEndDate:");
    if (this.effectEndDate == null) {
      sb.append("null");
    } else {
      sb.append(this.effectEndDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("costType:");
    if (this.costType == null) {
      sb.append("null");
    } else {
      sb.append(this.costType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("costRate:");
    if (this.costRate == null) {
      sb.append("null");
    } else {
      sb.append(this.costRate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("costCount:");
    if (this.costCount == null) {
      sb.append("null");
    } else {
      sb.append(this.costCount);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("contractDate:");
    if (this.contractDate == null) {
      sb.append("null");
    } else {
      sb.append(this.contractDate);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settleType:");
    if (this.settleType == null) {
      sb.append("null");
    } else {
      sb.append(this.settleType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settlePeriod:");
    if (this.settlePeriod == null) {
      sb.append("null");
    } else {
      sb.append(this.settlePeriod);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sort:");
    if (this.sort == null) {
      sb.append("null");
    } else {
      sb.append(this.sort);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("perlimitAmount:");
    if (this.perlimitAmount == null) {
      sb.append("null");
    } else {
      sb.append(this.perlimitAmount);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("daylimitAmount:");
    if (this.daylimitAmount == null) {
      sb.append("null");
    } else {
      sb.append(this.daylimitAmount);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("monlimitAmount:");
    if (this.monlimitAmount == null) {
      sb.append("null");
    } else {
      sb.append(this.monlimitAmount);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("orderSettlePeriod:");
    if (this.orderSettlePeriod == null) {
      sb.append("null");
    } else {
      sb.append(this.orderSettlePeriod);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PayChannelThriftStandardSchemeFactory implements SchemeFactory {
    public PayChannelThriftStandardScheme getScheme() {
      return new PayChannelThriftStandardScheme();
    }
  }

  private static class PayChannelThriftStandardScheme extends StandardScheme<PayChannelThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PayChannelThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CHANNEL_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.channelCode = iprot.readString();
              struct.setChannelCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CHANNEL_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.channelName = iprot.readString();
              struct.setChannelNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // BANK_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankName = iprot.readString();
              struct.setBankNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // BANK_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankNo = iprot.readString();
              struct.setBankNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CHANNEL_PARTNER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.channelPartnerName = iprot.readString();
              struct.setChannelPartnerNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CHANNEL_PARTNER_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.channelPartnerCode = iprot.readString();
              struct.setChannelPartnerCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CHANNEL_TYPE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.channelTypeName = iprot.readString();
              struct.setChannelTypeNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CHANNEL_TYPE_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.channelTypeCode = iprot.readString();
              struct.setChannelTypeCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CARD_TYPE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cardTypeName = iprot.readString();
              struct.setCardTypeNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CARD_TYPE_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cardTypeCode = iprot.readString();
              struct.setCardTypeCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ACCOUNT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountType = iprot.readString();
              struct.setAccountTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // BUSINESS_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.businessType = iprot.readString();
              struct.setBusinessTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CHARGE_DEDUCT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.chargeDeductType = iprot.readString();
              struct.setChargeDeductTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CHARGE_RETURN_TAG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.chargeReturnTag = iprot.readString();
              struct.setChargeReturnTagIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // EFFECT_START_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.effectStartDate = iprot.readString();
              struct.setEffectStartDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // EFFECT_END_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.effectEndDate = iprot.readString();
              struct.setEffectEndDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // COST_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.costType = iprot.readString();
              struct.setCostTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // COST_RATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.costRate = iprot.readString();
              struct.setCostRateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // COST_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.costCount = iprot.readString();
              struct.setCostCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.status = iprot.readString();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // CONTRACT_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contractDate = iprot.readString();
              struct.setContractDateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // SETTLE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settleType = iprot.readString();
              struct.setSettleTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // SETTLE_PERIOD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settlePeriod = iprot.readString();
              struct.setSettlePeriodIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // SORT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sort = iprot.readString();
              struct.setSortIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // PERLIMIT_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.perlimitAmount = iprot.readString();
              struct.setPerlimitAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // DAYLIMIT_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.daylimitAmount = iprot.readString();
              struct.setDaylimitAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // MONLIMIT_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.monlimitAmount = iprot.readString();
              struct.setMonlimitAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // ORDER_SETTLE_PERIOD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.orderSettlePeriod = iprot.readString();
              struct.setOrderSettlePeriodIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PayChannelThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.channelCode != null) {
        oprot.writeFieldBegin(CHANNEL_CODE_FIELD_DESC);
        oprot.writeString(struct.channelCode);
        oprot.writeFieldEnd();
      }
      if (struct.channelName != null) {
        oprot.writeFieldBegin(CHANNEL_NAME_FIELD_DESC);
        oprot.writeString(struct.channelName);
        oprot.writeFieldEnd();
      }
      if (struct.bankName != null) {
        oprot.writeFieldBegin(BANK_NAME_FIELD_DESC);
        oprot.writeString(struct.bankName);
        oprot.writeFieldEnd();
      }
      if (struct.bankNo != null) {
        oprot.writeFieldBegin(BANK_NO_FIELD_DESC);
        oprot.writeString(struct.bankNo);
        oprot.writeFieldEnd();
      }
      if (struct.channelPartnerName != null) {
        oprot.writeFieldBegin(CHANNEL_PARTNER_NAME_FIELD_DESC);
        oprot.writeString(struct.channelPartnerName);
        oprot.writeFieldEnd();
      }
      if (struct.channelPartnerCode != null) {
        oprot.writeFieldBegin(CHANNEL_PARTNER_CODE_FIELD_DESC);
        oprot.writeString(struct.channelPartnerCode);
        oprot.writeFieldEnd();
      }
      if (struct.channelTypeName != null) {
        oprot.writeFieldBegin(CHANNEL_TYPE_NAME_FIELD_DESC);
        oprot.writeString(struct.channelTypeName);
        oprot.writeFieldEnd();
      }
      if (struct.channelTypeCode != null) {
        oprot.writeFieldBegin(CHANNEL_TYPE_CODE_FIELD_DESC);
        oprot.writeString(struct.channelTypeCode);
        oprot.writeFieldEnd();
      }
      if (struct.cardTypeName != null) {
        oprot.writeFieldBegin(CARD_TYPE_NAME_FIELD_DESC);
        oprot.writeString(struct.cardTypeName);
        oprot.writeFieldEnd();
      }
      if (struct.cardTypeCode != null) {
        oprot.writeFieldBegin(CARD_TYPE_CODE_FIELD_DESC);
        oprot.writeString(struct.cardTypeCode);
        oprot.writeFieldEnd();
      }
      if (struct.accountType != null) {
        oprot.writeFieldBegin(ACCOUNT_TYPE_FIELD_DESC);
        oprot.writeString(struct.accountType);
        oprot.writeFieldEnd();
      }
      if (struct.businessType != null) {
        oprot.writeFieldBegin(BUSINESS_TYPE_FIELD_DESC);
        oprot.writeString(struct.businessType);
        oprot.writeFieldEnd();
      }
      if (struct.chargeDeductType != null) {
        oprot.writeFieldBegin(CHARGE_DEDUCT_TYPE_FIELD_DESC);
        oprot.writeString(struct.chargeDeductType);
        oprot.writeFieldEnd();
      }
      if (struct.chargeReturnTag != null) {
        oprot.writeFieldBegin(CHARGE_RETURN_TAG_FIELD_DESC);
        oprot.writeString(struct.chargeReturnTag);
        oprot.writeFieldEnd();
      }
      if (struct.effectStartDate != null) {
        oprot.writeFieldBegin(EFFECT_START_DATE_FIELD_DESC);
        oprot.writeString(struct.effectStartDate);
        oprot.writeFieldEnd();
      }
      if (struct.effectEndDate != null) {
        oprot.writeFieldBegin(EFFECT_END_DATE_FIELD_DESC);
        oprot.writeString(struct.effectEndDate);
        oprot.writeFieldEnd();
      }
      if (struct.costType != null) {
        oprot.writeFieldBegin(COST_TYPE_FIELD_DESC);
        oprot.writeString(struct.costType);
        oprot.writeFieldEnd();
      }
      if (struct.costRate != null) {
        oprot.writeFieldBegin(COST_RATE_FIELD_DESC);
        oprot.writeString(struct.costRate);
        oprot.writeFieldEnd();
      }
      if (struct.costCount != null) {
        oprot.writeFieldBegin(COST_COUNT_FIELD_DESC);
        oprot.writeString(struct.costCount);
        oprot.writeFieldEnd();
      }
      if (struct.status != null) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeString(struct.status);
        oprot.writeFieldEnd();
      }
      if (struct.contractDate != null) {
        oprot.writeFieldBegin(CONTRACT_DATE_FIELD_DESC);
        oprot.writeString(struct.contractDate);
        oprot.writeFieldEnd();
      }
      if (struct.settleType != null) {
        oprot.writeFieldBegin(SETTLE_TYPE_FIELD_DESC);
        oprot.writeString(struct.settleType);
        oprot.writeFieldEnd();
      }
      if (struct.settlePeriod != null) {
        oprot.writeFieldBegin(SETTLE_PERIOD_FIELD_DESC);
        oprot.writeString(struct.settlePeriod);
        oprot.writeFieldEnd();
      }
      if (struct.sort != null) {
        oprot.writeFieldBegin(SORT_FIELD_DESC);
        oprot.writeString(struct.sort);
        oprot.writeFieldEnd();
      }
      if (struct.perlimitAmount != null) {
        oprot.writeFieldBegin(PERLIMIT_AMOUNT_FIELD_DESC);
        oprot.writeString(struct.perlimitAmount);
        oprot.writeFieldEnd();
      }
      if (struct.daylimitAmount != null) {
        oprot.writeFieldBegin(DAYLIMIT_AMOUNT_FIELD_DESC);
        oprot.writeString(struct.daylimitAmount);
        oprot.writeFieldEnd();
      }
      if (struct.monlimitAmount != null) {
        oprot.writeFieldBegin(MONLIMIT_AMOUNT_FIELD_DESC);
        oprot.writeString(struct.monlimitAmount);
        oprot.writeFieldEnd();
      }
      if (struct.orderSettlePeriod != null) {
        oprot.writeFieldBegin(ORDER_SETTLE_PERIOD_FIELD_DESC);
        oprot.writeString(struct.orderSettlePeriod);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PayChannelThriftTupleSchemeFactory implements SchemeFactory {
    public PayChannelThriftTupleScheme getScheme() {
      return new PayChannelThriftTupleScheme();
    }
  }

  private static class PayChannelThriftTupleScheme extends TupleScheme<PayChannelThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PayChannelThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetChannelCode()) {
        optionals.set(0);
      }
      if (struct.isSetChannelName()) {
        optionals.set(1);
      }
      if (struct.isSetBankName()) {
        optionals.set(2);
      }
      if (struct.isSetBankNo()) {
        optionals.set(3);
      }
      if (struct.isSetChannelPartnerName()) {
        optionals.set(4);
      }
      if (struct.isSetChannelPartnerCode()) {
        optionals.set(5);
      }
      if (struct.isSetChannelTypeName()) {
        optionals.set(6);
      }
      if (struct.isSetChannelTypeCode()) {
        optionals.set(7);
      }
      if (struct.isSetCardTypeName()) {
        optionals.set(8);
      }
      if (struct.isSetCardTypeCode()) {
        optionals.set(9);
      }
      if (struct.isSetAccountType()) {
        optionals.set(10);
      }
      if (struct.isSetBusinessType()) {
        optionals.set(11);
      }
      if (struct.isSetChargeDeductType()) {
        optionals.set(12);
      }
      if (struct.isSetChargeReturnTag()) {
        optionals.set(13);
      }
      if (struct.isSetEffectStartDate()) {
        optionals.set(14);
      }
      if (struct.isSetEffectEndDate()) {
        optionals.set(15);
      }
      if (struct.isSetCostType()) {
        optionals.set(16);
      }
      if (struct.isSetCostRate()) {
        optionals.set(17);
      }
      if (struct.isSetCostCount()) {
        optionals.set(18);
      }
      if (struct.isSetStatus()) {
        optionals.set(19);
      }
      if (struct.isSetContractDate()) {
        optionals.set(20);
      }
      if (struct.isSetSettleType()) {
        optionals.set(21);
      }
      if (struct.isSetSettlePeriod()) {
        optionals.set(22);
      }
      if (struct.isSetSort()) {
        optionals.set(23);
      }
      if (struct.isSetPerlimitAmount()) {
        optionals.set(24);
      }
      if (struct.isSetDaylimitAmount()) {
        optionals.set(25);
      }
      if (struct.isSetMonlimitAmount()) {
        optionals.set(26);
      }
      if (struct.isSetOrderSettlePeriod()) {
        optionals.set(27);
      }
      oprot.writeBitSet(optionals, 28);
      if (struct.isSetChannelCode()) {
        oprot.writeString(struct.channelCode);
      }
      if (struct.isSetChannelName()) {
        oprot.writeString(struct.channelName);
      }
      if (struct.isSetBankName()) {
        oprot.writeString(struct.bankName);
      }
      if (struct.isSetBankNo()) {
        oprot.writeString(struct.bankNo);
      }
      if (struct.isSetChannelPartnerName()) {
        oprot.writeString(struct.channelPartnerName);
      }
      if (struct.isSetChannelPartnerCode()) {
        oprot.writeString(struct.channelPartnerCode);
      }
      if (struct.isSetChannelTypeName()) {
        oprot.writeString(struct.channelTypeName);
      }
      if (struct.isSetChannelTypeCode()) {
        oprot.writeString(struct.channelTypeCode);
      }
      if (struct.isSetCardTypeName()) {
        oprot.writeString(struct.cardTypeName);
      }
      if (struct.isSetCardTypeCode()) {
        oprot.writeString(struct.cardTypeCode);
      }
      if (struct.isSetAccountType()) {
        oprot.writeString(struct.accountType);
      }
      if (struct.isSetBusinessType()) {
        oprot.writeString(struct.businessType);
      }
      if (struct.isSetChargeDeductType()) {
        oprot.writeString(struct.chargeDeductType);
      }
      if (struct.isSetChargeReturnTag()) {
        oprot.writeString(struct.chargeReturnTag);
      }
      if (struct.isSetEffectStartDate()) {
        oprot.writeString(struct.effectStartDate);
      }
      if (struct.isSetEffectEndDate()) {
        oprot.writeString(struct.effectEndDate);
      }
      if (struct.isSetCostType()) {
        oprot.writeString(struct.costType);
      }
      if (struct.isSetCostRate()) {
        oprot.writeString(struct.costRate);
      }
      if (struct.isSetCostCount()) {
        oprot.writeString(struct.costCount);
      }
      if (struct.isSetStatus()) {
        oprot.writeString(struct.status);
      }
      if (struct.isSetContractDate()) {
        oprot.writeString(struct.contractDate);
      }
      if (struct.isSetSettleType()) {
        oprot.writeString(struct.settleType);
      }
      if (struct.isSetSettlePeriod()) {
        oprot.writeString(struct.settlePeriod);
      }
      if (struct.isSetSort()) {
        oprot.writeString(struct.sort);
      }
      if (struct.isSetPerlimitAmount()) {
        oprot.writeString(struct.perlimitAmount);
      }
      if (struct.isSetDaylimitAmount()) {
        oprot.writeString(struct.daylimitAmount);
      }
      if (struct.isSetMonlimitAmount()) {
        oprot.writeString(struct.monlimitAmount);
      }
      if (struct.isSetOrderSettlePeriod()) {
        oprot.writeString(struct.orderSettlePeriod);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PayChannelThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(28);
      if (incoming.get(0)) {
        struct.channelCode = iprot.readString();
        struct.setChannelCodeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.channelName = iprot.readString();
        struct.setChannelNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.bankName = iprot.readString();
        struct.setBankNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.bankNo = iprot.readString();
        struct.setBankNoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.channelPartnerName = iprot.readString();
        struct.setChannelPartnerNameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.channelPartnerCode = iprot.readString();
        struct.setChannelPartnerCodeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.channelTypeName = iprot.readString();
        struct.setChannelTypeNameIsSet(true);
      }
      if (incoming.get(7)) {
        struct.channelTypeCode = iprot.readString();
        struct.setChannelTypeCodeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.cardTypeName = iprot.readString();
        struct.setCardTypeNameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.cardTypeCode = iprot.readString();
        struct.setCardTypeCodeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.accountType = iprot.readString();
        struct.setAccountTypeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.businessType = iprot.readString();
        struct.setBusinessTypeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.chargeDeductType = iprot.readString();
        struct.setChargeDeductTypeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.chargeReturnTag = iprot.readString();
        struct.setChargeReturnTagIsSet(true);
      }
      if (incoming.get(14)) {
        struct.effectStartDate = iprot.readString();
        struct.setEffectStartDateIsSet(true);
      }
      if (incoming.get(15)) {
        struct.effectEndDate = iprot.readString();
        struct.setEffectEndDateIsSet(true);
      }
      if (incoming.get(16)) {
        struct.costType = iprot.readString();
        struct.setCostTypeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.costRate = iprot.readString();
        struct.setCostRateIsSet(true);
      }
      if (incoming.get(18)) {
        struct.costCount = iprot.readString();
        struct.setCostCountIsSet(true);
      }
      if (incoming.get(19)) {
        struct.status = iprot.readString();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(20)) {
        struct.contractDate = iprot.readString();
        struct.setContractDateIsSet(true);
      }
      if (incoming.get(21)) {
        struct.settleType = iprot.readString();
        struct.setSettleTypeIsSet(true);
      }
      if (incoming.get(22)) {
        struct.settlePeriod = iprot.readString();
        struct.setSettlePeriodIsSet(true);
      }
      if (incoming.get(23)) {
        struct.sort = iprot.readString();
        struct.setSortIsSet(true);
      }
      if (incoming.get(24)) {
        struct.perlimitAmount = iprot.readString();
        struct.setPerlimitAmountIsSet(true);
      }
      if (incoming.get(25)) {
        struct.daylimitAmount = iprot.readString();
        struct.setDaylimitAmountIsSet(true);
      }
      if (incoming.get(26)) {
        struct.monlimitAmount = iprot.readString();
        struct.setMonlimitAmountIsSet(true);
      }
      if (incoming.get(27)) {
        struct.orderSettlePeriod = iprot.readString();
        struct.setOrderSettlePeriodIsSet(true);
      }
    }
  }

}

