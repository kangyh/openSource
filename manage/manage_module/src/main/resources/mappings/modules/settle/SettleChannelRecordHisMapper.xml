<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heepay.manage.modules.settle.dao.SettleChannelRecordHisDao" >
  <resultMap id="BaseResultMap" type="com.heepay.manage.modules.settle.entity.SettleChannelRecordHis" >
    <id column="his_id" property="hisId" jdbcType="BIGINT" />
    <result column="settle_id" property="settleId" jdbcType="BIGINT" />
    <result column="channel_code" property="channelCode" jdbcType="VARCHAR" />
    <result column="channel_name" property="channelName" jdbcType="VARCHAR" />
    <result column="channel_type" property="channelType" jdbcType="VARCHAR" />
    <result column="currency" property="currency" jdbcType="VARCHAR" />
    <result column="pay_num" property="payNum" jdbcType="INTEGER" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
    <result column="settle_time" property="settleTime" jdbcType="TIMESTAMP" />
    <result column="settle_cyc" property="settleCyc" jdbcType="VARCHAR" />
    <result column="settle_bath" property="settleBath" jdbcType="VARCHAR" />
    <result column="cost_time" property="costTime" jdbcType="TIMESTAMP" />
    <result column="cost_amount" property="costAmount" jdbcType="DECIMAL" />
    <result column="cost_settle_cyc" property="costSettleCyc" jdbcType="VARCHAR" />
    <result column="check_status" property="checkStatus" jdbcType="CHAR" />
    <result column="settle_status" property="settleStatus" jdbcType="CHAR" />
    <result column="date_zip" property="dateZip" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from settle_channel_record_his
    where his_id = #{hisId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.heepay.manage.modules.settle.entity.SettleChannelRecordHis" >
    insert into settle_channel_record_his (his_id, settle_id, channel_code, 
      channel_name, channel_type, currency, 
      pay_num, total_amount, check_time, 
      settle_time, settle_cyc, settle_bath, 
      cost_time, cost_amount, cost_settle_cyc, 
      check_status, settle_status, date_zip
      )
    values (#{hisId,jdbcType=BIGINT}, #{settleId,jdbcType=BIGINT}, #{channelCode,jdbcType=VARCHAR}, 
      #{channelName,jdbcType=VARCHAR}, #{channelType,jdbcType=VARCHAR}, #{currency,jdbcType=VARCHAR}, 
      #{payNum,jdbcType=INTEGER}, #{totalAmount,jdbcType=DECIMAL}, #{checkTime,jdbcType=TIMESTAMP}, 
      #{settleTime,jdbcType=TIMESTAMP}, #{settleCyc,jdbcType=VARCHAR}, #{settleBath,jdbcType=VARCHAR}, 
      #{costTime,jdbcType=TIMESTAMP}, #{costAmount,jdbcType=DECIMAL}, #{costSettleCyc,jdbcType=VARCHAR}, 
      #{checkStatus,jdbcType=CHAR}, #{settleStatus,jdbcType=CHAR}, #{dateZip,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.heepay.manage.modules.settle.entity.SettleChannelRecordHis" >
    update settle_channel_record_his
    set settle_id = #{settleId,jdbcType=BIGINT},
      channel_code = #{channelCode,jdbcType=VARCHAR},
      channel_name = #{channelName,jdbcType=VARCHAR},
      channel_type = #{channelType,jdbcType=VARCHAR},
      currency = #{currency,jdbcType=VARCHAR},
      pay_num = #{payNum,jdbcType=INTEGER},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      settle_time = #{settleTime,jdbcType=TIMESTAMP},
      settle_cyc = #{settleCyc,jdbcType=VARCHAR},
      settle_bath = #{settleBath,jdbcType=VARCHAR},
      cost_time = #{costTime,jdbcType=TIMESTAMP},
      cost_amount = #{costAmount,jdbcType=DECIMAL},
      cost_settle_cyc = #{costSettleCyc,jdbcType=VARCHAR},
      check_status = #{checkStatus,jdbcType=CHAR},
      settle_status = #{settleStatus,jdbcType=CHAR},
      date_zip = #{dateZip,jdbcType=TIMESTAMP}
    where his_id = #{hisId,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select his_id, settle_id, channel_code, channel_name, channel_type, currency, pay_num, 
    total_amount, check_time, settle_time, settle_cyc, settle_bath, cost_time, cost_amount, 
    cost_settle_cyc, check_status, settle_status, date_zip
    from settle_channel_record_his
    where his_id = #{hisId,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select his_id, settle_id, channel_code, channel_name, channel_type, currency, pay_num, 
    total_amount, check_time, settle_time, settle_cyc, settle_bath, cost_time, cost_amount, 
    cost_settle_cyc, check_status, settle_status, date_zip
    from settle_channel_record_his
  </select>
  
   <!-- 数据表中的字段对应翻译为实体类中对应的字段 -->
	<sql id="settleChannelRecordHisColumns">
		a.his_id AS "hisId",
		a.settle_id AS "clearingId",
		a.channel_code AS "channelCode",
		a.channel_name AS "channelName",
		a.channel_type AS "channelType",
		a.currency AS "currency",
		a.pay_num AS "payNum",
		a.total_amount AS "totalAmount",
		a.check_time AS "checkTime",
		a.settle_time AS "settleTime",
		a.settle_cyc AS "settleCyc",
		a.settle_bath AS "settleBath",
		a.cost_time AS "costTime",
		a.cost_amount AS "costAmount",
		a.cost_settle_cyc AS "costSettleCyc",
		a.check_status AS "checkStatus",
		a.settle_status AS "settleStatus",
		a.date_zip AS "dateZip"
	</sql>
	
	<select id="findList" resultType="SettleChannelRecordHis">
		SELECT 
			<include refid="settleChannelRecordHisColumns"/>
		FROM settle_channel_record_his a
		<where>
			<!-- 结算日期 -->
			<if test="beginSettleTime != null">
				<![CDATA[   and DATE_FORMAT(a.settle_time, '%Y-%m-%d')>=  DATE_FORMAT(#{beginSettleTime}, '%Y-%m-%d')   ]]>
			</if>
			<if test="endSettleTime != null">
				<![CDATA[  and DATE_FORMAT(a.settle_time, '%Y-%m-%d') <= DATE_FORMAT(#{endSettleTime}, '%Y-%m-%d')    ]]>
			</if>
			
			<!-- 通道名称 -->
			<if test="channelName != null and channelName != ''">
				AND a.channel_name LIKE #{channelName}
			</if>
			<!-- 通道类型-->
			<if test="channelType != null and channelType != ''">
				AND a.channel_type = #{channelType}
			</if>
			<!-- 结算状态-->
			<if test="settleStatus != null and settleStatus != ''">
				AND a.settle_status = #{settleStatus}
			</if>
			<!-- 通道编码-->
			<if test="channelCode != null and channelCode != ''">
				AND a.channel_code = #{channelCode}
			</if>
			<!-- 结算批次号-->
			<if test="settleBath != null and settleBath != ''">
				AND a.settle_bath = #{settleBath}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY his_id desc
			</otherwise>
		</choose>
	</select>
	
	<!-- 导出通道侧结算记录文件专用SQL -->
	<select id="findListToExcel" resultType="hashmap">
		SELECT 
			<include refid="settleChannelRecordHisColumns"/>
		FROM settle_channel_record_his a
		<where>
			<!-- 结算日期 -->
			<if test="beginSettleTime != null">
				<![CDATA[   and DATE_FORMAT(a.settle_time, '%Y-%m-%d')>=  DATE_FORMAT(#{beginSettleTime}, '%Y-%m-%d')   ]]>
			</if>
			<if test="endSettleTime != null">
				<![CDATA[  and DATE_FORMAT(a.settle_time, '%Y-%m-%d') <= DATE_FORMAT(#{endSettleTime}, '%Y-%m-%d')    ]]>
			</if>
			
			<!-- 通道名称 -->
			<if test="channelName != null and channelName != ''">
				AND a.channel_name LIKE #{channelName}
			</if>
			<!-- 通道类型-->
			<if test="channelType != null and channelType != ''">
				AND a.channel_type = #{channelType}
			</if>
			<!-- 结算状态-->
			<if test="settleStatus != null and settleStatus != ''">
				AND a.settle_status = #{settleStatus}
			</if>
			<!-- 通道编码-->
			<if test="channelCode != null and channelCode != ''">
				AND a.channel_code = #{channelCode}
			</if>
			<!-- 结算批次号-->
			<if test="settleBath != null and settleBath != ''">
				AND a.settle_bath = #{settleBath}
			</if>
		</where>
		ORDER BY a.his_id desc
	</select>
	
</mapper>