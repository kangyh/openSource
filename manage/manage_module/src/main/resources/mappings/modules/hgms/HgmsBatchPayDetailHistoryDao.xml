<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heepay.manage.modules.hgms.dao.HgmsBatchPayDetailHistoryDao">
    
	<sql id="hgmsBatchPayDetailHistoryColumns">
		a.id AS "id",
		a.trans_id AS "transId",
		a.hfb_trans_id AS "hfbTransId",
		a.source_merchant_id AS "sourceMerchantId",
		a.dest_merchant_id AS "destMerchantId",
		a.source_merchant_name AS "sourceMerchantName",
		a.dest_merchant_name AS "destMerchantName",
		a.pay_amount AS "payAmount",
		a.create_time AS "createTime",
		a.update_time AS "updateTime",
		a.success_time AS "successTime",
		a.success_amount AS "successAmount",
		a.trans_batch_no AS "transBatchNo",
		a.trans_way AS "transWay",
		a.bank_no AS "bankNo",
		a.bankcard_no AS "bankcardNo",
		a.bankcard_owner_name AS "bankcardOwnerName",
		a.bankcard_owner_type AS "bankcardOwnerType",
		a.province AS "province",
		a.city AS "city",
		a.openbank_name AS "openbankName",
		a.purpose AS "purpose",
		a.business_type AS "businessType",
		a.settlement_status AS "settlementStatus",
		a.trans_status AS "transStatus",
		a.fee_type AS "feeType",
		a.fee_amount AS "feeAmount",
		a.fee_ratio AS "feeRatio",
		a.request_source AS "requestSource",
		a.audit_flag AS "auditFlag",
		a.audit_reason AS "auditReason",
		a.error_code AS "errorCode",
		a.error_msg AS "errorMsg",
		a.extend1 AS "extend1",
		a.extend2 AS "extend2",
		a.extend3 AS "extend3",
		a.extend4 AS "extend4",
		a.extend5 AS "extend5"
	</sql>
	
	<sql id="hgmsBatchPayDetailHistoryJoins">
	</sql>
	<select id="getHgmsSummaryResult"  resultType="com.heepay.manage.modules.hgms.entity.HgmsSummaryResult" parameterType="com.heepay.manage.modules.hgms.entity.HgmsBatchPayDetailHistory">
		select
		count(*) AS tranNumberCount,
		SUM(CASE WHEN trans_status='SUCCES' THEN 1 ELSE 0 end)  AS tranNumberSuccess,
		SUM(CASE WHEN trans_status='FAILED' THEN 1 ELSE 0 end) AS tranNumberFailed,
		SUM(pay_amount) AS tranMoneyCount,
		SUM(CASE WHEN trans_status='SUCCES' THEN pay_amount ELSE 0 end) AS tranMoneySuccess,
		SUM(CASE WHEN trans_status='FAILED' THEN pay_amount ELSE 0 end) AS tranMoneyFailed,
		SUM(fee_amount) AS feeCount,
		SUM(CASE WHEN trans_status='SUCCES' THEN fee_amount ELSE 0 end) AS feeSuccess,
		SUM(CASE WHEN trans_status='FAILED' THEN fee_amount ELSE 0 end) AS feeFailed
		from
		hgms_batch_pay_detail_history
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="transId != null and transId != ''">
				AND trans_id = #{transId}
			</if>
			<if test="sourceMerchantName != null and sourceMerchantName != ''">
				AND source_merchant_name LIKE  CONCAT(CONCAT('%', #{sourceMerchantName}),'%')
			</if>
			<if test="destMerchantName != null and destMerchantName != ''">
				AND dest_merchant_name LIKE  CONCAT(CONCAT('%', #{destMerchantName}),'%')
			</if>
			<if test="sourceMerchantId != null and sourceMerchantId != ''">
				AND source_merchant_id = #{sourceMerchantId}
			</if>
			<if test="beginCreateTime != null and endCreateTime != null ">
				AND create_time BETWEEN #{beginCreateTime} AND #{endCreateTime}
			</if>
			<if test="transBatchNo != null and transBatchNo != ''">
				AND trans_batch_no = #{transBatchNo}
			</if>
			<if test="transWay != null and transWay != ''">
				AND trans_way = #{transWay}
			</if>
			<if test="openbankName != null and openbankName != ''">
				AND openbank_name LIKE  CONCAT(CONCAT('%', #{openbankName}),'%')
			</if>
			<if test="settlementStatus != null and settlementStatus != ''">
				AND settlement_status = #{settlementStatus}
			</if>
			<if test="transStatus != null and transStatus != ''">
				AND trans_status = #{transStatus}
			</if>
		</trim>
	</select>

	<select id="get" resultType="HgmsBatchPayDetailHistory">
		SELECT 
			<include refid="hgmsBatchPayDetailHistoryColumns"/>
		FROM hgms_batch_pay_detail_history a
		<include refid="hgmsBatchPayDetailHistoryJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="HgmsBatchPayDetailHistory">
		SELECT 
			<include refid="hgmsBatchPayDetailHistoryColumns"/>
		FROM hgms_batch_pay_detail_history a
		<include refid="hgmsBatchPayDetailHistoryJoins"/>
		<where>
			
			<if test="transId != null and transId != ''">
				AND a.trans_id = #{transId}
			</if>
			<if test="sourceMerchantName != null and sourceMerchantName != ''">
				AND a.source_merchant_name LIKE  CONCAT(CONCAT('%', #{sourceMerchantName}),'%')
			</if>
			<if test="destMerchantName != null and destMerchantName != ''">
				AND a.dest_merchant_name LIKE  CONCAT(CONCAT('%', #{destMerchantName}),'%')
			</if>
			<if test="sourceMerchantId != null and sourceMerchantId != ''">
				AND a.source_merchant_id = #{sourceMerchantId}
			</if>
			<if test="beginCreateTime != null and endCreateTime != null">
				AND a.create_time BETWEEN #{beginCreateTime} AND #{endCreateTime}
			</if>
			<if test="transBatchNo != null and transBatchNo != ''">
				AND a.trans_batch_no = #{transBatchNo}
			</if>
			<if test="transWay != null and transWay != ''">
				AND a.trans_way = #{transWay}
			</if>
			<if test="openbankName != null and openbankName != ''">
				AND a.openbank_name LIKE  CONCAT(CONCAT('%', #{openbankName}),'%')
			</if>
			<if test="settlementStatus != null and settlementStatus != ''">
				AND a.settlement_status = #{settlementStatus}
			</if>
			<if test="transStatus != null and transStatus != ''">
				AND a.trans_status = #{transStatus}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="HgmsBatchPayDetailHistory">
		SELECT 
			<include refid="hgmsBatchPayDetailHistoryColumns"/>
		FROM hgms_batch_pay_detail_history a
		<include refid="hgmsBatchPayDetailHistoryJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO hgms_batch_pay_detail_history(
			id,
			trans_id,
			hfb_trans_id,
			source_merchant_id,
			dest_merchant_id,
			source_merchant_name,
			dest_merchant_name,
			pay_amount,
			create_time,
			update_time,
			success_time,
			success_amount,
			trans_batch_no,
			trans_way,
			bank_no,
			bankcard_no,
			bankcard_owner_name,
			bankcard_owner_type,
			province,
			city,
			openbank_name,
			purpose,
			business_type,
			settlement_status,
			trans_status,
			fee_type,
			fee_amount,
			fee_ratio,
			request_source,
			audit_flag,
			audit_reason,
			error_code,
			error_msg,
			extend1,
			extend2,
			extend3,
			extend4,
			extend5
		) VALUES (
			#{id},
			#{transId},
			#{hfbTransId},
			#{sourceMerchantId},
			#{destMerchantId},
			#{sourceMerchantName},
			#{destMerchantName},
			#{payAmount},
			#{createTime},
			#{updateTime},
			#{successTime},
			#{successAmount},
			#{transBatchNo},
			#{transWay},
			#{bankNo},
			#{bankcardNo},
			#{bankcardOwnerName},
			#{bankcardOwnerType},
			#{province},
			#{city},
			#{openbankName},
			#{purpose},
			#{businessType},
			#{settlementStatus},
			#{transStatus},
			#{feeType},
			#{feeAmount},
			#{feeRatio},
			#{requestSource},
			#{auditFlag},
			#{auditReason},
			#{errorCode},
			#{errorMsg},
			#{extend1},
			#{extend2},
			#{extend3},
			#{extend4},
			#{extend5}
		)
	</insert>
	
	<update id="update">
		UPDATE hgms_batch_pay_detail_history SET 	
			trans_id = #{transId},
			hfb_trans_id = #{hfbTransId},
			source_merchant_id = #{sourceMerchantId},
			dest_merchant_id = #{destMerchantId},
			source_merchant_name = #{sourceMerchantName},
			dest_merchant_name = #{destMerchantName},
			pay_amount = #{payAmount},
			create_time = #{createTime},
			update_time = #{updateTime},
			success_time = #{successTime},
			success_amount = #{successAmount},
			trans_batch_no = #{transBatchNo},
			trans_way = #{transWay},
			bank_no = #{bankNo},
			bankcard_no = #{bankcardNo},
			bankcard_owner_name = #{bankcardOwnerName},
			bankcard_owner_type = #{bankcardOwnerType},
			province = #{province},
			city = #{city},
			openbank_name = #{openbankName},
			purpose = #{purpose},
			business_type = #{businessType},
			settlement_status = #{settlementStatus},
			trans_status = #{transStatus},
			fee_type = #{feeType},
			fee_amount = #{feeAmount},
			fee_ratio = #{feeRatio},
			request_source = #{requestSource},
			audit_flag = #{auditFlag},
			audit_reason = #{auditReason},
			error_code = #{errorCode},
			error_msg = #{errorMsg},
			extend1 = #{extend1},
			extend2 = #{extend2},
			extend3 = #{extend3},
			extend4 = #{extend4},
			extend5 = #{extend5}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM hgms_batch_pay_detail_history
		WHERE id = #{id}
	</update>
	
</mapper>