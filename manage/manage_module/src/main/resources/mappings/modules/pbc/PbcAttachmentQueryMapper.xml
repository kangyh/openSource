<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heepay.manage.modules.pbc.dao.PbcAttachmentQueryDao" >
  
  <sql id="includeEntity">
	  a.pbc_id, 
	  a.application_code, 
	  a.file_name, 
      a.file_path, 
      a.create_time, 
      a.create_user, 
      a.file_content
	</sql>
	
	<select id="findList" resultType="PbcAttachmentQuery">
		SELECT 
			<include refid="includeEntity"/>
		FROM pbc_attachment_query a
		<where>
			
			<!-- 创建时间 -->
			<if test="beginOperEndTime != null and endOperEndTime != null">
				AND a.create_time BETWEEN date_format(#{beginOperEndTime},'%Y-%m-%d %H:%i:%s') AND date_format(#{endOperEndTime},'%Y-%m-%d %H:%i:%s')
			</if>
			<!--applicationCode -->
			<if test="applicationCode != null and applicationCode != ''">
				AND a.application_code = #{applicationCode} 
			</if> 
			<!-- fileName-->
			<if test="fileName != null and fileName != ''">
				AND a.file_name = #{fileName} 
			</if> 
			</where> 
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY pbc_id DESC,${page.orderBy}
			</when>
			<otherwise>
				ORDER BY pbc_id DESC
			</otherwise>
		</choose>
	</select>
	
  <insert id="save" parameterType="PbcAttachmentQuery" >
     insert into pbc_attachment_query (pbc_id, application_code, file_name, 
      file_path, create_time, create_user, 
      file_content)
    values (#{pbcId,jdbcType=BIGINT}, #{applicationCode,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, 
      #{filePath,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{fileContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="saveEntity" parameterType="PbcAttachmentQuery" useGeneratedKeys="true" keyProperty="pbcId">
    insert into pbc_attachment_query
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pbcId != null" >
        pbc_id,
      </if>
      <if test="applicationCode != null" >
        application_code,
      </if>
      <if test="fileName != null" >
        file_name,
      </if>
      <if test="filePath != null" >
        file_path,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="fileContent != null" >
        file_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pbcId != null" >
        #{pbcId,jdbcType=BIGINT},
      </if>
      <if test="applicationCode != null" >
        #{applicationCode,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null" >
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="fileContent != null" >
        #{fileContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  
  
  <update id="updateEntity" parameterType="PbcAttachmentQuery" >
   update pbc_attachment_query
    <set >
      <if test="applicationCode != null" >
        application_code = #{applicationCode,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null" >
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null" >
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="fileContent != null" >
        file_content = #{fileContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where pbc_id = #{pbcId,jdbcType=BIGINT}
  </update>
  
  
  <update id="update" parameterType="PbcAttachmentQuery" >
    update pbc_attachment_query
    set application_code = #{applicationCode,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      file_content = #{fileContent,jdbcType=LONGVARCHAR}
    where pbc_id = #{pbcId,jdbcType=BIGINT}
  </update>
  <select id="getEntityById" resultType="PbcAttachmentQuery">
  	SELECT 
			<include refid="includeEntity"/>
		FROM pbc_attachment_query a
	WHERE pbc_id = #{pbcId}
  </select>
</mapper>