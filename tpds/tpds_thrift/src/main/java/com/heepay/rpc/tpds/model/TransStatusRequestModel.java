/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.heepay.rpc.tpds.model;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2017-02-15")
public class TransStatusRequestModel implements org.apache.thrift.TBase<TransStatusRequestModel, TransStatusRequestModel._Fields>, java.io.Serializable, Cloneable, Comparable<TransStatusRequestModel> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TransStatusRequestModel");

  private static final org.apache.thrift.protocol.TField BUSINESS_SEQ_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("businessSeqNo", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField OLDBUSINESS_SEQ_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("oldbusinessSeqNo", org.apache.thrift.protocol.TType.STRING, (short)2);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new TransStatusRequestModelStandardSchemeFactory());
    schemes.put(TupleScheme.class, new TransStatusRequestModelTupleSchemeFactory());
  }

  public String businessSeqNo; // required
  public String oldbusinessSeqNo; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    BUSINESS_SEQ_NO((short)1, "businessSeqNo"),
    OLDBUSINESS_SEQ_NO((short)2, "oldbusinessSeqNo");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // BUSINESS_SEQ_NO
          return BUSINESS_SEQ_NO;
        case 2: // OLDBUSINESS_SEQ_NO
          return OLDBUSINESS_SEQ_NO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.BUSINESS_SEQ_NO, new org.apache.thrift.meta_data.FieldMetaData("businessSeqNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OLDBUSINESS_SEQ_NO, new org.apache.thrift.meta_data.FieldMetaData("oldbusinessSeqNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TransStatusRequestModel.class, metaDataMap);
  }

  public TransStatusRequestModel() {
  }

  public TransStatusRequestModel(
    String businessSeqNo,
    String oldbusinessSeqNo)
  {
    this();
    this.businessSeqNo = businessSeqNo;
    this.oldbusinessSeqNo = oldbusinessSeqNo;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TransStatusRequestModel(TransStatusRequestModel other) {
    if (other.isSetBusinessSeqNo()) {
      this.businessSeqNo = other.businessSeqNo;
    }
    if (other.isSetOldbusinessSeqNo()) {
      this.oldbusinessSeqNo = other.oldbusinessSeqNo;
    }
  }

  public TransStatusRequestModel deepCopy() {
    return new TransStatusRequestModel(this);
  }

  @Override
  public void clear() {
    this.businessSeqNo = null;
    this.oldbusinessSeqNo = null;
  }

  public String getBusinessSeqNo() {
    return this.businessSeqNo;
  }

  public TransStatusRequestModel setBusinessSeqNo(String businessSeqNo) {
    this.businessSeqNo = businessSeqNo;
    return this;
  }

  public void unsetBusinessSeqNo() {
    this.businessSeqNo = null;
  }

  /** Returns true if field businessSeqNo is set (has been assigned a value) and false otherwise */
  public boolean isSetBusinessSeqNo() {
    return this.businessSeqNo != null;
  }

  public void setBusinessSeqNoIsSet(boolean value) {
    if (!value) {
      this.businessSeqNo = null;
    }
  }

  public String getOldbusinessSeqNo() {
    return this.oldbusinessSeqNo;
  }

  public TransStatusRequestModel setOldbusinessSeqNo(String oldbusinessSeqNo) {
    this.oldbusinessSeqNo = oldbusinessSeqNo;
    return this;
  }

  public void unsetOldbusinessSeqNo() {
    this.oldbusinessSeqNo = null;
  }

  /** Returns true if field oldbusinessSeqNo is set (has been assigned a value) and false otherwise */
  public boolean isSetOldbusinessSeqNo() {
    return this.oldbusinessSeqNo != null;
  }

  public void setOldbusinessSeqNoIsSet(boolean value) {
    if (!value) {
      this.oldbusinessSeqNo = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case BUSINESS_SEQ_NO:
      if (value == null) {
        unsetBusinessSeqNo();
      } else {
        setBusinessSeqNo((String)value);
      }
      break;

    case OLDBUSINESS_SEQ_NO:
      if (value == null) {
        unsetOldbusinessSeqNo();
      } else {
        setOldbusinessSeqNo((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case BUSINESS_SEQ_NO:
      return getBusinessSeqNo();

    case OLDBUSINESS_SEQ_NO:
      return getOldbusinessSeqNo();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case BUSINESS_SEQ_NO:
      return isSetBusinessSeqNo();
    case OLDBUSINESS_SEQ_NO:
      return isSetOldbusinessSeqNo();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TransStatusRequestModel)
      return this.equals((TransStatusRequestModel)that);
    return false;
  }

  public boolean equals(TransStatusRequestModel that) {
    if (that == null)
      return false;

    boolean this_present_businessSeqNo = true && this.isSetBusinessSeqNo();
    boolean that_present_businessSeqNo = true && that.isSetBusinessSeqNo();
    if (this_present_businessSeqNo || that_present_businessSeqNo) {
      if (!(this_present_businessSeqNo && that_present_businessSeqNo))
        return false;
      if (!this.businessSeqNo.equals(that.businessSeqNo))
        return false;
    }

    boolean this_present_oldbusinessSeqNo = true && this.isSetOldbusinessSeqNo();
    boolean that_present_oldbusinessSeqNo = true && that.isSetOldbusinessSeqNo();
    if (this_present_oldbusinessSeqNo || that_present_oldbusinessSeqNo) {
      if (!(this_present_oldbusinessSeqNo && that_present_oldbusinessSeqNo))
        return false;
      if (!this.oldbusinessSeqNo.equals(that.oldbusinessSeqNo))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_businessSeqNo = true && (isSetBusinessSeqNo());
    list.add(present_businessSeqNo);
    if (present_businessSeqNo)
      list.add(businessSeqNo);

    boolean present_oldbusinessSeqNo = true && (isSetOldbusinessSeqNo());
    list.add(present_oldbusinessSeqNo);
    if (present_oldbusinessSeqNo)
      list.add(oldbusinessSeqNo);

    return list.hashCode();
  }

  @Override
  public int compareTo(TransStatusRequestModel other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetBusinessSeqNo()).compareTo(other.isSetBusinessSeqNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusinessSeqNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.businessSeqNo, other.businessSeqNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOldbusinessSeqNo()).compareTo(other.isSetOldbusinessSeqNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOldbusinessSeqNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oldbusinessSeqNo, other.oldbusinessSeqNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("TransStatusRequestModel(");
    boolean first = true;

    sb.append("businessSeqNo:");
    if (this.businessSeqNo == null) {
      sb.append("null");
    } else {
      sb.append(this.businessSeqNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("oldbusinessSeqNo:");
    if (this.oldbusinessSeqNo == null) {
      sb.append("null");
    } else {
      sb.append(this.oldbusinessSeqNo);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TransStatusRequestModelStandardSchemeFactory implements SchemeFactory {
    public TransStatusRequestModelStandardScheme getScheme() {
      return new TransStatusRequestModelStandardScheme();
    }
  }

  private static class TransStatusRequestModelStandardScheme extends StandardScheme<TransStatusRequestModel> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, TransStatusRequestModel struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // BUSINESS_SEQ_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.businessSeqNo = iprot.readString();
              struct.setBusinessSeqNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // OLDBUSINESS_SEQ_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.oldbusinessSeqNo = iprot.readString();
              struct.setOldbusinessSeqNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, TransStatusRequestModel struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.businessSeqNo != null) {
        oprot.writeFieldBegin(BUSINESS_SEQ_NO_FIELD_DESC);
        oprot.writeString(struct.businessSeqNo);
        oprot.writeFieldEnd();
      }
      if (struct.oldbusinessSeqNo != null) {
        oprot.writeFieldBegin(OLDBUSINESS_SEQ_NO_FIELD_DESC);
        oprot.writeString(struct.oldbusinessSeqNo);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TransStatusRequestModelTupleSchemeFactory implements SchemeFactory {
    public TransStatusRequestModelTupleScheme getScheme() {
      return new TransStatusRequestModelTupleScheme();
    }
  }

  private static class TransStatusRequestModelTupleScheme extends TupleScheme<TransStatusRequestModel> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TransStatusRequestModel struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetBusinessSeqNo()) {
        optionals.set(0);
      }
      if (struct.isSetOldbusinessSeqNo()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetBusinessSeqNo()) {
        oprot.writeString(struct.businessSeqNo);
      }
      if (struct.isSetOldbusinessSeqNo()) {
        oprot.writeString(struct.oldbusinessSeqNo);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TransStatusRequestModel struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.businessSeqNo = iprot.readString();
        struct.setBusinessSeqNoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.oldbusinessSeqNo = iprot.readString();
        struct.setOldbusinessSeqNoIsSet(true);
      }
    }
  }

}

