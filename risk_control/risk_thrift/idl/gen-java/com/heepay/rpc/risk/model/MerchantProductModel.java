/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.heepay.rpc.risk.model;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2016-11-22")
public class MerchantProductModel implements org.apache.thrift.TBase<MerchantProductModel, MerchantProductModel._Fields>, java.io.Serializable, Cloneable, Comparable<MerchantProductModel> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MerchantProductModel");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField PRODUCT_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("productCode", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField PRODUCT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("productName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PRODUCT_DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("productDescription", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField RISK_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("riskLevel", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField REMARKS_FIELD_DESC = new org.apache.thrift.protocol.TField("remarks", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField CREATE_USER_FIELD_DESC = new org.apache.thrift.protocol.TField("createUser", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField MODIFY_USER_FIELD_DESC = new org.apache.thrift.protocol.TField("modifyUser", org.apache.thrift.protocol.TType.STRING, (short)10);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new MerchantProductModelStandardSchemeFactory());
    schemes.put(TupleScheme.class, new MerchantProductModelTupleSchemeFactory());
  }

  public String id; // required
  public String productCode; // required
  public String productName; // required
  public String productDescription; // required
  public String status; // required
  public String riskLevel; // required
  public String remarks; // required
  public String createUser; // required
  public long createTime; // required
  public String modifyUser; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    PRODUCT_CODE((short)2, "productCode"),
    PRODUCT_NAME((short)3, "productName"),
    PRODUCT_DESCRIPTION((short)4, "productDescription"),
    STATUS((short)5, "status"),
    RISK_LEVEL((short)6, "riskLevel"),
    REMARKS((short)7, "remarks"),
    CREATE_USER((short)8, "createUser"),
    CREATE_TIME((short)9, "createTime"),
    MODIFY_USER((short)10, "modifyUser");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // PRODUCT_CODE
          return PRODUCT_CODE;
        case 3: // PRODUCT_NAME
          return PRODUCT_NAME;
        case 4: // PRODUCT_DESCRIPTION
          return PRODUCT_DESCRIPTION;
        case 5: // STATUS
          return STATUS;
        case 6: // RISK_LEVEL
          return RISK_LEVEL;
        case 7: // REMARKS
          return REMARKS;
        case 8: // CREATE_USER
          return CREATE_USER;
        case 9: // CREATE_TIME
          return CREATE_TIME;
        case 10: // MODIFY_USER
          return MODIFY_USER;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CREATETIME_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_CODE, new org.apache.thrift.meta_data.FieldMetaData("productCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_NAME, new org.apache.thrift.meta_data.FieldMetaData("productName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("productDescription", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RISK_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("riskLevel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REMARKS, new org.apache.thrift.meta_data.FieldMetaData("remarks", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_USER, new org.apache.thrift.meta_data.FieldMetaData("createUser", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.MODIFY_USER, new org.apache.thrift.meta_data.FieldMetaData("modifyUser", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MerchantProductModel.class, metaDataMap);
  }

  public MerchantProductModel() {
  }

  public MerchantProductModel(
    String id,
    String productCode,
    String productName,
    String productDescription,
    String status,
    String riskLevel,
    String remarks,
    String createUser,
    long createTime,
    String modifyUser)
  {
    this();
    this.id = id;
    this.productCode = productCode;
    this.productName = productName;
    this.productDescription = productDescription;
    this.status = status;
    this.riskLevel = riskLevel;
    this.remarks = remarks;
    this.createUser = createUser;
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.modifyUser = modifyUser;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MerchantProductModel(MerchantProductModel other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetId()) {
      this.id = other.id;
    }
    if (other.isSetProductCode()) {
      this.productCode = other.productCode;
    }
    if (other.isSetProductName()) {
      this.productName = other.productName;
    }
    if (other.isSetProductDescription()) {
      this.productDescription = other.productDescription;
    }
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    if (other.isSetRiskLevel()) {
      this.riskLevel = other.riskLevel;
    }
    if (other.isSetRemarks()) {
      this.remarks = other.remarks;
    }
    if (other.isSetCreateUser()) {
      this.createUser = other.createUser;
    }
    this.createTime = other.createTime;
    if (other.isSetModifyUser()) {
      this.modifyUser = other.modifyUser;
    }
  }

  public MerchantProductModel deepCopy() {
    return new MerchantProductModel(this);
  }

  @Override
  public void clear() {
    this.id = null;
    this.productCode = null;
    this.productName = null;
    this.productDescription = null;
    this.status = null;
    this.riskLevel = null;
    this.remarks = null;
    this.createUser = null;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.modifyUser = null;
  }

  public String getId() {
    return this.id;
  }

  public MerchantProductModel setId(String id) {
    this.id = id;
    return this;
  }

  public void unsetId() {
    this.id = null;
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return this.id != null;
  }

  public void setIdIsSet(boolean value) {
    if (!value) {
      this.id = null;
    }
  }

  public String getProductCode() {
    return this.productCode;
  }

  public MerchantProductModel setProductCode(String productCode) {
    this.productCode = productCode;
    return this;
  }

  public void unsetProductCode() {
    this.productCode = null;
  }

  /** Returns true if field productCode is set (has been assigned a value) and false otherwise */
  public boolean isSetProductCode() {
    return this.productCode != null;
  }

  public void setProductCodeIsSet(boolean value) {
    if (!value) {
      this.productCode = null;
    }
  }

  public String getProductName() {
    return this.productName;
  }

  public MerchantProductModel setProductName(String productName) {
    this.productName = productName;
    return this;
  }

  public void unsetProductName() {
    this.productName = null;
  }

  /** Returns true if field productName is set (has been assigned a value) and false otherwise */
  public boolean isSetProductName() {
    return this.productName != null;
  }

  public void setProductNameIsSet(boolean value) {
    if (!value) {
      this.productName = null;
    }
  }

  public String getProductDescription() {
    return this.productDescription;
  }

  public MerchantProductModel setProductDescription(String productDescription) {
    this.productDescription = productDescription;
    return this;
  }

  public void unsetProductDescription() {
    this.productDescription = null;
  }

  /** Returns true if field productDescription is set (has been assigned a value) and false otherwise */
  public boolean isSetProductDescription() {
    return this.productDescription != null;
  }

  public void setProductDescriptionIsSet(boolean value) {
    if (!value) {
      this.productDescription = null;
    }
  }

  public String getStatus() {
    return this.status;
  }

  public MerchantProductModel setStatus(String status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public String getRiskLevel() {
    return this.riskLevel;
  }

  public MerchantProductModel setRiskLevel(String riskLevel) {
    this.riskLevel = riskLevel;
    return this;
  }

  public void unsetRiskLevel() {
    this.riskLevel = null;
  }

  /** Returns true if field riskLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetRiskLevel() {
    return this.riskLevel != null;
  }

  public void setRiskLevelIsSet(boolean value) {
    if (!value) {
      this.riskLevel = null;
    }
  }

  public String getRemarks() {
    return this.remarks;
  }

  public MerchantProductModel setRemarks(String remarks) {
    this.remarks = remarks;
    return this;
  }

  public void unsetRemarks() {
    this.remarks = null;
  }

  /** Returns true if field remarks is set (has been assigned a value) and false otherwise */
  public boolean isSetRemarks() {
    return this.remarks != null;
  }

  public void setRemarksIsSet(boolean value) {
    if (!value) {
      this.remarks = null;
    }
  }

  public String getCreateUser() {
    return this.createUser;
  }

  public MerchantProductModel setCreateUser(String createUser) {
    this.createUser = createUser;
    return this;
  }

  public void unsetCreateUser() {
    this.createUser = null;
  }

  /** Returns true if field createUser is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateUser() {
    return this.createUser != null;
  }

  public void setCreateUserIsSet(boolean value) {
    if (!value) {
      this.createUser = null;
    }
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public MerchantProductModel setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  public String getModifyUser() {
    return this.modifyUser;
  }

  public MerchantProductModel setModifyUser(String modifyUser) {
    this.modifyUser = modifyUser;
    return this;
  }

  public void unsetModifyUser() {
    this.modifyUser = null;
  }

  /** Returns true if field modifyUser is set (has been assigned a value) and false otherwise */
  public boolean isSetModifyUser() {
    return this.modifyUser != null;
  }

  public void setModifyUserIsSet(boolean value) {
    if (!value) {
      this.modifyUser = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((String)value);
      }
      break;

    case PRODUCT_CODE:
      if (value == null) {
        unsetProductCode();
      } else {
        setProductCode((String)value);
      }
      break;

    case PRODUCT_NAME:
      if (value == null) {
        unsetProductName();
      } else {
        setProductName((String)value);
      }
      break;

    case PRODUCT_DESCRIPTION:
      if (value == null) {
        unsetProductDescription();
      } else {
        setProductDescription((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((String)value);
      }
      break;

    case RISK_LEVEL:
      if (value == null) {
        unsetRiskLevel();
      } else {
        setRiskLevel((String)value);
      }
      break;

    case REMARKS:
      if (value == null) {
        unsetRemarks();
      } else {
        setRemarks((String)value);
      }
      break;

    case CREATE_USER:
      if (value == null) {
        unsetCreateUser();
      } else {
        setCreateUser((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case MODIFY_USER:
      if (value == null) {
        unsetModifyUser();
      } else {
        setModifyUser((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return getId();

    case PRODUCT_CODE:
      return getProductCode();

    case PRODUCT_NAME:
      return getProductName();

    case PRODUCT_DESCRIPTION:
      return getProductDescription();

    case STATUS:
      return getStatus();

    case RISK_LEVEL:
      return getRiskLevel();

    case REMARKS:
      return getRemarks();

    case CREATE_USER:
      return getCreateUser();

    case CREATE_TIME:
      return getCreateTime();

    case MODIFY_USER:
      return getModifyUser();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case PRODUCT_CODE:
      return isSetProductCode();
    case PRODUCT_NAME:
      return isSetProductName();
    case PRODUCT_DESCRIPTION:
      return isSetProductDescription();
    case STATUS:
      return isSetStatus();
    case RISK_LEVEL:
      return isSetRiskLevel();
    case REMARKS:
      return isSetRemarks();
    case CREATE_USER:
      return isSetCreateUser();
    case CREATE_TIME:
      return isSetCreateTime();
    case MODIFY_USER:
      return isSetModifyUser();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MerchantProductModel)
      return this.equals((MerchantProductModel)that);
    return false;
  }

  public boolean equals(MerchantProductModel that) {
    if (that == null)
      return false;

    boolean this_present_id = true && this.isSetId();
    boolean that_present_id = true && that.isSetId();
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (!this.id.equals(that.id))
        return false;
    }

    boolean this_present_productCode = true && this.isSetProductCode();
    boolean that_present_productCode = true && that.isSetProductCode();
    if (this_present_productCode || that_present_productCode) {
      if (!(this_present_productCode && that_present_productCode))
        return false;
      if (!this.productCode.equals(that.productCode))
        return false;
    }

    boolean this_present_productName = true && this.isSetProductName();
    boolean that_present_productName = true && that.isSetProductName();
    if (this_present_productName || that_present_productName) {
      if (!(this_present_productName && that_present_productName))
        return false;
      if (!this.productName.equals(that.productName))
        return false;
    }

    boolean this_present_productDescription = true && this.isSetProductDescription();
    boolean that_present_productDescription = true && that.isSetProductDescription();
    if (this_present_productDescription || that_present_productDescription) {
      if (!(this_present_productDescription && that_present_productDescription))
        return false;
      if (!this.productDescription.equals(that.productDescription))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_riskLevel = true && this.isSetRiskLevel();
    boolean that_present_riskLevel = true && that.isSetRiskLevel();
    if (this_present_riskLevel || that_present_riskLevel) {
      if (!(this_present_riskLevel && that_present_riskLevel))
        return false;
      if (!this.riskLevel.equals(that.riskLevel))
        return false;
    }

    boolean this_present_remarks = true && this.isSetRemarks();
    boolean that_present_remarks = true && that.isSetRemarks();
    if (this_present_remarks || that_present_remarks) {
      if (!(this_present_remarks && that_present_remarks))
        return false;
      if (!this.remarks.equals(that.remarks))
        return false;
    }

    boolean this_present_createUser = true && this.isSetCreateUser();
    boolean that_present_createUser = true && that.isSetCreateUser();
    if (this_present_createUser || that_present_createUser) {
      if (!(this_present_createUser && that_present_createUser))
        return false;
      if (!this.createUser.equals(that.createUser))
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_modifyUser = true && this.isSetModifyUser();
    boolean that_present_modifyUser = true && that.isSetModifyUser();
    if (this_present_modifyUser || that_present_modifyUser) {
      if (!(this_present_modifyUser && that_present_modifyUser))
        return false;
      if (!this.modifyUser.equals(that.modifyUser))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true && (isSetId());
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_productCode = true && (isSetProductCode());
    list.add(present_productCode);
    if (present_productCode)
      list.add(productCode);

    boolean present_productName = true && (isSetProductName());
    list.add(present_productName);
    if (present_productName)
      list.add(productName);

    boolean present_productDescription = true && (isSetProductDescription());
    list.add(present_productDescription);
    if (present_productDescription)
      list.add(productDescription);

    boolean present_status = true && (isSetStatus());
    list.add(present_status);
    if (present_status)
      list.add(status);

    boolean present_riskLevel = true && (isSetRiskLevel());
    list.add(present_riskLevel);
    if (present_riskLevel)
      list.add(riskLevel);

    boolean present_remarks = true && (isSetRemarks());
    list.add(present_remarks);
    if (present_remarks)
      list.add(remarks);

    boolean present_createUser = true && (isSetCreateUser());
    list.add(present_createUser);
    if (present_createUser)
      list.add(createUser);

    boolean present_createTime = true;
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_modifyUser = true && (isSetModifyUser());
    list.add(present_modifyUser);
    if (present_modifyUser)
      list.add(modifyUser);

    return list.hashCode();
  }

  @Override
  public int compareTo(MerchantProductModel other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductCode()).compareTo(other.isSetProductCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productCode, other.productCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductName()).compareTo(other.isSetProductName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productName, other.productName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductDescription()).compareTo(other.isSetProductDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productDescription, other.productDescription);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRiskLevel()).compareTo(other.isSetRiskLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRiskLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.riskLevel, other.riskLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRemarks()).compareTo(other.isSetRemarks());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemarks()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remarks, other.remarks);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateUser()).compareTo(other.isSetCreateUser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateUser()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createUser, other.createUser);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetModifyUser()).compareTo(other.isSetModifyUser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetModifyUser()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.modifyUser, other.modifyUser);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MerchantProductModel(");
    boolean first = true;

    sb.append("id:");
    if (this.id == null) {
      sb.append("null");
    } else {
      sb.append(this.id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productCode:");
    if (this.productCode == null) {
      sb.append("null");
    } else {
      sb.append(this.productCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productName:");
    if (this.productName == null) {
      sb.append("null");
    } else {
      sb.append(this.productName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productDescription:");
    if (this.productDescription == null) {
      sb.append("null");
    } else {
      sb.append(this.productDescription);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("status:");
    if (this.status == null) {
      sb.append("null");
    } else {
      sb.append(this.status);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("riskLevel:");
    if (this.riskLevel == null) {
      sb.append("null");
    } else {
      sb.append(this.riskLevel);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("remarks:");
    if (this.remarks == null) {
      sb.append("null");
    } else {
      sb.append(this.remarks);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createUser:");
    if (this.createUser == null) {
      sb.append("null");
    } else {
      sb.append(this.createUser);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("modifyUser:");
    if (this.modifyUser == null) {
      sb.append("null");
    } else {
      sb.append(this.modifyUser);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MerchantProductModelStandardSchemeFactory implements SchemeFactory {
    public MerchantProductModelStandardScheme getScheme() {
      return new MerchantProductModelStandardScheme();
    }
  }

  private static class MerchantProductModelStandardScheme extends StandardScheme<MerchantProductModel> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MerchantProductModel struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.id = iprot.readString();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PRODUCT_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productCode = iprot.readString();
              struct.setProductCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PRODUCT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productName = iprot.readString();
              struct.setProductNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PRODUCT_DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productDescription = iprot.readString();
              struct.setProductDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.status = iprot.readString();
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // RISK_LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.riskLevel = iprot.readString();
              struct.setRiskLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // REMARKS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.remarks = iprot.readString();
              struct.setRemarksIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CREATE_USER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createUser = iprot.readString();
              struct.setCreateUserIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // MODIFY_USER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.modifyUser = iprot.readString();
              struct.setModifyUserIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MerchantProductModel struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.id != null) {
        oprot.writeFieldBegin(ID_FIELD_DESC);
        oprot.writeString(struct.id);
        oprot.writeFieldEnd();
      }
      if (struct.productCode != null) {
        oprot.writeFieldBegin(PRODUCT_CODE_FIELD_DESC);
        oprot.writeString(struct.productCode);
        oprot.writeFieldEnd();
      }
      if (struct.productName != null) {
        oprot.writeFieldBegin(PRODUCT_NAME_FIELD_DESC);
        oprot.writeString(struct.productName);
        oprot.writeFieldEnd();
      }
      if (struct.productDescription != null) {
        oprot.writeFieldBegin(PRODUCT_DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.productDescription);
        oprot.writeFieldEnd();
      }
      if (struct.status != null) {
        oprot.writeFieldBegin(STATUS_FIELD_DESC);
        oprot.writeString(struct.status);
        oprot.writeFieldEnd();
      }
      if (struct.riskLevel != null) {
        oprot.writeFieldBegin(RISK_LEVEL_FIELD_DESC);
        oprot.writeString(struct.riskLevel);
        oprot.writeFieldEnd();
      }
      if (struct.remarks != null) {
        oprot.writeFieldBegin(REMARKS_FIELD_DESC);
        oprot.writeString(struct.remarks);
        oprot.writeFieldEnd();
      }
      if (struct.createUser != null) {
        oprot.writeFieldBegin(CREATE_USER_FIELD_DESC);
        oprot.writeString(struct.createUser);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      if (struct.modifyUser != null) {
        oprot.writeFieldBegin(MODIFY_USER_FIELD_DESC);
        oprot.writeString(struct.modifyUser);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MerchantProductModelTupleSchemeFactory implements SchemeFactory {
    public MerchantProductModelTupleScheme getScheme() {
      return new MerchantProductModelTupleScheme();
    }
  }

  private static class MerchantProductModelTupleScheme extends TupleScheme<MerchantProductModel> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MerchantProductModel struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetProductCode()) {
        optionals.set(1);
      }
      if (struct.isSetProductName()) {
        optionals.set(2);
      }
      if (struct.isSetProductDescription()) {
        optionals.set(3);
      }
      if (struct.isSetStatus()) {
        optionals.set(4);
      }
      if (struct.isSetRiskLevel()) {
        optionals.set(5);
      }
      if (struct.isSetRemarks()) {
        optionals.set(6);
      }
      if (struct.isSetCreateUser()) {
        optionals.set(7);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(8);
      }
      if (struct.isSetModifyUser()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetId()) {
        oprot.writeString(struct.id);
      }
      if (struct.isSetProductCode()) {
        oprot.writeString(struct.productCode);
      }
      if (struct.isSetProductName()) {
        oprot.writeString(struct.productName);
      }
      if (struct.isSetProductDescription()) {
        oprot.writeString(struct.productDescription);
      }
      if (struct.isSetStatus()) {
        oprot.writeString(struct.status);
      }
      if (struct.isSetRiskLevel()) {
        oprot.writeString(struct.riskLevel);
      }
      if (struct.isSetRemarks()) {
        oprot.writeString(struct.remarks);
      }
      if (struct.isSetCreateUser()) {
        oprot.writeString(struct.createUser);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetModifyUser()) {
        oprot.writeString(struct.modifyUser);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MerchantProductModel struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.id = iprot.readString();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.productCode = iprot.readString();
        struct.setProductCodeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.productName = iprot.readString();
        struct.setProductNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.productDescription = iprot.readString();
        struct.setProductDescriptionIsSet(true);
      }
      if (incoming.get(4)) {
        struct.status = iprot.readString();
        struct.setStatusIsSet(true);
      }
      if (incoming.get(5)) {
        struct.riskLevel = iprot.readString();
        struct.setRiskLevelIsSet(true);
      }
      if (incoming.get(6)) {
        struct.remarks = iprot.readString();
        struct.setRemarksIsSet(true);
      }
      if (incoming.get(7)) {
        struct.createUser = iprot.readString();
        struct.setCreateUserIsSet(true);
      }
      if (incoming.get(8)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.modifyUser = iprot.readString();
        struct.setModifyUserIsSet(true);
      }
    }
  }

}

