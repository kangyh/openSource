/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.heepay.rpc.boss.model;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2017-06-01")
public class BillingClearModel implements org.apache.thrift.TBase<BillingClearModel, BillingClearModel._Fields>, java.io.Serializable, Cloneable, Comparable<BillingClearModel> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BillingClearModel");

  private static final org.apache.thrift.protocol.TField MERCHANT_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantNo", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TRANS_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("transNo", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField MERCHANT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("merchantId", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField REQUEST_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("requestAmount", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PAY_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("payAmount", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField BANKCARD_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("bankcardType", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField CARDHOLDER_GENDER_FIELD_DESC = new org.apache.thrift.protocol.TField("cardholderGender", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField CHANNEL_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("channelCode", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField CHANNEL_TRANS_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("channelTransType", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField BANK_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("bankCode", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField REQUEST_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("requestStatus", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField REQUEST_IP_FIELD_DESC = new org.apache.thrift.protocol.TField("requestIp", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField PROVINCE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("provinceId", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField REQUEST_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("requestTime", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField PAY_FINISH_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("payFinishTime", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField SETTLE_PART_FIELD_DESC = new org.apache.thrift.protocol.TField("settlePart", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField BANK_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("bankId", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField BANK_SHORT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("bankShortName", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField PRODUCT_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("productCode", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField PRODUCT_NUMBER_FIELD_DESC = new org.apache.thrift.protocol.TField("productNumber", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField PRODUCT_DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("productDescription", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField SETTLE_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("settleAmount", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField SETTLE_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("settleStatus", org.apache.thrift.protocol.TType.STRING, (short)23);
  private static final org.apache.thrift.protocol.TField CREATE_PERSON_FIELD_DESC = new org.apache.thrift.protocol.TField("createPerson", org.apache.thrift.protocol.TType.STRING, (short)24);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField UPDATE_PERSON_FIELD_DESC = new org.apache.thrift.protocol.TField("updatePerson", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField UPDATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("updateTime", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField CHANNLE_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("channleNo", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField FEE_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("feeAmount", org.apache.thrift.protocol.TType.STRING, (short)29);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new BillingClearModelStandardSchemeFactory());
    schemes.put(TupleScheme.class, new BillingClearModelTupleSchemeFactory());
  }

  public String merchantNo; // required
  public String transNo; // required
  public String merchantId; // required
  public String requestAmount; // required
  public String payAmount; // required
  public String bankcardType; // required
  public String cardholderGender; // required
  public String channelCode; // required
  public String channelTransType; // required
  public String bankCode; // required
  public String requestStatus; // required
  public String requestIp; // required
  public String provinceId; // required
  public String requestTime; // required
  public String payFinishTime; // required
  public String settlePart; // required
  public String bankId; // required
  public String bankShortName; // required
  public String productCode; // required
  public String productNumber; // required
  public String productDescription; // required
  public String settleAmount; // required
  public String settleStatus; // required
  public String createPerson; // required
  public String createTime; // required
  public String updatePerson; // required
  public String updateTime; // required
  public String channleNo; // required
  public String feeAmount; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    MERCHANT_NO((short)1, "merchantNo"),
    TRANS_NO((short)2, "transNo"),
    MERCHANT_ID((short)3, "merchantId"),
    REQUEST_AMOUNT((short)4, "requestAmount"),
    PAY_AMOUNT((short)5, "payAmount"),
    BANKCARD_TYPE((short)6, "bankcardType"),
    CARDHOLDER_GENDER((short)7, "cardholderGender"),
    CHANNEL_CODE((short)8, "channelCode"),
    CHANNEL_TRANS_TYPE((short)9, "channelTransType"),
    BANK_CODE((short)10, "bankCode"),
    REQUEST_STATUS((short)11, "requestStatus"),
    REQUEST_IP((short)12, "requestIp"),
    PROVINCE_ID((short)13, "provinceId"),
    REQUEST_TIME((short)14, "requestTime"),
    PAY_FINISH_TIME((short)15, "payFinishTime"),
    SETTLE_PART((short)16, "settlePart"),
    BANK_ID((short)17, "bankId"),
    BANK_SHORT_NAME((short)18, "bankShortName"),
    PRODUCT_CODE((short)19, "productCode"),
    PRODUCT_NUMBER((short)20, "productNumber"),
    PRODUCT_DESCRIPTION((short)21, "productDescription"),
    SETTLE_AMOUNT((short)22, "settleAmount"),
    SETTLE_STATUS((short)23, "settleStatus"),
    CREATE_PERSON((short)24, "createPerson"),
    CREATE_TIME((short)25, "createTime"),
    UPDATE_PERSON((short)26, "updatePerson"),
    UPDATE_TIME((short)27, "updateTime"),
    CHANNLE_NO((short)28, "channleNo"),
    FEE_AMOUNT((short)29, "feeAmount");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // MERCHANT_NO
          return MERCHANT_NO;
        case 2: // TRANS_NO
          return TRANS_NO;
        case 3: // MERCHANT_ID
          return MERCHANT_ID;
        case 4: // REQUEST_AMOUNT
          return REQUEST_AMOUNT;
        case 5: // PAY_AMOUNT
          return PAY_AMOUNT;
        case 6: // BANKCARD_TYPE
          return BANKCARD_TYPE;
        case 7: // CARDHOLDER_GENDER
          return CARDHOLDER_GENDER;
        case 8: // CHANNEL_CODE
          return CHANNEL_CODE;
        case 9: // CHANNEL_TRANS_TYPE
          return CHANNEL_TRANS_TYPE;
        case 10: // BANK_CODE
          return BANK_CODE;
        case 11: // REQUEST_STATUS
          return REQUEST_STATUS;
        case 12: // REQUEST_IP
          return REQUEST_IP;
        case 13: // PROVINCE_ID
          return PROVINCE_ID;
        case 14: // REQUEST_TIME
          return REQUEST_TIME;
        case 15: // PAY_FINISH_TIME
          return PAY_FINISH_TIME;
        case 16: // SETTLE_PART
          return SETTLE_PART;
        case 17: // BANK_ID
          return BANK_ID;
        case 18: // BANK_SHORT_NAME
          return BANK_SHORT_NAME;
        case 19: // PRODUCT_CODE
          return PRODUCT_CODE;
        case 20: // PRODUCT_NUMBER
          return PRODUCT_NUMBER;
        case 21: // PRODUCT_DESCRIPTION
          return PRODUCT_DESCRIPTION;
        case 22: // SETTLE_AMOUNT
          return SETTLE_AMOUNT;
        case 23: // SETTLE_STATUS
          return SETTLE_STATUS;
        case 24: // CREATE_PERSON
          return CREATE_PERSON;
        case 25: // CREATE_TIME
          return CREATE_TIME;
        case 26: // UPDATE_PERSON
          return UPDATE_PERSON;
        case 27: // UPDATE_TIME
          return UPDATE_TIME;
        case 28: // CHANNLE_NO
          return CHANNLE_NO;
        case 29: // FEE_AMOUNT
          return FEE_AMOUNT;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.MERCHANT_NO, new org.apache.thrift.meta_data.FieldMetaData("merchantNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TRANS_NO, new org.apache.thrift.meta_data.FieldMetaData("transNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MERCHANT_ID, new org.apache.thrift.meta_data.FieldMetaData("merchantId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REQUEST_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("requestAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAY_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("payAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANKCARD_TYPE, new org.apache.thrift.meta_data.FieldMetaData("bankcardType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CARDHOLDER_GENDER, new org.apache.thrift.meta_data.FieldMetaData("cardholderGender", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHANNEL_CODE, new org.apache.thrift.meta_data.FieldMetaData("channelCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHANNEL_TRANS_TYPE, new org.apache.thrift.meta_data.FieldMetaData("channelTransType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_CODE, new org.apache.thrift.meta_data.FieldMetaData("bankCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REQUEST_STATUS, new org.apache.thrift.meta_data.FieldMetaData("requestStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REQUEST_IP, new org.apache.thrift.meta_data.FieldMetaData("requestIp", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROVINCE_ID, new org.apache.thrift.meta_data.FieldMetaData("provinceId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REQUEST_TIME, new org.apache.thrift.meta_data.FieldMetaData("requestTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAY_FINISH_TIME, new org.apache.thrift.meta_data.FieldMetaData("payFinishTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLE_PART, new org.apache.thrift.meta_data.FieldMetaData("settlePart", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_ID, new org.apache.thrift.meta_data.FieldMetaData("bankId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BANK_SHORT_NAME, new org.apache.thrift.meta_data.FieldMetaData("bankShortName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_CODE, new org.apache.thrift.meta_data.FieldMetaData("productCode", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_NUMBER, new org.apache.thrift.meta_data.FieldMetaData("productNumber", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("productDescription", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLE_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("settleAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SETTLE_STATUS, new org.apache.thrift.meta_data.FieldMetaData("settleStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_PERSON, new org.apache.thrift.meta_data.FieldMetaData("createPerson", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_PERSON, new org.apache.thrift.meta_data.FieldMetaData("updatePerson", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UPDATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("updateTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHANNLE_NO, new org.apache.thrift.meta_data.FieldMetaData("channleNo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FEE_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("feeAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BillingClearModel.class, metaDataMap);
  }

  public BillingClearModel() {
  }

  public BillingClearModel(
    String merchantNo,
    String transNo,
    String merchantId,
    String requestAmount,
    String payAmount,
    String bankcardType,
    String cardholderGender,
    String channelCode,
    String channelTransType,
    String bankCode,
    String requestStatus,
    String requestIp,
    String provinceId,
    String requestTime,
    String payFinishTime,
    String settlePart,
    String bankId,
    String bankShortName,
    String productCode,
    String productNumber,
    String productDescription,
    String settleAmount,
    String settleStatus,
    String createPerson,
    String createTime,
    String updatePerson,
    String updateTime,
    String channleNo,
    String feeAmount)
  {
    this();
    this.merchantNo = merchantNo;
    this.transNo = transNo;
    this.merchantId = merchantId;
    this.requestAmount = requestAmount;
    this.payAmount = payAmount;
    this.bankcardType = bankcardType;
    this.cardholderGender = cardholderGender;
    this.channelCode = channelCode;
    this.channelTransType = channelTransType;
    this.bankCode = bankCode;
    this.requestStatus = requestStatus;
    this.requestIp = requestIp;
    this.provinceId = provinceId;
    this.requestTime = requestTime;
    this.payFinishTime = payFinishTime;
    this.settlePart = settlePart;
    this.bankId = bankId;
    this.bankShortName = bankShortName;
    this.productCode = productCode;
    this.productNumber = productNumber;
    this.productDescription = productDescription;
    this.settleAmount = settleAmount;
    this.settleStatus = settleStatus;
    this.createPerson = createPerson;
    this.createTime = createTime;
    this.updatePerson = updatePerson;
    this.updateTime = updateTime;
    this.channleNo = channleNo;
    this.feeAmount = feeAmount;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BillingClearModel(BillingClearModel other) {
    if (other.isSetMerchantNo()) {
      this.merchantNo = other.merchantNo;
    }
    if (other.isSetTransNo()) {
      this.transNo = other.transNo;
    }
    if (other.isSetMerchantId()) {
      this.merchantId = other.merchantId;
    }
    if (other.isSetRequestAmount()) {
      this.requestAmount = other.requestAmount;
    }
    if (other.isSetPayAmount()) {
      this.payAmount = other.payAmount;
    }
    if (other.isSetBankcardType()) {
      this.bankcardType = other.bankcardType;
    }
    if (other.isSetCardholderGender()) {
      this.cardholderGender = other.cardholderGender;
    }
    if (other.isSetChannelCode()) {
      this.channelCode = other.channelCode;
    }
    if (other.isSetChannelTransType()) {
      this.channelTransType = other.channelTransType;
    }
    if (other.isSetBankCode()) {
      this.bankCode = other.bankCode;
    }
    if (other.isSetRequestStatus()) {
      this.requestStatus = other.requestStatus;
    }
    if (other.isSetRequestIp()) {
      this.requestIp = other.requestIp;
    }
    if (other.isSetProvinceId()) {
      this.provinceId = other.provinceId;
    }
    if (other.isSetRequestTime()) {
      this.requestTime = other.requestTime;
    }
    if (other.isSetPayFinishTime()) {
      this.payFinishTime = other.payFinishTime;
    }
    if (other.isSetSettlePart()) {
      this.settlePart = other.settlePart;
    }
    if (other.isSetBankId()) {
      this.bankId = other.bankId;
    }
    if (other.isSetBankShortName()) {
      this.bankShortName = other.bankShortName;
    }
    if (other.isSetProductCode()) {
      this.productCode = other.productCode;
    }
    if (other.isSetProductNumber()) {
      this.productNumber = other.productNumber;
    }
    if (other.isSetProductDescription()) {
      this.productDescription = other.productDescription;
    }
    if (other.isSetSettleAmount()) {
      this.settleAmount = other.settleAmount;
    }
    if (other.isSetSettleStatus()) {
      this.settleStatus = other.settleStatus;
    }
    if (other.isSetCreatePerson()) {
      this.createPerson = other.createPerson;
    }
    if (other.isSetCreateTime()) {
      this.createTime = other.createTime;
    }
    if (other.isSetUpdatePerson()) {
      this.updatePerson = other.updatePerson;
    }
    if (other.isSetUpdateTime()) {
      this.updateTime = other.updateTime;
    }
    if (other.isSetChannleNo()) {
      this.channleNo = other.channleNo;
    }
    if (other.isSetFeeAmount()) {
      this.feeAmount = other.feeAmount;
    }
  }

  public BillingClearModel deepCopy() {
    return new BillingClearModel(this);
  }

  @Override
  public void clear() {
    this.merchantNo = null;
    this.transNo = null;
    this.merchantId = null;
    this.requestAmount = null;
    this.payAmount = null;
    this.bankcardType = null;
    this.cardholderGender = null;
    this.channelCode = null;
    this.channelTransType = null;
    this.bankCode = null;
    this.requestStatus = null;
    this.requestIp = null;
    this.provinceId = null;
    this.requestTime = null;
    this.payFinishTime = null;
    this.settlePart = null;
    this.bankId = null;
    this.bankShortName = null;
    this.productCode = null;
    this.productNumber = null;
    this.productDescription = null;
    this.settleAmount = null;
    this.settleStatus = null;
    this.createPerson = null;
    this.createTime = null;
    this.updatePerson = null;
    this.updateTime = null;
    this.channleNo = null;
    this.feeAmount = null;
  }

  public String getMerchantNo() {
    return this.merchantNo;
  }

  public BillingClearModel setMerchantNo(String merchantNo) {
    this.merchantNo = merchantNo;
    return this;
  }

  public void unsetMerchantNo() {
    this.merchantNo = null;
  }

  /** Returns true if field merchantNo is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantNo() {
    return this.merchantNo != null;
  }

  public void setMerchantNoIsSet(boolean value) {
    if (!value) {
      this.merchantNo = null;
    }
  }

  public String getTransNo() {
    return this.transNo;
  }

  public BillingClearModel setTransNo(String transNo) {
    this.transNo = transNo;
    return this;
  }

  public void unsetTransNo() {
    this.transNo = null;
  }

  /** Returns true if field transNo is set (has been assigned a value) and false otherwise */
  public boolean isSetTransNo() {
    return this.transNo != null;
  }

  public void setTransNoIsSet(boolean value) {
    if (!value) {
      this.transNo = null;
    }
  }

  public String getMerchantId() {
    return this.merchantId;
  }

  public BillingClearModel setMerchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

  public void unsetMerchantId() {
    this.merchantId = null;
  }

  /** Returns true if field merchantId is set (has been assigned a value) and false otherwise */
  public boolean isSetMerchantId() {
    return this.merchantId != null;
  }

  public void setMerchantIdIsSet(boolean value) {
    if (!value) {
      this.merchantId = null;
    }
  }

  public String getRequestAmount() {
    return this.requestAmount;
  }

  public BillingClearModel setRequestAmount(String requestAmount) {
    this.requestAmount = requestAmount;
    return this;
  }

  public void unsetRequestAmount() {
    this.requestAmount = null;
  }

  /** Returns true if field requestAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestAmount() {
    return this.requestAmount != null;
  }

  public void setRequestAmountIsSet(boolean value) {
    if (!value) {
      this.requestAmount = null;
    }
  }

  public String getPayAmount() {
    return this.payAmount;
  }

  public BillingClearModel setPayAmount(String payAmount) {
    this.payAmount = payAmount;
    return this;
  }

  public void unsetPayAmount() {
    this.payAmount = null;
  }

  /** Returns true if field payAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetPayAmount() {
    return this.payAmount != null;
  }

  public void setPayAmountIsSet(boolean value) {
    if (!value) {
      this.payAmount = null;
    }
  }

  public String getBankcardType() {
    return this.bankcardType;
  }

  public BillingClearModel setBankcardType(String bankcardType) {
    this.bankcardType = bankcardType;
    return this;
  }

  public void unsetBankcardType() {
    this.bankcardType = null;
  }

  /** Returns true if field bankcardType is set (has been assigned a value) and false otherwise */
  public boolean isSetBankcardType() {
    return this.bankcardType != null;
  }

  public void setBankcardTypeIsSet(boolean value) {
    if (!value) {
      this.bankcardType = null;
    }
  }

  public String getCardholderGender() {
    return this.cardholderGender;
  }

  public BillingClearModel setCardholderGender(String cardholderGender) {
    this.cardholderGender = cardholderGender;
    return this;
  }

  public void unsetCardholderGender() {
    this.cardholderGender = null;
  }

  /** Returns true if field cardholderGender is set (has been assigned a value) and false otherwise */
  public boolean isSetCardholderGender() {
    return this.cardholderGender != null;
  }

  public void setCardholderGenderIsSet(boolean value) {
    if (!value) {
      this.cardholderGender = null;
    }
  }

  public String getChannelCode() {
    return this.channelCode;
  }

  public BillingClearModel setChannelCode(String channelCode) {
    this.channelCode = channelCode;
    return this;
  }

  public void unsetChannelCode() {
    this.channelCode = null;
  }

  /** Returns true if field channelCode is set (has been assigned a value) and false otherwise */
  public boolean isSetChannelCode() {
    return this.channelCode != null;
  }

  public void setChannelCodeIsSet(boolean value) {
    if (!value) {
      this.channelCode = null;
    }
  }

  public String getChannelTransType() {
    return this.channelTransType;
  }

  public BillingClearModel setChannelTransType(String channelTransType) {
    this.channelTransType = channelTransType;
    return this;
  }

  public void unsetChannelTransType() {
    this.channelTransType = null;
  }

  /** Returns true if field channelTransType is set (has been assigned a value) and false otherwise */
  public boolean isSetChannelTransType() {
    return this.channelTransType != null;
  }

  public void setChannelTransTypeIsSet(boolean value) {
    if (!value) {
      this.channelTransType = null;
    }
  }

  public String getBankCode() {
    return this.bankCode;
  }

  public BillingClearModel setBankCode(String bankCode) {
    this.bankCode = bankCode;
    return this;
  }

  public void unsetBankCode() {
    this.bankCode = null;
  }

  /** Returns true if field bankCode is set (has been assigned a value) and false otherwise */
  public boolean isSetBankCode() {
    return this.bankCode != null;
  }

  public void setBankCodeIsSet(boolean value) {
    if (!value) {
      this.bankCode = null;
    }
  }

  public String getRequestStatus() {
    return this.requestStatus;
  }

  public BillingClearModel setRequestStatus(String requestStatus) {
    this.requestStatus = requestStatus;
    return this;
  }

  public void unsetRequestStatus() {
    this.requestStatus = null;
  }

  /** Returns true if field requestStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestStatus() {
    return this.requestStatus != null;
  }

  public void setRequestStatusIsSet(boolean value) {
    if (!value) {
      this.requestStatus = null;
    }
  }

  public String getRequestIp() {
    return this.requestIp;
  }

  public BillingClearModel setRequestIp(String requestIp) {
    this.requestIp = requestIp;
    return this;
  }

  public void unsetRequestIp() {
    this.requestIp = null;
  }

  /** Returns true if field requestIp is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestIp() {
    return this.requestIp != null;
  }

  public void setRequestIpIsSet(boolean value) {
    if (!value) {
      this.requestIp = null;
    }
  }

  public String getProvinceId() {
    return this.provinceId;
  }

  public BillingClearModel setProvinceId(String provinceId) {
    this.provinceId = provinceId;
    return this;
  }

  public void unsetProvinceId() {
    this.provinceId = null;
  }

  /** Returns true if field provinceId is set (has been assigned a value) and false otherwise */
  public boolean isSetProvinceId() {
    return this.provinceId != null;
  }

  public void setProvinceIdIsSet(boolean value) {
    if (!value) {
      this.provinceId = null;
    }
  }

  public String getRequestTime() {
    return this.requestTime;
  }

  public BillingClearModel setRequestTime(String requestTime) {
    this.requestTime = requestTime;
    return this;
  }

  public void unsetRequestTime() {
    this.requestTime = null;
  }

  /** Returns true if field requestTime is set (has been assigned a value) and false otherwise */
  public boolean isSetRequestTime() {
    return this.requestTime != null;
  }

  public void setRequestTimeIsSet(boolean value) {
    if (!value) {
      this.requestTime = null;
    }
  }

  public String getPayFinishTime() {
    return this.payFinishTime;
  }

  public BillingClearModel setPayFinishTime(String payFinishTime) {
    this.payFinishTime = payFinishTime;
    return this;
  }

  public void unsetPayFinishTime() {
    this.payFinishTime = null;
  }

  /** Returns true if field payFinishTime is set (has been assigned a value) and false otherwise */
  public boolean isSetPayFinishTime() {
    return this.payFinishTime != null;
  }

  public void setPayFinishTimeIsSet(boolean value) {
    if (!value) {
      this.payFinishTime = null;
    }
  }

  public String getSettlePart() {
    return this.settlePart;
  }

  public BillingClearModel setSettlePart(String settlePart) {
    this.settlePart = settlePart;
    return this;
  }

  public void unsetSettlePart() {
    this.settlePart = null;
  }

  /** Returns true if field settlePart is set (has been assigned a value) and false otherwise */
  public boolean isSetSettlePart() {
    return this.settlePart != null;
  }

  public void setSettlePartIsSet(boolean value) {
    if (!value) {
      this.settlePart = null;
    }
  }

  public String getBankId() {
    return this.bankId;
  }

  public BillingClearModel setBankId(String bankId) {
    this.bankId = bankId;
    return this;
  }

  public void unsetBankId() {
    this.bankId = null;
  }

  /** Returns true if field bankId is set (has been assigned a value) and false otherwise */
  public boolean isSetBankId() {
    return this.bankId != null;
  }

  public void setBankIdIsSet(boolean value) {
    if (!value) {
      this.bankId = null;
    }
  }

  public String getBankShortName() {
    return this.bankShortName;
  }

  public BillingClearModel setBankShortName(String bankShortName) {
    this.bankShortName = bankShortName;
    return this;
  }

  public void unsetBankShortName() {
    this.bankShortName = null;
  }

  /** Returns true if field bankShortName is set (has been assigned a value) and false otherwise */
  public boolean isSetBankShortName() {
    return this.bankShortName != null;
  }

  public void setBankShortNameIsSet(boolean value) {
    if (!value) {
      this.bankShortName = null;
    }
  }

  public String getProductCode() {
    return this.productCode;
  }

  public BillingClearModel setProductCode(String productCode) {
    this.productCode = productCode;
    return this;
  }

  public void unsetProductCode() {
    this.productCode = null;
  }

  /** Returns true if field productCode is set (has been assigned a value) and false otherwise */
  public boolean isSetProductCode() {
    return this.productCode != null;
  }

  public void setProductCodeIsSet(boolean value) {
    if (!value) {
      this.productCode = null;
    }
  }

  public String getProductNumber() {
    return this.productNumber;
  }

  public BillingClearModel setProductNumber(String productNumber) {
    this.productNumber = productNumber;
    return this;
  }

  public void unsetProductNumber() {
    this.productNumber = null;
  }

  /** Returns true if field productNumber is set (has been assigned a value) and false otherwise */
  public boolean isSetProductNumber() {
    return this.productNumber != null;
  }

  public void setProductNumberIsSet(boolean value) {
    if (!value) {
      this.productNumber = null;
    }
  }

  public String getProductDescription() {
    return this.productDescription;
  }

  public BillingClearModel setProductDescription(String productDescription) {
    this.productDescription = productDescription;
    return this;
  }

  public void unsetProductDescription() {
    this.productDescription = null;
  }

  /** Returns true if field productDescription is set (has been assigned a value) and false otherwise */
  public boolean isSetProductDescription() {
    return this.productDescription != null;
  }

  public void setProductDescriptionIsSet(boolean value) {
    if (!value) {
      this.productDescription = null;
    }
  }

  public String getSettleAmount() {
    return this.settleAmount;
  }

  public BillingClearModel setSettleAmount(String settleAmount) {
    this.settleAmount = settleAmount;
    return this;
  }

  public void unsetSettleAmount() {
    this.settleAmount = null;
  }

  /** Returns true if field settleAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleAmount() {
    return this.settleAmount != null;
  }

  public void setSettleAmountIsSet(boolean value) {
    if (!value) {
      this.settleAmount = null;
    }
  }

  public String getSettleStatus() {
    return this.settleStatus;
  }

  public BillingClearModel setSettleStatus(String settleStatus) {
    this.settleStatus = settleStatus;
    return this;
  }

  public void unsetSettleStatus() {
    this.settleStatus = null;
  }

  /** Returns true if field settleStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetSettleStatus() {
    return this.settleStatus != null;
  }

  public void setSettleStatusIsSet(boolean value) {
    if (!value) {
      this.settleStatus = null;
    }
  }

  public String getCreatePerson() {
    return this.createPerson;
  }

  public BillingClearModel setCreatePerson(String createPerson) {
    this.createPerson = createPerson;
    return this;
  }

  public void unsetCreatePerson() {
    this.createPerson = null;
  }

  /** Returns true if field createPerson is set (has been assigned a value) and false otherwise */
  public boolean isSetCreatePerson() {
    return this.createPerson != null;
  }

  public void setCreatePersonIsSet(boolean value) {
    if (!value) {
      this.createPerson = null;
    }
  }

  public String getCreateTime() {
    return this.createTime;
  }

  public BillingClearModel setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public String getUpdatePerson() {
    return this.updatePerson;
  }

  public BillingClearModel setUpdatePerson(String updatePerson) {
    this.updatePerson = updatePerson;
    return this;
  }

  public void unsetUpdatePerson() {
    this.updatePerson = null;
  }

  /** Returns true if field updatePerson is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdatePerson() {
    return this.updatePerson != null;
  }

  public void setUpdatePersonIsSet(boolean value) {
    if (!value) {
      this.updatePerson = null;
    }
  }

  public String getUpdateTime() {
    return this.updateTime;
  }

  public BillingClearModel setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  public void unsetUpdateTime() {
    this.updateTime = null;
  }

  /** Returns true if field updateTime is set (has been assigned a value) and false otherwise */
  public boolean isSetUpdateTime() {
    return this.updateTime != null;
  }

  public void setUpdateTimeIsSet(boolean value) {
    if (!value) {
      this.updateTime = null;
    }
  }

  public String getChannleNo() {
    return this.channleNo;
  }

  public BillingClearModel setChannleNo(String channleNo) {
    this.channleNo = channleNo;
    return this;
  }

  public void unsetChannleNo() {
    this.channleNo = null;
  }

  /** Returns true if field channleNo is set (has been assigned a value) and false otherwise */
  public boolean isSetChannleNo() {
    return this.channleNo != null;
  }

  public void setChannleNoIsSet(boolean value) {
    if (!value) {
      this.channleNo = null;
    }
  }

  public String getFeeAmount() {
    return this.feeAmount;
  }

  public BillingClearModel setFeeAmount(String feeAmount) {
    this.feeAmount = feeAmount;
    return this;
  }

  public void unsetFeeAmount() {
    this.feeAmount = null;
  }

  /** Returns true if field feeAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetFeeAmount() {
    return this.feeAmount != null;
  }

  public void setFeeAmountIsSet(boolean value) {
    if (!value) {
      this.feeAmount = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case MERCHANT_NO:
      if (value == null) {
        unsetMerchantNo();
      } else {
        setMerchantNo((String)value);
      }
      break;

    case TRANS_NO:
      if (value == null) {
        unsetTransNo();
      } else {
        setTransNo((String)value);
      }
      break;

    case MERCHANT_ID:
      if (value == null) {
        unsetMerchantId();
      } else {
        setMerchantId((String)value);
      }
      break;

    case REQUEST_AMOUNT:
      if (value == null) {
        unsetRequestAmount();
      } else {
        setRequestAmount((String)value);
      }
      break;

    case PAY_AMOUNT:
      if (value == null) {
        unsetPayAmount();
      } else {
        setPayAmount((String)value);
      }
      break;

    case BANKCARD_TYPE:
      if (value == null) {
        unsetBankcardType();
      } else {
        setBankcardType((String)value);
      }
      break;

    case CARDHOLDER_GENDER:
      if (value == null) {
        unsetCardholderGender();
      } else {
        setCardholderGender((String)value);
      }
      break;

    case CHANNEL_CODE:
      if (value == null) {
        unsetChannelCode();
      } else {
        setChannelCode((String)value);
      }
      break;

    case CHANNEL_TRANS_TYPE:
      if (value == null) {
        unsetChannelTransType();
      } else {
        setChannelTransType((String)value);
      }
      break;

    case BANK_CODE:
      if (value == null) {
        unsetBankCode();
      } else {
        setBankCode((String)value);
      }
      break;

    case REQUEST_STATUS:
      if (value == null) {
        unsetRequestStatus();
      } else {
        setRequestStatus((String)value);
      }
      break;

    case REQUEST_IP:
      if (value == null) {
        unsetRequestIp();
      } else {
        setRequestIp((String)value);
      }
      break;

    case PROVINCE_ID:
      if (value == null) {
        unsetProvinceId();
      } else {
        setProvinceId((String)value);
      }
      break;

    case REQUEST_TIME:
      if (value == null) {
        unsetRequestTime();
      } else {
        setRequestTime((String)value);
      }
      break;

    case PAY_FINISH_TIME:
      if (value == null) {
        unsetPayFinishTime();
      } else {
        setPayFinishTime((String)value);
      }
      break;

    case SETTLE_PART:
      if (value == null) {
        unsetSettlePart();
      } else {
        setSettlePart((String)value);
      }
      break;

    case BANK_ID:
      if (value == null) {
        unsetBankId();
      } else {
        setBankId((String)value);
      }
      break;

    case BANK_SHORT_NAME:
      if (value == null) {
        unsetBankShortName();
      } else {
        setBankShortName((String)value);
      }
      break;

    case PRODUCT_CODE:
      if (value == null) {
        unsetProductCode();
      } else {
        setProductCode((String)value);
      }
      break;

    case PRODUCT_NUMBER:
      if (value == null) {
        unsetProductNumber();
      } else {
        setProductNumber((String)value);
      }
      break;

    case PRODUCT_DESCRIPTION:
      if (value == null) {
        unsetProductDescription();
      } else {
        setProductDescription((String)value);
      }
      break;

    case SETTLE_AMOUNT:
      if (value == null) {
        unsetSettleAmount();
      } else {
        setSettleAmount((String)value);
      }
      break;

    case SETTLE_STATUS:
      if (value == null) {
        unsetSettleStatus();
      } else {
        setSettleStatus((String)value);
      }
      break;

    case CREATE_PERSON:
      if (value == null) {
        unsetCreatePerson();
      } else {
        setCreatePerson((String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((String)value);
      }
      break;

    case UPDATE_PERSON:
      if (value == null) {
        unsetUpdatePerson();
      } else {
        setUpdatePerson((String)value);
      }
      break;

    case UPDATE_TIME:
      if (value == null) {
        unsetUpdateTime();
      } else {
        setUpdateTime((String)value);
      }
      break;

    case CHANNLE_NO:
      if (value == null) {
        unsetChannleNo();
      } else {
        setChannleNo((String)value);
      }
      break;

    case FEE_AMOUNT:
      if (value == null) {
        unsetFeeAmount();
      } else {
        setFeeAmount((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case MERCHANT_NO:
      return getMerchantNo();

    case TRANS_NO:
      return getTransNo();

    case MERCHANT_ID:
      return getMerchantId();

    case REQUEST_AMOUNT:
      return getRequestAmount();

    case PAY_AMOUNT:
      return getPayAmount();

    case BANKCARD_TYPE:
      return getBankcardType();

    case CARDHOLDER_GENDER:
      return getCardholderGender();

    case CHANNEL_CODE:
      return getChannelCode();

    case CHANNEL_TRANS_TYPE:
      return getChannelTransType();

    case BANK_CODE:
      return getBankCode();

    case REQUEST_STATUS:
      return getRequestStatus();

    case REQUEST_IP:
      return getRequestIp();

    case PROVINCE_ID:
      return getProvinceId();

    case REQUEST_TIME:
      return getRequestTime();

    case PAY_FINISH_TIME:
      return getPayFinishTime();

    case SETTLE_PART:
      return getSettlePart();

    case BANK_ID:
      return getBankId();

    case BANK_SHORT_NAME:
      return getBankShortName();

    case PRODUCT_CODE:
      return getProductCode();

    case PRODUCT_NUMBER:
      return getProductNumber();

    case PRODUCT_DESCRIPTION:
      return getProductDescription();

    case SETTLE_AMOUNT:
      return getSettleAmount();

    case SETTLE_STATUS:
      return getSettleStatus();

    case CREATE_PERSON:
      return getCreatePerson();

    case CREATE_TIME:
      return getCreateTime();

    case UPDATE_PERSON:
      return getUpdatePerson();

    case UPDATE_TIME:
      return getUpdateTime();

    case CHANNLE_NO:
      return getChannleNo();

    case FEE_AMOUNT:
      return getFeeAmount();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case MERCHANT_NO:
      return isSetMerchantNo();
    case TRANS_NO:
      return isSetTransNo();
    case MERCHANT_ID:
      return isSetMerchantId();
    case REQUEST_AMOUNT:
      return isSetRequestAmount();
    case PAY_AMOUNT:
      return isSetPayAmount();
    case BANKCARD_TYPE:
      return isSetBankcardType();
    case CARDHOLDER_GENDER:
      return isSetCardholderGender();
    case CHANNEL_CODE:
      return isSetChannelCode();
    case CHANNEL_TRANS_TYPE:
      return isSetChannelTransType();
    case BANK_CODE:
      return isSetBankCode();
    case REQUEST_STATUS:
      return isSetRequestStatus();
    case REQUEST_IP:
      return isSetRequestIp();
    case PROVINCE_ID:
      return isSetProvinceId();
    case REQUEST_TIME:
      return isSetRequestTime();
    case PAY_FINISH_TIME:
      return isSetPayFinishTime();
    case SETTLE_PART:
      return isSetSettlePart();
    case BANK_ID:
      return isSetBankId();
    case BANK_SHORT_NAME:
      return isSetBankShortName();
    case PRODUCT_CODE:
      return isSetProductCode();
    case PRODUCT_NUMBER:
      return isSetProductNumber();
    case PRODUCT_DESCRIPTION:
      return isSetProductDescription();
    case SETTLE_AMOUNT:
      return isSetSettleAmount();
    case SETTLE_STATUS:
      return isSetSettleStatus();
    case CREATE_PERSON:
      return isSetCreatePerson();
    case CREATE_TIME:
      return isSetCreateTime();
    case UPDATE_PERSON:
      return isSetUpdatePerson();
    case UPDATE_TIME:
      return isSetUpdateTime();
    case CHANNLE_NO:
      return isSetChannleNo();
    case FEE_AMOUNT:
      return isSetFeeAmount();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BillingClearModel)
      return this.equals((BillingClearModel)that);
    return false;
  }

  public boolean equals(BillingClearModel that) {
    if (that == null)
      return false;

    boolean this_present_merchantNo = true && this.isSetMerchantNo();
    boolean that_present_merchantNo = true && that.isSetMerchantNo();
    if (this_present_merchantNo || that_present_merchantNo) {
      if (!(this_present_merchantNo && that_present_merchantNo))
        return false;
      if (!this.merchantNo.equals(that.merchantNo))
        return false;
    }

    boolean this_present_transNo = true && this.isSetTransNo();
    boolean that_present_transNo = true && that.isSetTransNo();
    if (this_present_transNo || that_present_transNo) {
      if (!(this_present_transNo && that_present_transNo))
        return false;
      if (!this.transNo.equals(that.transNo))
        return false;
    }

    boolean this_present_merchantId = true && this.isSetMerchantId();
    boolean that_present_merchantId = true && that.isSetMerchantId();
    if (this_present_merchantId || that_present_merchantId) {
      if (!(this_present_merchantId && that_present_merchantId))
        return false;
      if (!this.merchantId.equals(that.merchantId))
        return false;
    }

    boolean this_present_requestAmount = true && this.isSetRequestAmount();
    boolean that_present_requestAmount = true && that.isSetRequestAmount();
    if (this_present_requestAmount || that_present_requestAmount) {
      if (!(this_present_requestAmount && that_present_requestAmount))
        return false;
      if (!this.requestAmount.equals(that.requestAmount))
        return false;
    }

    boolean this_present_payAmount = true && this.isSetPayAmount();
    boolean that_present_payAmount = true && that.isSetPayAmount();
    if (this_present_payAmount || that_present_payAmount) {
      if (!(this_present_payAmount && that_present_payAmount))
        return false;
      if (!this.payAmount.equals(that.payAmount))
        return false;
    }

    boolean this_present_bankcardType = true && this.isSetBankcardType();
    boolean that_present_bankcardType = true && that.isSetBankcardType();
    if (this_present_bankcardType || that_present_bankcardType) {
      if (!(this_present_bankcardType && that_present_bankcardType))
        return false;
      if (!this.bankcardType.equals(that.bankcardType))
        return false;
    }

    boolean this_present_cardholderGender = true && this.isSetCardholderGender();
    boolean that_present_cardholderGender = true && that.isSetCardholderGender();
    if (this_present_cardholderGender || that_present_cardholderGender) {
      if (!(this_present_cardholderGender && that_present_cardholderGender))
        return false;
      if (!this.cardholderGender.equals(that.cardholderGender))
        return false;
    }

    boolean this_present_channelCode = true && this.isSetChannelCode();
    boolean that_present_channelCode = true && that.isSetChannelCode();
    if (this_present_channelCode || that_present_channelCode) {
      if (!(this_present_channelCode && that_present_channelCode))
        return false;
      if (!this.channelCode.equals(that.channelCode))
        return false;
    }

    boolean this_present_channelTransType = true && this.isSetChannelTransType();
    boolean that_present_channelTransType = true && that.isSetChannelTransType();
    if (this_present_channelTransType || that_present_channelTransType) {
      if (!(this_present_channelTransType && that_present_channelTransType))
        return false;
      if (!this.channelTransType.equals(that.channelTransType))
        return false;
    }

    boolean this_present_bankCode = true && this.isSetBankCode();
    boolean that_present_bankCode = true && that.isSetBankCode();
    if (this_present_bankCode || that_present_bankCode) {
      if (!(this_present_bankCode && that_present_bankCode))
        return false;
      if (!this.bankCode.equals(that.bankCode))
        return false;
    }

    boolean this_present_requestStatus = true && this.isSetRequestStatus();
    boolean that_present_requestStatus = true && that.isSetRequestStatus();
    if (this_present_requestStatus || that_present_requestStatus) {
      if (!(this_present_requestStatus && that_present_requestStatus))
        return false;
      if (!this.requestStatus.equals(that.requestStatus))
        return false;
    }

    boolean this_present_requestIp = true && this.isSetRequestIp();
    boolean that_present_requestIp = true && that.isSetRequestIp();
    if (this_present_requestIp || that_present_requestIp) {
      if (!(this_present_requestIp && that_present_requestIp))
        return false;
      if (!this.requestIp.equals(that.requestIp))
        return false;
    }

    boolean this_present_provinceId = true && this.isSetProvinceId();
    boolean that_present_provinceId = true && that.isSetProvinceId();
    if (this_present_provinceId || that_present_provinceId) {
      if (!(this_present_provinceId && that_present_provinceId))
        return false;
      if (!this.provinceId.equals(that.provinceId))
        return false;
    }

    boolean this_present_requestTime = true && this.isSetRequestTime();
    boolean that_present_requestTime = true && that.isSetRequestTime();
    if (this_present_requestTime || that_present_requestTime) {
      if (!(this_present_requestTime && that_present_requestTime))
        return false;
      if (!this.requestTime.equals(that.requestTime))
        return false;
    }

    boolean this_present_payFinishTime = true && this.isSetPayFinishTime();
    boolean that_present_payFinishTime = true && that.isSetPayFinishTime();
    if (this_present_payFinishTime || that_present_payFinishTime) {
      if (!(this_present_payFinishTime && that_present_payFinishTime))
        return false;
      if (!this.payFinishTime.equals(that.payFinishTime))
        return false;
    }

    boolean this_present_settlePart = true && this.isSetSettlePart();
    boolean that_present_settlePart = true && that.isSetSettlePart();
    if (this_present_settlePart || that_present_settlePart) {
      if (!(this_present_settlePart && that_present_settlePart))
        return false;
      if (!this.settlePart.equals(that.settlePart))
        return false;
    }

    boolean this_present_bankId = true && this.isSetBankId();
    boolean that_present_bankId = true && that.isSetBankId();
    if (this_present_bankId || that_present_bankId) {
      if (!(this_present_bankId && that_present_bankId))
        return false;
      if (!this.bankId.equals(that.bankId))
        return false;
    }

    boolean this_present_bankShortName = true && this.isSetBankShortName();
    boolean that_present_bankShortName = true && that.isSetBankShortName();
    if (this_present_bankShortName || that_present_bankShortName) {
      if (!(this_present_bankShortName && that_present_bankShortName))
        return false;
      if (!this.bankShortName.equals(that.bankShortName))
        return false;
    }

    boolean this_present_productCode = true && this.isSetProductCode();
    boolean that_present_productCode = true && that.isSetProductCode();
    if (this_present_productCode || that_present_productCode) {
      if (!(this_present_productCode && that_present_productCode))
        return false;
      if (!this.productCode.equals(that.productCode))
        return false;
    }

    boolean this_present_productNumber = true && this.isSetProductNumber();
    boolean that_present_productNumber = true && that.isSetProductNumber();
    if (this_present_productNumber || that_present_productNumber) {
      if (!(this_present_productNumber && that_present_productNumber))
        return false;
      if (!this.productNumber.equals(that.productNumber))
        return false;
    }

    boolean this_present_productDescription = true && this.isSetProductDescription();
    boolean that_present_productDescription = true && that.isSetProductDescription();
    if (this_present_productDescription || that_present_productDescription) {
      if (!(this_present_productDescription && that_present_productDescription))
        return false;
      if (!this.productDescription.equals(that.productDescription))
        return false;
    }

    boolean this_present_settleAmount = true && this.isSetSettleAmount();
    boolean that_present_settleAmount = true && that.isSetSettleAmount();
    if (this_present_settleAmount || that_present_settleAmount) {
      if (!(this_present_settleAmount && that_present_settleAmount))
        return false;
      if (!this.settleAmount.equals(that.settleAmount))
        return false;
    }

    boolean this_present_settleStatus = true && this.isSetSettleStatus();
    boolean that_present_settleStatus = true && that.isSetSettleStatus();
    if (this_present_settleStatus || that_present_settleStatus) {
      if (!(this_present_settleStatus && that_present_settleStatus))
        return false;
      if (!this.settleStatus.equals(that.settleStatus))
        return false;
    }

    boolean this_present_createPerson = true && this.isSetCreatePerson();
    boolean that_present_createPerson = true && that.isSetCreatePerson();
    if (this_present_createPerson || that_present_createPerson) {
      if (!(this_present_createPerson && that_present_createPerson))
        return false;
      if (!this.createPerson.equals(that.createPerson))
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_updatePerson = true && this.isSetUpdatePerson();
    boolean that_present_updatePerson = true && that.isSetUpdatePerson();
    if (this_present_updatePerson || that_present_updatePerson) {
      if (!(this_present_updatePerson && that_present_updatePerson))
        return false;
      if (!this.updatePerson.equals(that.updatePerson))
        return false;
    }

    boolean this_present_updateTime = true && this.isSetUpdateTime();
    boolean that_present_updateTime = true && that.isSetUpdateTime();
    if (this_present_updateTime || that_present_updateTime) {
      if (!(this_present_updateTime && that_present_updateTime))
        return false;
      if (!this.updateTime.equals(that.updateTime))
        return false;
    }

    boolean this_present_channleNo = true && this.isSetChannleNo();
    boolean that_present_channleNo = true && that.isSetChannleNo();
    if (this_present_channleNo || that_present_channleNo) {
      if (!(this_present_channleNo && that_present_channleNo))
        return false;
      if (!this.channleNo.equals(that.channleNo))
        return false;
    }

    boolean this_present_feeAmount = true && this.isSetFeeAmount();
    boolean that_present_feeAmount = true && that.isSetFeeAmount();
    if (this_present_feeAmount || that_present_feeAmount) {
      if (!(this_present_feeAmount && that_present_feeAmount))
        return false;
      if (!this.feeAmount.equals(that.feeAmount))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_merchantNo = true && (isSetMerchantNo());
    list.add(present_merchantNo);
    if (present_merchantNo)
      list.add(merchantNo);

    boolean present_transNo = true && (isSetTransNo());
    list.add(present_transNo);
    if (present_transNo)
      list.add(transNo);

    boolean present_merchantId = true && (isSetMerchantId());
    list.add(present_merchantId);
    if (present_merchantId)
      list.add(merchantId);

    boolean present_requestAmount = true && (isSetRequestAmount());
    list.add(present_requestAmount);
    if (present_requestAmount)
      list.add(requestAmount);

    boolean present_payAmount = true && (isSetPayAmount());
    list.add(present_payAmount);
    if (present_payAmount)
      list.add(payAmount);

    boolean present_bankcardType = true && (isSetBankcardType());
    list.add(present_bankcardType);
    if (present_bankcardType)
      list.add(bankcardType);

    boolean present_cardholderGender = true && (isSetCardholderGender());
    list.add(present_cardholderGender);
    if (present_cardholderGender)
      list.add(cardholderGender);

    boolean present_channelCode = true && (isSetChannelCode());
    list.add(present_channelCode);
    if (present_channelCode)
      list.add(channelCode);

    boolean present_channelTransType = true && (isSetChannelTransType());
    list.add(present_channelTransType);
    if (present_channelTransType)
      list.add(channelTransType);

    boolean present_bankCode = true && (isSetBankCode());
    list.add(present_bankCode);
    if (present_bankCode)
      list.add(bankCode);

    boolean present_requestStatus = true && (isSetRequestStatus());
    list.add(present_requestStatus);
    if (present_requestStatus)
      list.add(requestStatus);

    boolean present_requestIp = true && (isSetRequestIp());
    list.add(present_requestIp);
    if (present_requestIp)
      list.add(requestIp);

    boolean present_provinceId = true && (isSetProvinceId());
    list.add(present_provinceId);
    if (present_provinceId)
      list.add(provinceId);

    boolean present_requestTime = true && (isSetRequestTime());
    list.add(present_requestTime);
    if (present_requestTime)
      list.add(requestTime);

    boolean present_payFinishTime = true && (isSetPayFinishTime());
    list.add(present_payFinishTime);
    if (present_payFinishTime)
      list.add(payFinishTime);

    boolean present_settlePart = true && (isSetSettlePart());
    list.add(present_settlePart);
    if (present_settlePart)
      list.add(settlePart);

    boolean present_bankId = true && (isSetBankId());
    list.add(present_bankId);
    if (present_bankId)
      list.add(bankId);

    boolean present_bankShortName = true && (isSetBankShortName());
    list.add(present_bankShortName);
    if (present_bankShortName)
      list.add(bankShortName);

    boolean present_productCode = true && (isSetProductCode());
    list.add(present_productCode);
    if (present_productCode)
      list.add(productCode);

    boolean present_productNumber = true && (isSetProductNumber());
    list.add(present_productNumber);
    if (present_productNumber)
      list.add(productNumber);

    boolean present_productDescription = true && (isSetProductDescription());
    list.add(present_productDescription);
    if (present_productDescription)
      list.add(productDescription);

    boolean present_settleAmount = true && (isSetSettleAmount());
    list.add(present_settleAmount);
    if (present_settleAmount)
      list.add(settleAmount);

    boolean present_settleStatus = true && (isSetSettleStatus());
    list.add(present_settleStatus);
    if (present_settleStatus)
      list.add(settleStatus);

    boolean present_createPerson = true && (isSetCreatePerson());
    list.add(present_createPerson);
    if (present_createPerson)
      list.add(createPerson);

    boolean present_createTime = true && (isSetCreateTime());
    list.add(present_createTime);
    if (present_createTime)
      list.add(createTime);

    boolean present_updatePerson = true && (isSetUpdatePerson());
    list.add(present_updatePerson);
    if (present_updatePerson)
      list.add(updatePerson);

    boolean present_updateTime = true && (isSetUpdateTime());
    list.add(present_updateTime);
    if (present_updateTime)
      list.add(updateTime);

    boolean present_channleNo = true && (isSetChannleNo());
    list.add(present_channleNo);
    if (present_channleNo)
      list.add(channleNo);

    boolean present_feeAmount = true && (isSetFeeAmount());
    list.add(present_feeAmount);
    if (present_feeAmount)
      list.add(feeAmount);

    return list.hashCode();
  }

  @Override
  public int compareTo(BillingClearModel other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetMerchantNo()).compareTo(other.isSetMerchantNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantNo, other.merchantNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTransNo()).compareTo(other.isSetTransNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTransNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.transNo, other.transNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMerchantId()).compareTo(other.isSetMerchantId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMerchantId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.merchantId, other.merchantId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestAmount()).compareTo(other.isSetRequestAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestAmount, other.requestAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPayAmount()).compareTo(other.isSetPayAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.payAmount, other.payAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankcardType()).compareTo(other.isSetBankcardType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankcardType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankcardType, other.bankcardType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCardholderGender()).compareTo(other.isSetCardholderGender());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCardholderGender()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cardholderGender, other.cardholderGender);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannelCode()).compareTo(other.isSetChannelCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channelCode, other.channelCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannelTransType()).compareTo(other.isSetChannelTransType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannelTransType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channelTransType, other.channelTransType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankCode()).compareTo(other.isSetBankCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankCode, other.bankCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestStatus()).compareTo(other.isSetRequestStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestStatus, other.requestStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestIp()).compareTo(other.isSetRequestIp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestIp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestIp, other.requestIp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProvinceId()).compareTo(other.isSetProvinceId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProvinceId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.provinceId, other.provinceId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRequestTime()).compareTo(other.isSetRequestTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRequestTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.requestTime, other.requestTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPayFinishTime()).compareTo(other.isSetPayFinishTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayFinishTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.payFinishTime, other.payFinishTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettlePart()).compareTo(other.isSetSettlePart());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettlePart()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settlePart, other.settlePart);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankId()).compareTo(other.isSetBankId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankId, other.bankId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBankShortName()).compareTo(other.isSetBankShortName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBankShortName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bankShortName, other.bankShortName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductCode()).compareTo(other.isSetProductCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productCode, other.productCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductNumber()).compareTo(other.isSetProductNumber());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductNumber()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productNumber, other.productNumber);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductDescription()).compareTo(other.isSetProductDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productDescription, other.productDescription);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettleAmount()).compareTo(other.isSetSettleAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleAmount, other.settleAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSettleStatus()).compareTo(other.isSetSettleStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSettleStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.settleStatus, other.settleStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreatePerson()).compareTo(other.isSetCreatePerson());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreatePerson()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createPerson, other.createPerson);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdatePerson()).compareTo(other.isSetUpdatePerson());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdatePerson()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updatePerson, other.updatePerson);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUpdateTime()).compareTo(other.isSetUpdateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUpdateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.updateTime, other.updateTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannleNo()).compareTo(other.isSetChannleNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannleNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channleNo, other.channleNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFeeAmount()).compareTo(other.isSetFeeAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFeeAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.feeAmount, other.feeAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BillingClearModel(");
    boolean first = true;

    sb.append("merchantNo:");
    if (this.merchantNo == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("transNo:");
    if (this.transNo == null) {
      sb.append("null");
    } else {
      sb.append(this.transNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("merchantId:");
    if (this.merchantId == null) {
      sb.append("null");
    } else {
      sb.append(this.merchantId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestAmount:");
    if (this.requestAmount == null) {
      sb.append("null");
    } else {
      sb.append(this.requestAmount);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("payAmount:");
    if (this.payAmount == null) {
      sb.append("null");
    } else {
      sb.append(this.payAmount);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankcardType:");
    if (this.bankcardType == null) {
      sb.append("null");
    } else {
      sb.append(this.bankcardType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cardholderGender:");
    if (this.cardholderGender == null) {
      sb.append("null");
    } else {
      sb.append(this.cardholderGender);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("channelCode:");
    if (this.channelCode == null) {
      sb.append("null");
    } else {
      sb.append(this.channelCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("channelTransType:");
    if (this.channelTransType == null) {
      sb.append("null");
    } else {
      sb.append(this.channelTransType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankCode:");
    if (this.bankCode == null) {
      sb.append("null");
    } else {
      sb.append(this.bankCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestStatus:");
    if (this.requestStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.requestStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestIp:");
    if (this.requestIp == null) {
      sb.append("null");
    } else {
      sb.append(this.requestIp);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("provinceId:");
    if (this.provinceId == null) {
      sb.append("null");
    } else {
      sb.append(this.provinceId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("requestTime:");
    if (this.requestTime == null) {
      sb.append("null");
    } else {
      sb.append(this.requestTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("payFinishTime:");
    if (this.payFinishTime == null) {
      sb.append("null");
    } else {
      sb.append(this.payFinishTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settlePart:");
    if (this.settlePart == null) {
      sb.append("null");
    } else {
      sb.append(this.settlePart);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankId:");
    if (this.bankId == null) {
      sb.append("null");
    } else {
      sb.append(this.bankId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bankShortName:");
    if (this.bankShortName == null) {
      sb.append("null");
    } else {
      sb.append(this.bankShortName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productCode:");
    if (this.productCode == null) {
      sb.append("null");
    } else {
      sb.append(this.productCode);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productNumber:");
    if (this.productNumber == null) {
      sb.append("null");
    } else {
      sb.append(this.productNumber);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("productDescription:");
    if (this.productDescription == null) {
      sb.append("null");
    } else {
      sb.append(this.productDescription);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settleAmount:");
    if (this.settleAmount == null) {
      sb.append("null");
    } else {
      sb.append(this.settleAmount);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("settleStatus:");
    if (this.settleStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.settleStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createPerson:");
    if (this.createPerson == null) {
      sb.append("null");
    } else {
      sb.append(this.createPerson);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    if (this.createTime == null) {
      sb.append("null");
    } else {
      sb.append(this.createTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("updatePerson:");
    if (this.updatePerson == null) {
      sb.append("null");
    } else {
      sb.append(this.updatePerson);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("updateTime:");
    if (this.updateTime == null) {
      sb.append("null");
    } else {
      sb.append(this.updateTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("channleNo:");
    if (this.channleNo == null) {
      sb.append("null");
    } else {
      sb.append(this.channleNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("feeAmount:");
    if (this.feeAmount == null) {
      sb.append("null");
    } else {
      sb.append(this.feeAmount);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BillingClearModelStandardSchemeFactory implements SchemeFactory {
    public BillingClearModelStandardScheme getScheme() {
      return new BillingClearModelStandardScheme();
    }
  }

  private static class BillingClearModelStandardScheme extends StandardScheme<BillingClearModel> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BillingClearModel struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // MERCHANT_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantNo = iprot.readString();
              struct.setMerchantNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TRANS_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.transNo = iprot.readString();
              struct.setTransNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MERCHANT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.merchantId = iprot.readString();
              struct.setMerchantIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // REQUEST_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.requestAmount = iprot.readString();
              struct.setRequestAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PAY_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.payAmount = iprot.readString();
              struct.setPayAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // BANKCARD_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankcardType = iprot.readString();
              struct.setBankcardTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CARDHOLDER_GENDER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cardholderGender = iprot.readString();
              struct.setCardholderGenderIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CHANNEL_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.channelCode = iprot.readString();
              struct.setChannelCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CHANNEL_TRANS_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.channelTransType = iprot.readString();
              struct.setChannelTransTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // BANK_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankCode = iprot.readString();
              struct.setBankCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // REQUEST_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.requestStatus = iprot.readString();
              struct.setRequestStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // REQUEST_IP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.requestIp = iprot.readString();
              struct.setRequestIpIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // PROVINCE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.provinceId = iprot.readString();
              struct.setProvinceIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // REQUEST_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.requestTime = iprot.readString();
              struct.setRequestTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // PAY_FINISH_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.payFinishTime = iprot.readString();
              struct.setPayFinishTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // SETTLE_PART
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settlePart = iprot.readString();
              struct.setSettlePartIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // BANK_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankId = iprot.readString();
              struct.setBankIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // BANK_SHORT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bankShortName = iprot.readString();
              struct.setBankShortNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // PRODUCT_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productCode = iprot.readString();
              struct.setProductCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // PRODUCT_NUMBER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productNumber = iprot.readString();
              struct.setProductNumberIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // PRODUCT_DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productDescription = iprot.readString();
              struct.setProductDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // SETTLE_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settleAmount = iprot.readString();
              struct.setSettleAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // SETTLE_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.settleStatus = iprot.readString();
              struct.setSettleStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // CREATE_PERSON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createPerson = iprot.readString();
              struct.setCreatePersonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createTime = iprot.readString();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // UPDATE_PERSON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updatePerson = iprot.readString();
              struct.setUpdatePersonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // UPDATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.updateTime = iprot.readString();
              struct.setUpdateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // CHANNLE_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.channleNo = iprot.readString();
              struct.setChannleNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // FEE_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.feeAmount = iprot.readString();
              struct.setFeeAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BillingClearModel struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.merchantNo != null) {
        oprot.writeFieldBegin(MERCHANT_NO_FIELD_DESC);
        oprot.writeString(struct.merchantNo);
        oprot.writeFieldEnd();
      }
      if (struct.transNo != null) {
        oprot.writeFieldBegin(TRANS_NO_FIELD_DESC);
        oprot.writeString(struct.transNo);
        oprot.writeFieldEnd();
      }
      if (struct.merchantId != null) {
        oprot.writeFieldBegin(MERCHANT_ID_FIELD_DESC);
        oprot.writeString(struct.merchantId);
        oprot.writeFieldEnd();
      }
      if (struct.requestAmount != null) {
        oprot.writeFieldBegin(REQUEST_AMOUNT_FIELD_DESC);
        oprot.writeString(struct.requestAmount);
        oprot.writeFieldEnd();
      }
      if (struct.payAmount != null) {
        oprot.writeFieldBegin(PAY_AMOUNT_FIELD_DESC);
        oprot.writeString(struct.payAmount);
        oprot.writeFieldEnd();
      }
      if (struct.bankcardType != null) {
        oprot.writeFieldBegin(BANKCARD_TYPE_FIELD_DESC);
        oprot.writeString(struct.bankcardType);
        oprot.writeFieldEnd();
      }
      if (struct.cardholderGender != null) {
        oprot.writeFieldBegin(CARDHOLDER_GENDER_FIELD_DESC);
        oprot.writeString(struct.cardholderGender);
        oprot.writeFieldEnd();
      }
      if (struct.channelCode != null) {
        oprot.writeFieldBegin(CHANNEL_CODE_FIELD_DESC);
        oprot.writeString(struct.channelCode);
        oprot.writeFieldEnd();
      }
      if (struct.channelTransType != null) {
        oprot.writeFieldBegin(CHANNEL_TRANS_TYPE_FIELD_DESC);
        oprot.writeString(struct.channelTransType);
        oprot.writeFieldEnd();
      }
      if (struct.bankCode != null) {
        oprot.writeFieldBegin(BANK_CODE_FIELD_DESC);
        oprot.writeString(struct.bankCode);
        oprot.writeFieldEnd();
      }
      if (struct.requestStatus != null) {
        oprot.writeFieldBegin(REQUEST_STATUS_FIELD_DESC);
        oprot.writeString(struct.requestStatus);
        oprot.writeFieldEnd();
      }
      if (struct.requestIp != null) {
        oprot.writeFieldBegin(REQUEST_IP_FIELD_DESC);
        oprot.writeString(struct.requestIp);
        oprot.writeFieldEnd();
      }
      if (struct.provinceId != null) {
        oprot.writeFieldBegin(PROVINCE_ID_FIELD_DESC);
        oprot.writeString(struct.provinceId);
        oprot.writeFieldEnd();
      }
      if (struct.requestTime != null) {
        oprot.writeFieldBegin(REQUEST_TIME_FIELD_DESC);
        oprot.writeString(struct.requestTime);
        oprot.writeFieldEnd();
      }
      if (struct.payFinishTime != null) {
        oprot.writeFieldBegin(PAY_FINISH_TIME_FIELD_DESC);
        oprot.writeString(struct.payFinishTime);
        oprot.writeFieldEnd();
      }
      if (struct.settlePart != null) {
        oprot.writeFieldBegin(SETTLE_PART_FIELD_DESC);
        oprot.writeString(struct.settlePart);
        oprot.writeFieldEnd();
      }
      if (struct.bankId != null) {
        oprot.writeFieldBegin(BANK_ID_FIELD_DESC);
        oprot.writeString(struct.bankId);
        oprot.writeFieldEnd();
      }
      if (struct.bankShortName != null) {
        oprot.writeFieldBegin(BANK_SHORT_NAME_FIELD_DESC);
        oprot.writeString(struct.bankShortName);
        oprot.writeFieldEnd();
      }
      if (struct.productCode != null) {
        oprot.writeFieldBegin(PRODUCT_CODE_FIELD_DESC);
        oprot.writeString(struct.productCode);
        oprot.writeFieldEnd();
      }
      if (struct.productNumber != null) {
        oprot.writeFieldBegin(PRODUCT_NUMBER_FIELD_DESC);
        oprot.writeString(struct.productNumber);
        oprot.writeFieldEnd();
      }
      if (struct.productDescription != null) {
        oprot.writeFieldBegin(PRODUCT_DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.productDescription);
        oprot.writeFieldEnd();
      }
      if (struct.settleAmount != null) {
        oprot.writeFieldBegin(SETTLE_AMOUNT_FIELD_DESC);
        oprot.writeString(struct.settleAmount);
        oprot.writeFieldEnd();
      }
      if (struct.settleStatus != null) {
        oprot.writeFieldBegin(SETTLE_STATUS_FIELD_DESC);
        oprot.writeString(struct.settleStatus);
        oprot.writeFieldEnd();
      }
      if (struct.createPerson != null) {
        oprot.writeFieldBegin(CREATE_PERSON_FIELD_DESC);
        oprot.writeString(struct.createPerson);
        oprot.writeFieldEnd();
      }
      if (struct.createTime != null) {
        oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
        oprot.writeString(struct.createTime);
        oprot.writeFieldEnd();
      }
      if (struct.updatePerson != null) {
        oprot.writeFieldBegin(UPDATE_PERSON_FIELD_DESC);
        oprot.writeString(struct.updatePerson);
        oprot.writeFieldEnd();
      }
      if (struct.updateTime != null) {
        oprot.writeFieldBegin(UPDATE_TIME_FIELD_DESC);
        oprot.writeString(struct.updateTime);
        oprot.writeFieldEnd();
      }
      if (struct.channleNo != null) {
        oprot.writeFieldBegin(CHANNLE_NO_FIELD_DESC);
        oprot.writeString(struct.channleNo);
        oprot.writeFieldEnd();
      }
      if (struct.feeAmount != null) {
        oprot.writeFieldBegin(FEE_AMOUNT_FIELD_DESC);
        oprot.writeString(struct.feeAmount);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BillingClearModelTupleSchemeFactory implements SchemeFactory {
    public BillingClearModelTupleScheme getScheme() {
      return new BillingClearModelTupleScheme();
    }
  }

  private static class BillingClearModelTupleScheme extends TupleScheme<BillingClearModel> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BillingClearModel struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetMerchantNo()) {
        optionals.set(0);
      }
      if (struct.isSetTransNo()) {
        optionals.set(1);
      }
      if (struct.isSetMerchantId()) {
        optionals.set(2);
      }
      if (struct.isSetRequestAmount()) {
        optionals.set(3);
      }
      if (struct.isSetPayAmount()) {
        optionals.set(4);
      }
      if (struct.isSetBankcardType()) {
        optionals.set(5);
      }
      if (struct.isSetCardholderGender()) {
        optionals.set(6);
      }
      if (struct.isSetChannelCode()) {
        optionals.set(7);
      }
      if (struct.isSetChannelTransType()) {
        optionals.set(8);
      }
      if (struct.isSetBankCode()) {
        optionals.set(9);
      }
      if (struct.isSetRequestStatus()) {
        optionals.set(10);
      }
      if (struct.isSetRequestIp()) {
        optionals.set(11);
      }
      if (struct.isSetProvinceId()) {
        optionals.set(12);
      }
      if (struct.isSetRequestTime()) {
        optionals.set(13);
      }
      if (struct.isSetPayFinishTime()) {
        optionals.set(14);
      }
      if (struct.isSetSettlePart()) {
        optionals.set(15);
      }
      if (struct.isSetBankId()) {
        optionals.set(16);
      }
      if (struct.isSetBankShortName()) {
        optionals.set(17);
      }
      if (struct.isSetProductCode()) {
        optionals.set(18);
      }
      if (struct.isSetProductNumber()) {
        optionals.set(19);
      }
      if (struct.isSetProductDescription()) {
        optionals.set(20);
      }
      if (struct.isSetSettleAmount()) {
        optionals.set(21);
      }
      if (struct.isSetSettleStatus()) {
        optionals.set(22);
      }
      if (struct.isSetCreatePerson()) {
        optionals.set(23);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(24);
      }
      if (struct.isSetUpdatePerson()) {
        optionals.set(25);
      }
      if (struct.isSetUpdateTime()) {
        optionals.set(26);
      }
      if (struct.isSetChannleNo()) {
        optionals.set(27);
      }
      if (struct.isSetFeeAmount()) {
        optionals.set(28);
      }
      oprot.writeBitSet(optionals, 29);
      if (struct.isSetMerchantNo()) {
        oprot.writeString(struct.merchantNo);
      }
      if (struct.isSetTransNo()) {
        oprot.writeString(struct.transNo);
      }
      if (struct.isSetMerchantId()) {
        oprot.writeString(struct.merchantId);
      }
      if (struct.isSetRequestAmount()) {
        oprot.writeString(struct.requestAmount);
      }
      if (struct.isSetPayAmount()) {
        oprot.writeString(struct.payAmount);
      }
      if (struct.isSetBankcardType()) {
        oprot.writeString(struct.bankcardType);
      }
      if (struct.isSetCardholderGender()) {
        oprot.writeString(struct.cardholderGender);
      }
      if (struct.isSetChannelCode()) {
        oprot.writeString(struct.channelCode);
      }
      if (struct.isSetChannelTransType()) {
        oprot.writeString(struct.channelTransType);
      }
      if (struct.isSetBankCode()) {
        oprot.writeString(struct.bankCode);
      }
      if (struct.isSetRequestStatus()) {
        oprot.writeString(struct.requestStatus);
      }
      if (struct.isSetRequestIp()) {
        oprot.writeString(struct.requestIp);
      }
      if (struct.isSetProvinceId()) {
        oprot.writeString(struct.provinceId);
      }
      if (struct.isSetRequestTime()) {
        oprot.writeString(struct.requestTime);
      }
      if (struct.isSetPayFinishTime()) {
        oprot.writeString(struct.payFinishTime);
      }
      if (struct.isSetSettlePart()) {
        oprot.writeString(struct.settlePart);
      }
      if (struct.isSetBankId()) {
        oprot.writeString(struct.bankId);
      }
      if (struct.isSetBankShortName()) {
        oprot.writeString(struct.bankShortName);
      }
      if (struct.isSetProductCode()) {
        oprot.writeString(struct.productCode);
      }
      if (struct.isSetProductNumber()) {
        oprot.writeString(struct.productNumber);
      }
      if (struct.isSetProductDescription()) {
        oprot.writeString(struct.productDescription);
      }
      if (struct.isSetSettleAmount()) {
        oprot.writeString(struct.settleAmount);
      }
      if (struct.isSetSettleStatus()) {
        oprot.writeString(struct.settleStatus);
      }
      if (struct.isSetCreatePerson()) {
        oprot.writeString(struct.createPerson);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeString(struct.createTime);
      }
      if (struct.isSetUpdatePerson()) {
        oprot.writeString(struct.updatePerson);
      }
      if (struct.isSetUpdateTime()) {
        oprot.writeString(struct.updateTime);
      }
      if (struct.isSetChannleNo()) {
        oprot.writeString(struct.channleNo);
      }
      if (struct.isSetFeeAmount()) {
        oprot.writeString(struct.feeAmount);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BillingClearModel struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(29);
      if (incoming.get(0)) {
        struct.merchantNo = iprot.readString();
        struct.setMerchantNoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.transNo = iprot.readString();
        struct.setTransNoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.merchantId = iprot.readString();
        struct.setMerchantIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.requestAmount = iprot.readString();
        struct.setRequestAmountIsSet(true);
      }
      if (incoming.get(4)) {
        struct.payAmount = iprot.readString();
        struct.setPayAmountIsSet(true);
      }
      if (incoming.get(5)) {
        struct.bankcardType = iprot.readString();
        struct.setBankcardTypeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.cardholderGender = iprot.readString();
        struct.setCardholderGenderIsSet(true);
      }
      if (incoming.get(7)) {
        struct.channelCode = iprot.readString();
        struct.setChannelCodeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.channelTransType = iprot.readString();
        struct.setChannelTransTypeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.bankCode = iprot.readString();
        struct.setBankCodeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.requestStatus = iprot.readString();
        struct.setRequestStatusIsSet(true);
      }
      if (incoming.get(11)) {
        struct.requestIp = iprot.readString();
        struct.setRequestIpIsSet(true);
      }
      if (incoming.get(12)) {
        struct.provinceId = iprot.readString();
        struct.setProvinceIdIsSet(true);
      }
      if (incoming.get(13)) {
        struct.requestTime = iprot.readString();
        struct.setRequestTimeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.payFinishTime = iprot.readString();
        struct.setPayFinishTimeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.settlePart = iprot.readString();
        struct.setSettlePartIsSet(true);
      }
      if (incoming.get(16)) {
        struct.bankId = iprot.readString();
        struct.setBankIdIsSet(true);
      }
      if (incoming.get(17)) {
        struct.bankShortName = iprot.readString();
        struct.setBankShortNameIsSet(true);
      }
      if (incoming.get(18)) {
        struct.productCode = iprot.readString();
        struct.setProductCodeIsSet(true);
      }
      if (incoming.get(19)) {
        struct.productNumber = iprot.readString();
        struct.setProductNumberIsSet(true);
      }
      if (incoming.get(20)) {
        struct.productDescription = iprot.readString();
        struct.setProductDescriptionIsSet(true);
      }
      if (incoming.get(21)) {
        struct.settleAmount = iprot.readString();
        struct.setSettleAmountIsSet(true);
      }
      if (incoming.get(22)) {
        struct.settleStatus = iprot.readString();
        struct.setSettleStatusIsSet(true);
      }
      if (incoming.get(23)) {
        struct.createPerson = iprot.readString();
        struct.setCreatePersonIsSet(true);
      }
      if (incoming.get(24)) {
        struct.createTime = iprot.readString();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(25)) {
        struct.updatePerson = iprot.readString();
        struct.setUpdatePersonIsSet(true);
      }
      if (incoming.get(26)) {
        struct.updateTime = iprot.readString();
        struct.setUpdateTimeIsSet(true);
      }
      if (incoming.get(27)) {
        struct.channleNo = iprot.readString();
        struct.setChannleNoIsSet(true);
      }
      if (incoming.get(28)) {
        struct.feeAmount = iprot.readString();
        struct.setFeeAmountIsSet(true);
      }
    }
  }

}

